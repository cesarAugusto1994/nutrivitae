/*! X-editable - v1.5.1
* In-place editing with Twitter Bootstrap, jQuery UI or pure jQuery
* http://github.com/vitalets/x-editable
* Copyright (c) 2013 Vitaliy Potapov; Licensed MIT */
function _classCallCheck(t, e) {
    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
}

!function (t) {
    "use strict";
    var e = function (e, i) {
        this.options = t.extend({}, t.fn.editableform.defaults, i), this.$div = t(e), this.options.scope || (this.options.scope = this)
    };
    e.prototype = {
        constructor: e, initInput: function () {
            this.input = this.options.input, this.value = this.input.str2value(this.options.value), this.input.prerender()
        }, initTemplate: function () {
            this.$form = t(t.fn.editableform.template)
        }, initButtons: function () {
            var e = this.$form.find(".editable-buttons");
            e.append(t.fn.editableform.buttons), "bottom" === this.options.showbuttons && e.addClass("editable-buttons-bottom")
        }, render: function () {
            this.$loading = t(t.fn.editableform.loading), this.$div.empty().append(this.$loading), this.initTemplate(), this.options.showbuttons ? this.initButtons() : this.$form.find(".editable-buttons").remove(), this.showLoading(), this.isSaving = !1, this.$div.triggerHandler("rendering"), this.initInput(), this.$form.find("div.editable-input").append(this.input.$tpl), this.$div.append(this.$form), t.when(this.input.render()).then(t.proxy(function () {
                if (this.options.showbuttons || this.input.autosubmit(), this.$form.find(".editable-cancel").click(t.proxy(this.cancel, this)), this.input.error) this.error(this.input.error), this.$form.find(".editable-submit").attr("disabled", !0), this.input.$input.attr("disabled", !0), this.$form.submit(function (t) {
                    t.preventDefault()
                }); else {
                    this.error(!1), this.input.$input.removeAttr("disabled"), this.$form.find(".editable-submit").removeAttr("disabled");
                    var e = null === this.value || this.value === undefined || "" === this.value ? this.options.defaultValue : this.value;
                    this.input.value2input(e), this.$form.submit(t.proxy(this.submit, this))
                }
                this.$div.triggerHandler("rendered"), this.showForm(), this.input.postrender && this.input.postrender()
            }, this))
        }, cancel: function () {
            this.$div.triggerHandler("cancel")
        }, showLoading: function () {
            var t, e;
            this.$form ? (t = this.$form.outerWidth(), e = this.$form.outerHeight(), t && this.$loading.width(t), e && this.$loading.height(e), this.$form.hide()) : (t = this.$loading.parent().width()) && this.$loading.width(t), this.$loading.show()
        }, showForm: function (t) {
            this.$loading.hide(), this.$form.show(), !1 !== t && this.input.activate(), this.$div.triggerHandler("show")
        }, error: function (e) {
            var i, n = this.$form.find(".control-group"), a = this.$form.find(".editable-error-block");
            if (!1 === e) n.removeClass(t.fn.editableform.errorGroupClass), a.removeClass(t.fn.editableform.errorBlockClass).empty().hide(); else {
                if (e) {
                    i = ("" + e).split("\n");
                    for (var s = 0; s < i.length; s++) i[s] = t("<div>").text(i[s]).html();
                    e = i.join("<br>")
                }
                n.addClass(t.fn.editableform.errorGroupClass), a.addClass(t.fn.editableform.errorBlockClass).html(e).show()
            }
        }, submit: function (e) {
            e.stopPropagation(), e.preventDefault();
            var i = this.input.input2value(), n = this.validate(i);
            if ("object" === t.type(n) && n.newValue !== undefined) {
                if (i = n.newValue, this.input.value2input(i), "string" == typeof n.msg) return this.error(n.msg), void this.showForm()
            } else if (n) return this.error(n), void this.showForm();
            if (!this.options.savenochange && this.input.value2str(i) == this.input.value2str(this.value)) return void this.$div.triggerHandler("nochange");
            var a = this.input.value2submit(i);
            this.isSaving = !0, t.when(this.save(a)).done(t.proxy(function (t) {
                this.isSaving = !1;
                var e = "function" == typeof this.options.success ? this.options.success.call(this.options.scope, t, i) : null;
                return !1 === e ? (this.error(!1), void this.showForm(!1)) : "string" == typeof e ? (this.error(e), void this.showForm()) : (e && "object" == typeof e && e.hasOwnProperty("newValue") && (i = e.newValue), this.error(!1), this.value = i, void this.$div.triggerHandler("save", {
                    newValue: i,
                    submitValue: a,
                    response: t
                }))
            }, this)).fail(t.proxy(function (t) {
                this.isSaving = !1;
                var e;
                e = "function" == typeof this.options.error ? this.options.error.call(this.options.scope, t, i) : "string" == typeof t ? t : t.responseText || t.statusText || "Unknown error!", this.error(e), this.showForm()
            }, this))
        }, save: function (e) {
            this.options.pk = t.fn.editableutils.tryParseJson(this.options.pk, !0);
            var i,
                n = "function" == typeof this.options.pk ? this.options.pk.call(this.options.scope) : this.options.pk,
                a = !!("function" == typeof this.options.url || this.options.url && ("always" === this.options.send || "auto" === this.options.send && null !== n && n !== undefined));
            if (a) return this.showLoading(), i = {
                name: this.options.name || "",
                value: e,
                pk: n
            }, "function" == typeof this.options.params ? i = this.options.params.call(this.options.scope, i) : (this.options.params = t.fn.editableutils.tryParseJson(this.options.params, !0), t.extend(i, this.options.params)), "function" == typeof this.options.url ? this.options.url.call(this.options.scope, i) : t.ajax(t.extend({
                url: this.options.url,
                data: i,
                type: "POST"
            }, this.options.ajaxOptions))
        }, validate: function (t) {
            if (t === undefined && (t = this.value), "function" == typeof this.options.validate) return this.options.validate.call(this.options.scope, t)
        }, option: function (t, e) {
            t in this.options && (this.options[t] = e), "value" === t && this.setValue(e)
        }, setValue: function (t, e) {
            this.value = e ? this.input.str2value(t) : t, this.$form && this.$form.is(":visible") && this.input.value2input(this.value)
        }
    }, t.fn.editableform = function (i) {
        var n = arguments;
        return this.each(function () {
            var a = t(this), s = a.data("editableform"), o = "object" == typeof i && i;
            s || a.data("editableform", s = new e(this, o)), "string" == typeof i && s[i].apply(s, Array.prototype.slice.call(n, 1))
        })
    }, t.fn.editableform.Constructor = e, t.fn.editableform.defaults = {
        type: "text",
        url: null,
        params: null,
        name: null,
        pk: null,
        value: null,
        defaultValue: null,
        send: "auto",
        validate: null,
        success: null,
        error: null,
        ajaxOptions: null,
        showbuttons: !0,
        scope: null,
        savenochange: !1
    }, t.fn.editableform.template = '<form class="form-inline editableform"><div class="control-group"><div><div class="editable-input"></div><div class="editable-buttons"></div></div><div class="editable-error-block"></div></div></form>', t.fn.editableform.loading = '<div class="editableform-loading"></div>', t.fn.editableform.buttons = '<button type="submit" class="editable-submit">ok</button><button type="button" class="editable-cancel">cancel</button>', t.fn.editableform.errorGroupClass = null, t.fn.editableform.errorBlockClass = "editable-error", t.fn.editableform.engine = "jquery"
}(window.jQuery), function (t) {
    "use strict";
    t.fn.editableutils = {
        inherit: function (t, e) {
            var i = function () {
            };
            i.prototype = e.prototype, t.prototype = new i, t.prototype.constructor = t, t.superclass = e.prototype
        }, setCursorPosition: function (t, e) {
            if (t.setSelectionRange) t.setSelectionRange(e, e); else if (t.createTextRange) {
                var i = t.createTextRange();
                i.collapse(!0), i.moveEnd("character", e), i.moveStart("character", e), i.select()
            }
        }, tryParseJson: function (t, e) {
            if ("string" == typeof t && t.length && t.match(/^[\{\[].*[\}\]]$/)) if (e) try {
                t = new Function("return " + t)()
            } catch (t) {
            } finally {
                return t
            } else t = new Function("return " + t)();
            return t
        }, sliceObj: function (e, i, n) {
            var a, s, o = {};
            if (!t.isArray(i) || !i.length) return o;
            for (var r = 0; r < i.length; r++) a = i[r], e.hasOwnProperty(a) && (o[a] = e[a]), !0 !== n && (s = a.toLowerCase(), e.hasOwnProperty(s) && (o[a] = e[s]));
            return o
        }, getConfigData: function (e) {
            var i = {};
            return t.each(e.data(), function (t, e) {
                ("object" != typeof e || e && "object" == typeof e && (e.constructor === Object || e.constructor === Array)) && (i[t] = e)
            }), i
        }, objectKeys: function (t) {
            if (Object.keys) return Object.keys(t);
            if (t !== Object(t)) throw new TypeError("Object.keys called on a non-object");
            var e, i = [];
            for (e in t) Object.prototype.hasOwnProperty.call(t, e) && i.push(e);
            return i
        }, escape: function (e) {
            return t("<div>").text(e).html()
        }, itemsByValue: function (e, i, n) {
            if (!i || null === e) return [];
            if ("function" != typeof n) {
                var a = n || "value";
                n = function (t) {
                    return t[a]
                }
            }
            var s = t.isArray(e), o = [], r = this;
            return t.each(i, function (i, a) {
                if (a.children) o = o.concat(r.itemsByValue(e, a.children, n)); else if (s) t.grep(e, function (t) {
                    return t == (a && "object" == typeof a ? n(a) : a)
                }).length && o.push(a); else {
                    var l = a && "object" == typeof a ? n(a) : a;
                    e == l && o.push(a)
                }
            }), o
        }, createInput: function (e) {
            var i, n, a = e.type;
            return "date" === a && ("inline" === e.mode ? t.fn.editabletypes.datefield ? a = "datefield" : t.fn.editabletypes.dateuifield && (a = "dateuifield") : t.fn.editabletypes.date ? a = "date" : t.fn.editabletypes.dateui && (a = "dateui"), "date" !== a || t.fn.editabletypes.date || (a = "combodate")), "datetime" === a && "inline" === e.mode && (a = "datetimefield"), "wysihtml5" !== a || t.fn.editabletypes[a] || (a = "textarea"), "function" == typeof t.fn.editabletypes[a] ? (i = t.fn.editabletypes[a], n = this.sliceObj(e, this.objectKeys(i.defaults)), new i(n)) : (t.error("Unknown type: " + a), !1)
        }, supportsTransitions: function () {
            var t = document.body || document.documentElement, e = t.style, i = "transition",
                n = ["Moz", "Webkit", "Khtml", "O", "ms"];
            if ("string" == typeof e[i]) return !0;
            i = i.charAt(0).toUpperCase() + i.substr(1);
            for (var a = 0; a < n.length; a++) if ("string" == typeof e[n[a] + i]) return !0;
            return !1
        }
    }
}(window.jQuery), function (t) {
    "use strict";
    var e = function (t, e) {
        this.init(t, e)
    }, i = function (t, e) {
        this.init(t, e)
    };
    e.prototype = {
        containerName: null,
        containerDataName: null,
        innerCss: null,
        containerClass: "editable-container editable-popup",
        defaults: {},
        init: function (i, n) {
            this.$element = t(i), this.options = t.extend({}, t.fn.editableContainer.defaults, n), this.splitOptions(), this.formOptions.scope = this.$element[0], this.initContainer(), this.delayedHide = !1, this.$element.on("destroyed", t.proxy(function () {
                this.destroy()
            }, this)), t(document).data("editable-handlers-attached") || (t(document).on("keyup.editable", function (e) {
                27 === e.which && t(".editable-open").editableContainer("hide")
            }), t(document).on("click.editable", function (i) {
                var n, a = t(i.target),
                    s = [".editable-container", ".ui-datepicker-header", ".datepicker", ".modal-backdrop", ".bootstrap-wysihtml5-insert-image-modal", ".bootstrap-wysihtml5-insert-link-modal"];
                if (t.contains(document.documentElement, i.target) && !a.is(document)) {
                    for (n = 0; n < s.length; n++) if (a.is(s[n]) || a.parents(s[n]).length) return;
                    e.prototype.closeOthers(i.target)
                }
            }), t(document).data("editable-handlers-attached", !0))
        },
        splitOptions: function () {
            if (this.containerOptions = {}, this.formOptions = {}, !t.fn[this.containerName]) throw new Error(this.containerName + " not found. Have you included corresponding js file?");
            for (var e in this.options) e in this.defaults ? this.containerOptions[e] = this.options[e] : this.formOptions[e] = this.options[e]
        },
        tip: function () {
            return this.container() ? this.container().$tip : null
        },
        container: function () {
            var t;
            return this.containerDataName && (t = this.$element.data(this.containerDataName)) ? t : t = this.$element.data(this.containerName)
        },
        call: function () {
            this.$element[this.containerName].apply(this.$element, arguments)
        },
        initContainer: function () {
            this.call(this.containerOptions)
        },
        renderForm: function () {
            this.$form.editableform(this.formOptions).on({
                save: t.proxy(this.save, this),
                nochange: t.proxy(function () {
                    this.hide("nochange")
                }, this),
                cancel: t.proxy(function () {
                    this.hide("cancel")
                }, this),
                show: t.proxy(function () {
                    this.delayedHide ? (this.hide(this.delayedHide.reason), this.delayedHide = !1) : this.setPosition()
                }, this),
                rendering: t.proxy(this.setPosition, this),
                resize: t.proxy(this.setPosition, this),
                rendered: t.proxy(function () {
                    this.$element.triggerHandler("shown", t(this.options.scope).data("editable"))
                }, this)
            }).editableform("render")
        },
        show: function (e) {
            this.$element.addClass("editable-open"), !1 !== e && this.closeOthers(this.$element[0]), this.innerShow(), this.tip().addClass(this.containerClass), this.$form, this.$form = t("<div>"), this.tip().is(this.innerCss) ? this.tip().append(this.$form) : this.tip().find(this.innerCss).append(this.$form), this.renderForm()
        },
        hide: function (t) {
            if (this.tip() && this.tip().is(":visible") && this.$element.hasClass("editable-open")) {
                if (this.$form.data("editableform").isSaving) return void(this.delayedHide = {reason: t});
                this.delayedHide = !1, this.$element.removeClass("editable-open"), this.innerHide(), this.$element.triggerHandler("hidden", t || "manual")
            }
        },
        innerShow: function () {
        },
        innerHide: function () {
        },
        toggle: function (t) {
            this.container() && this.tip() && this.tip().is(":visible") ? this.hide() : this.show(t)
        },
        setPosition: function () {
        },
        save: function (t, e) {
            this.$element.triggerHandler("save", e), this.hide("save")
        },
        option: function (t, e) {
            this.options[t] = e, t in this.containerOptions ? (this.containerOptions[t] = e, this.setContainerOption(t, e)) : (this.formOptions[t] = e, this.$form && this.$form.editableform("option", t, e))
        },
        setContainerOption: function (t, e) {
            this.call("option", t, e)
        },
        destroy: function () {
            this.hide(), this.innerDestroy(), this.$element.off("destroyed"), this.$element.removeData("editableContainer")
        },
        innerDestroy: function () {
        },
        closeOthers: function (e) {
            t(".editable-open").each(function (i, n) {
                if (n !== e && !t(n).find(e).length) {
                    var a = t(n), s = a.data("editableContainer");
                    s && ("cancel" === s.options.onblur ? a.data("editableContainer").hide("onblur") : "submit" === s.options.onblur && a.data("editableContainer").tip().find("form").submit())
                }
            })
        },
        activate: function () {
            this.tip && this.tip().is(":visible") && this.$form && this.$form.data("editableform").input.activate()
        }
    }, t.fn.editableContainer = function (n) {
        var a = arguments;
        return this.each(function () {
            var s = t(this), o = "editableContainer", r = s.data(o), l = "object" == typeof n && n,
                d = "inline" === l.mode ? i : e;
            r || s.data(o, r = new d(this, l)), "string" == typeof n && r[n].apply(r, Array.prototype.slice.call(a, 1))
        })
    }, t.fn.editableContainer.Popup = e, t.fn.editableContainer.Inline = i, t.fn.editableContainer.defaults = {
        value: null,
        placement: "top",
        autohide: !0,
        onblur: "cancel",
        anim: !1,
        mode: "popup"
    }, jQuery.event.special.destroyed = {
        remove: function (t) {
            t.handler && t.handler()
        }
    }
}(window.jQuery), function (t) {
    "use strict";
    t.extend(t.fn.editableContainer.Inline.prototype, t.fn.editableContainer.Popup.prototype, {
        containerName: "editableform",
        innerCss: ".editable-inline",
        containerClass: "editable-container editable-inline",
        initContainer: function () {
            this.$tip = t("<span></span>"), this.options.anim || (this.options.anim = 0)
        },
        splitOptions: function () {
            this.containerOptions = {}, this.formOptions = this.options
        },
        tip: function () {
            return this.$tip
        },
        innerShow: function () {
            this.$element.hide(), this.tip().insertAfter(this.$element).show()
        },
        innerHide: function () {
            this.$tip.hide(this.options.anim, t.proxy(function () {
                this.$element.show(), this.innerDestroy()
            }, this))
        },
        innerDestroy: function () {
            this.tip() && this.tip().empty().remove()
        }
    })
}(window.jQuery), function (t) {
    "use strict";
    var e = function (e, i) {
        this.$element = t(e), this.options = t.extend({}, t.fn.editable.defaults, i, t.fn.editableutils.getConfigData(this.$element)), this.options.selector ? this.initLive() : this.init(), this.options.highlight && !t.fn.editableutils.supportsTransitions() && (this.options.highlight = !1)
    };
    e.prototype = {
        constructor: e, init: function () {
            var e, i = !1;
            if (this.options.name = this.options.name || this.$element.attr("id"), this.options.scope = this.$element[0], this.input = t.fn.editableutils.createInput(this.options), this.input) {
                switch (this.options.value === undefined || null === this.options.value ? (this.value = this.input.html2value(t.trim(this.$element.html())), i = !0) : (this.options.value = t.fn.editableutils.tryParseJson(this.options.value, !0), "string" == typeof this.options.value ? this.value = this.input.str2value(this.options.value) : this.value = this.options.value), this.$element.addClass("editable"), "textarea" === this.input.type && this.$element.addClass("editable-pre-wrapped"), "manual" !== this.options.toggle ? (this.$element.addClass("editable-click"), this.$element.on(this.options.toggle + ".editable", t.proxy(function (t) {
                    if (this.options.disabled || t.preventDefault(), "mouseenter" === this.options.toggle) this.show(); else {
                        var e = "click" !== this.options.toggle;
                        this.toggle(e)
                    }
                }, this))) : this.$element.attr("tabindex", -1), "function" == typeof this.options.display && (this.options.autotext = "always"), this.options.autotext) {
                    case"always":
                        e = !0;
                        break;
                    case"auto":
                        e = !t.trim(this.$element.text()).length && null !== this.value && this.value !== undefined && !i;
                        break;
                    default:
                        e = !1
                }
                t.when(!e || this.render()).then(t.proxy(function () {
                    this.options.disabled ? this.disable() : this.enable(), this.$element.triggerHandler("init", this)
                }, this))
            }
        }, initLive: function () {
            var e = this.options.selector;
            this.options.selector = !1, this.options.autotext = "never", this.$element.on(this.options.toggle + ".editable", e, t.proxy(function (e) {
                var i = t(e.target);
                i.data("editable") || (i.hasClass(this.options.emptyclass) && i.empty(), i.editable(this.options).trigger(e))
            }, this))
        }, render: function (t) {
            if (!1 !== this.options.display) return this.input.value2htmlFinal ? this.input.value2html(this.value, this.$element[0], this.options.display, t) : "function" == typeof this.options.display ? this.options.display.call(this.$element[0], this.value, t) : this.input.value2html(this.value, this.$element[0])
        }, enable: function () {
            this.options.disabled = !1, this.$element.removeClass("editable-disabled"), this.handleEmpty(this.isEmpty), "manual" !== this.options.toggle && "-1" === this.$element.attr("tabindex") && this.$element.removeAttr("tabindex")
        }, disable: function () {
            this.options.disabled = !0, this.hide(), this.$element.addClass("editable-disabled"), this.handleEmpty(this.isEmpty), this.$element.attr("tabindex", -1)
        }, toggleDisabled: function () {
            this.options.disabled ? this.enable() : this.disable()
        }, option: function (e, i) {
            return e && "object" == typeof e ? void t.each(e, t.proxy(function (e, i) {
                this.option(t.trim(e), i)
            }, this)) : (this.options[e] = i, "disabled" === e ? i ? this.disable() : this.enable() : ("value" === e && this.setValue(i), this.container && this.container.option(e, i), void(this.input.option && this.input.option(e, i))))
        }, handleEmpty: function (e) {
            !1 !== this.options.display && (e !== undefined ? this.isEmpty = e : "function" == typeof this.input.isEmpty ? this.isEmpty = this.input.isEmpty(this.$element) : this.isEmpty = "" === t.trim(this.$element.html()), this.options.disabled ? this.isEmpty && (this.$element.empty(), this.options.emptyclass && this.$element.removeClass(this.options.emptyclass)) : this.isEmpty ? (this.$element.html(this.options.emptytext), this.options.emptyclass && this.$element.addClass(this.options.emptyclass)) : this.options.emptyclass && this.$element.removeClass(this.options.emptyclass))
        }, show: function (e) {
            if (!this.options.disabled) {
                if (this.container) {
                    if (this.container.tip().is(":visible")) return
                } else {
                    var i = t.extend({}, this.options, {value: this.value, input: this.input});
                    this.$element.editableContainer(i), this.$element.on("save.internal", t.proxy(this.save, this)), this.container = this.$element.data("editableContainer")
                }
                this.container.show(e)
            }
        }, hide: function () {
            this.container && this.container.hide()
        }, toggle: function (t) {
            this.container && this.container.tip().is(":visible") ? this.hide() : this.show(t)
        }, save: function (t, e) {
            if (this.options.unsavedclass) {
                var i = !1;
                i = i || "function" == typeof this.options.url, i = i || !1 === this.options.display, i = i || e.response !== undefined, i = i || this.options.savenochange && this.input.value2str(this.value) !== this.input.value2str(e.newValue), i ? this.$element.removeClass(this.options.unsavedclass) : this.$element.addClass(this.options.unsavedclass)
            }
            if (this.options.highlight) {
                var n = this.$element, a = n.css("background-color");
                n.css("background-color", this.options.highlight), setTimeout(function () {
                    "transparent" === a && (a = ""), n.css("background-color", a), n.addClass("editable-bg-transition"), setTimeout(function () {
                        n.removeClass("editable-bg-transition")
                    }, 1700)
                }, 10)
            }
            this.setValue(e.newValue, !1, e.response)
        }, validate: function () {
            if ("function" == typeof this.options.validate) return this.options.validate.call(this, this.value)
        }, setValue: function (e, i, n) {
            this.value = i ? this.input.str2value(e) : e, this.container && this.container.option("value", this.value), t.when(this.render(n)).then(t.proxy(function () {
                this.handleEmpty()
            }, this))
        }, activate: function () {
            this.container && this.container.activate()
        }, destroy: function () {
            this.disable(), this.container && this.container.destroy(), this.input.destroy(), "manual" !== this.options.toggle && (this.$element.removeClass("editable-click"), this.$element.off(this.options.toggle + ".editable")), this.$element.off("save.internal"), this.$element.removeClass("editable editable-open editable-disabled"), this.$element.removeData("editable")
        }
    }, t.fn.editable = function (i) {
        var n = {}, a = arguments, s = "editable";
        switch (i) {
            case"validate":
                return this.each(function () {
                    var e, i = t(this), a = i.data(s);
                    a && (e = a.validate()) && (n[a.options.name] = e)
                }), n;
            case"getValue":
                return 2 === arguments.length && !0 === arguments[1] ? n = this.eq(0).data(s).value : this.each(function () {
                    var e = t(this), i = e.data(s);
                    i && i.value !== undefined && null !== i.value && (n[i.options.name] = i.input.value2submit(i.value))
                }), n;
            case"submit":
                var o = arguments[1] || {}, r = this, l = this.editable("validate");
                if (t.isEmptyObject(l)) {
                    var d = {};
                    if (1 === r.length) {
                        var c = r.data("editable"), u = {
                            name: c.options.name || "",
                            value: c.input.value2submit(c.value),
                            pk: "function" == typeof c.options.pk ? c.options.pk.call(c.options.scope) : c.options.pk
                        };
                        "function" == typeof c.options.params ? u = c.options.params.call(c.options.scope, u) : (c.options.params = t.fn.editableutils.tryParseJson(c.options.params, !0), t.extend(u, c.options.params)), d = {
                            url: c.options.url,
                            data: u,
                            type: "POST"
                        }, o.success = o.success || c.options.success, o.error = o.error || c.options.error
                    } else {
                        var f = this.editable("getValue");
                        d = {url: o.url, data: f, type: "POST"}
                    }
                    d.success = "function" == typeof o.success ? function (t) {
                        o.success.call(r, t, o)
                    } : t.noop, d.error = "function" == typeof o.error ? function () {
                        o.error.apply(r, arguments)
                    } : t.noop, o.ajaxOptions && t.extend(d, o.ajaxOptions), o.data && t.extend(d.data, o.data), t.ajax(d)
                } else "function" == typeof o.error && o.error.call(r, l);
                return this
        }
        return this.each(function () {
            var n = t(this), o = n.data(s), r = "object" == typeof i && i;
            if (r && r.selector) return void(o = new e(this, r));
            o || n.data(s, o = new e(this, r)), "string" == typeof i && o[i].apply(o, Array.prototype.slice.call(a, 1))
        })
    }, t.fn.editable.defaults = {
        type: "text",
        disabled: !1,
        toggle: "click",
        emptytext: "Empty",
        autotext: "auto",
        value: null,
        display: null,
        emptyclass: "editable-empty",
        unsavedclass: "editable-unsaved",
        selector: null,
        highlight: "#FFFF80"
    }
}(window.jQuery), function (t) {
    "use strict";
    t.fn.editabletypes = {};
    var e = function () {
    };
    e.prototype = {
        init: function (e, i, n) {
            this.type = e, this.options = t.extend({}, n, i)
        }, prerender: function () {
            this.$tpl = t(this.options.tpl), this.$input = this.$tpl, this.$clear = null, this.error = null
        }, render: function () {
        }, value2html: function (e, i) {
            t(i)[this.options.escape ? "text" : "html"](t.trim(e))
        }, html2value: function (e) {
            return t("<div>").html(e).text()
        }, value2str: function (t) {
            return t
        }, str2value: function (t) {
            return t
        }, value2submit: function (t) {
            return t
        }, value2input: function (t) {
            this.$input.val(t)
        }, input2value: function () {
            return this.$input.val()
        }, activate: function () {
            this.$input.is(":visible") && this.$input.focus()
        }, clear: function () {
            this.$input.val(null)
        }, escape: function (e) {
            return t("<div>").text(e).html()
        }, autosubmit: function () {
        }, destroy: function () {
        }, setClass: function () {
            this.options.inputclass && this.$input.addClass(this.options.inputclass)
        }, setAttr: function (t) {
            this.options[t] !== undefined && null !== this.options[t] && this.$input.attr(t, this.options[t])
        }, option: function (t, e) {
            this.options[t] = e
        }
    }, e.defaults = {
        tpl: "",
        inputclass: null,
        escape: !0,
        scope: null,
        showbuttons: !0
    }, t.extend(t.fn.editabletypes, {abstractinput: e})
}(window.jQuery), function (t) {
    "use strict";
    var e = function () {
    };
    t.fn.editableutils.inherit(e, t.fn.editabletypes.abstractinput), t.extend(e.prototype, {
        render: function () {
            var e = t.Deferred();
            return this.error = null, this.onSourceReady(function () {
                this.renderList(), e.resolve()
            }, function () {
                this.error = this.options.sourceError, e.resolve()
            }), e.promise()
        }, html2value: function () {
            return null
        }, value2html: function (e, i, n, a) {
            var s = t.Deferred(), o = function () {
                "function" == typeof n ? n.call(i, e, this.sourceData, a) : this.value2htmlFinal(e, i), s.resolve()
            };
            return null === e ? o.call(this) : this.onSourceReady(o, function () {
                s.resolve()
            }), s.promise()
        }, onSourceReady: function (e, i) {
            var n;
            if (t.isFunction(this.options.source) ? (n = this.options.source.call(this.options.scope), this.sourceData = null) : n = this.options.source, this.options.sourceCache && t.isArray(this.sourceData)) return void e.call(this);
            try {
                n = t.fn.editableutils.tryParseJson(n, !1)
            } catch (t) {
                return void i.call(this)
            }
            if ("string" == typeof n) {
                if (this.options.sourceCache) {
                    var a, s = n;
                    if (t(document).data(s) || t(document).data(s, {}), a = t(document).data(s), !1 === a.loading && a.sourceData) return this.sourceData = a.sourceData, this.doPrepend(), void e.call(this);
                    if (!0 === a.loading) return a.callbacks.push(t.proxy(function () {
                        this.sourceData = a.sourceData, this.doPrepend(), e.call(this)
                    }, this)), void a.err_callbacks.push(t.proxy(i, this));
                    a.loading = !0, a.callbacks = [], a.err_callbacks = []
                }
                var o = t.extend({
                    url: n, type: "get", cache: !1, dataType: "json", success: t.proxy(function (n) {
                        a && (a.loading = !1), this.sourceData = this.makeArray(n), t.isArray(this.sourceData) ? (a && (a.sourceData = this.sourceData, t.each(a.callbacks, function () {
                            this.call()
                        })), this.doPrepend(), e.call(this)) : (i.call(this), a && t.each(a.err_callbacks, function () {
                            this.call()
                        }))
                    }, this), error: t.proxy(function () {
                        i.call(this), a && (a.loading = !1, t.each(a.err_callbacks, function () {
                            this.call()
                        }))
                    }, this)
                }, this.options.sourceOptions);
                t.ajax(o)
            } else this.sourceData = this.makeArray(n), t.isArray(this.sourceData) ? (this.doPrepend(), e.call(this)) : i.call(this)
        }, doPrepend: function () {
            null !== this.options.prepend && this.options.prepend !== undefined && (t.isArray(this.prependData) || (t.isFunction(this.options.prepend) && (this.options.prepend = this.options.prepend.call(this.options.scope)), this.options.prepend = t.fn.editableutils.tryParseJson(this.options.prepend, !0), "string" == typeof this.options.prepend && (this.options.prepend = {"": this.options.prepend}), this.prependData = this.makeArray(this.options.prepend)), t.isArray(this.prependData) && t.isArray(this.sourceData) && (this.sourceData = this.prependData.concat(this.sourceData)))
        }, renderList: function () {
        }, value2htmlFinal: function () {
        }, makeArray: function (e) {
            var i, n, a, s, o = [];
            if (!e || "string" == typeof e) return null;
            if (t.isArray(e)) {
                s = function (t, e) {
                    if (n = {value: t, text: e}, i++ >= 2) return !1
                };
                for (var r = 0; r < e.length; r++) a = e[r], "object" == typeof a ? (i = 0, t.each(a, s), 1 === i ? o.push(n) : i > 1 && (a.children && (a.children = this.makeArray(a.children)), o.push(a))) : o.push({
                    value: a,
                    text: a
                })
            } else t.each(e, function (t, e) {
                o.push({value: t, text: e})
            });
            return o
        }, option: function (t, e) {
            this.options[t] = e, "source" === t && (this.sourceData = null), "prepend" === t && (this.prependData = null)
        }
    }), e.defaults = t.extend({}, t.fn.editabletypes.abstractinput.defaults, {
        source: null,
        prepend: !1,
        sourceError: "Error when loading list",
        sourceCache: !0,
        sourceOptions: null
    }), t.fn.editabletypes.list = e
}(window.jQuery), function (t) {
    "use strict";
    var e = function (t) {
        this.init("text", t, e.defaults)
    };
    t.fn.editableutils.inherit(e, t.fn.editabletypes.abstractinput), t.extend(e.prototype, {
        render: function () {
            this.renderClear(), this.setClass(), this.setAttr("placeholder")
        }, activate: function () {
            this.$input.is(":visible") && (this.$input.focus(), t.fn.editableutils.setCursorPosition(this.$input.get(0), this.$input.val().length), this.toggleClear && this.toggleClear())
        }, renderClear: function () {
            this.options.clear && (this.$clear = t('<span class="editable-clear-x"></span>'), this.$input.after(this.$clear).css("padding-right", 24).keyup(t.proxy(function (e) {
                if (!~t.inArray(e.keyCode, [40, 38, 9, 13, 27])) {
                    clearTimeout(this.t);
                    var i = this;
                    this.t = setTimeout(function () {
                        i.toggleClear(e)
                    }, 100)
                }
            }, this)).parent().css("position", "relative"), this.$clear.click(t.proxy(this.clear, this)))
        }, postrender: function () {
        }, toggleClear: function () {
            if (this.$clear) {
                var t = this.$input.val().length, e = this.$clear.is(":visible");
                t && !e && this.$clear.show(), !t && e && this.$clear.hide()
            }
        }, clear: function () {
            this.$clear.hide(), this.$input.val("").focus()
        }
    }), e.defaults = t.extend({}, t.fn.editabletypes.abstractinput.defaults, {
        tpl: '<input type="text">',
        placeholder: null,
        clear: !0
    }), t.fn.editabletypes.text = e
}(window.jQuery), function (t) {
    "use strict";
    var e = function (t) {
        this.init("textarea", t, e.defaults)
    };
    t.fn.editableutils.inherit(e, t.fn.editabletypes.abstractinput), t.extend(e.prototype, {
        render: function () {
            this.setClass(), this.setAttr("placeholder"), this.setAttr("rows"), this.$input.keydown(function (e) {
                e.ctrlKey && 13 === e.which && t(this).closest("form").submit()
            })
        }, activate: function () {
            t.fn.editabletypes.text.prototype.activate.call(this)
        }
    }), e.defaults = t.extend({}, t.fn.editabletypes.abstractinput.defaults, {
        tpl: "<textarea></textarea>",
        inputclass: "input-large",
        placeholder: null,
        rows: 7
    }), t.fn.editabletypes.textarea = e
}(window.jQuery), function (t) {
    "use strict";
    var e = function (t) {
        this.init("select", t, e.defaults)
    };
    t.fn.editableutils.inherit(e, t.fn.editabletypes.list), t.extend(e.prototype, {
        renderList: function () {
            this.$input.empty();
            var e = function (i, n) {
                var a;
                if (t.isArray(n)) for (var s = 0; s < n.length; s++) a = {}, n[s].children ? (a.label = n[s].text, i.append(e(t("<optgroup>", a), n[s].children))) : (a.value = n[s].value, n[s].disabled && (a.disabled = !0), i.append(t("<option>", a).text(n[s].text)));
                return i
            };
            e(this.$input, this.sourceData), this.setClass(), this.$input.on("keydown.editable", function (e) {
                13 === e.which && t(this).closest("form").submit()
            })
        }, value2htmlFinal: function (e, i) {
            var n = "", a = t.fn.editableutils.itemsByValue(e, this.sourceData);
            a.length && (n = a[0].text), t.fn.editabletypes.abstractinput.prototype.value2html.call(this, n, i)
        }, autosubmit: function () {
            this.$input.off("keydown.editable").on("change.editable", function () {
                t(this).closest("form").submit()
            })
        }
    }), e.defaults = t.extend({}, t.fn.editabletypes.list.defaults, {tpl: "<select></select>"}), t.fn.editabletypes.select = e
}(window.jQuery), function (t) {
    "use strict";
    var e = function (t) {
        this.init("checklist", t, e.defaults)
    };
    t.fn.editableutils.inherit(e, t.fn.editabletypes.list), t.extend(e.prototype, {
        renderList: function () {
            var e;
            if (this.$tpl.empty(), t.isArray(this.sourceData)) {
                for (var i = 0; i < this.sourceData.length; i++) e = t("<label>").append(t("<input>", {
                    type: "checkbox",
                    value: this.sourceData[i].value
                })).append(t("<span>").text(" " + this.sourceData[i].text)), t("<div>").append(e).appendTo(this.$tpl);
                this.$input = this.$tpl.find('input[type="checkbox"]'), this.setClass()
            }
        }, value2str: function (e) {
            return t.isArray(e) ? e.sort().join(t.trim(this.options.separator)) : ""
        }, str2value: function (e) {
            var i, n = null;
            return "string" == typeof e && e.length ? (i = new RegExp("\\s*" + t.trim(this.options.separator) + "\\s*"), n = e.split(i)) : n = t.isArray(e) ? e : [e], n
        }, value2input: function (e) {
            this.$input.prop("checked", !1), t.isArray(e) && e.length && this.$input.each(function (i, n) {
                var a = t(n);
                t.each(e, function (t, e) {
                    a.val() == e && a.prop("checked", !0)
                })
            })
        }, input2value: function () {
            var e = [];
            return this.$input.filter(":checked").each(function (i, n) {
                e.push(t(n).val())
            }), e
        }, value2htmlFinal: function (e, i) {
            var n = [], a = t.fn.editableutils.itemsByValue(e, this.sourceData), s = this.options.escape;
            a.length ? (t.each(a, function (e, i) {
                var a = s ? t.fn.editableutils.escape(i.text) : i.text;
                n.push(a)
            }), t(i).html(n.join("<br>"))) : t(i).empty()
        }, activate: function () {
            this.$input.first().focus()
        }, autosubmit: function () {
            this.$input.on("keydown", function (e) {
                13 === e.which && t(this).closest("form").submit()
            })
        }
    }), e.defaults = t.extend({}, t.fn.editabletypes.list.defaults, {
        tpl: '<div class="editable-checklist"></div>',
        inputclass: null,
        separator: ","
    }), t.fn.editabletypes.checklist = e
}(window.jQuery), function (t) {
    "use strict";
    var e = function (t) {
        this.init("password", t, e.defaults)
    };
    t.fn.editableutils.inherit(e, t.fn.editabletypes.text), t.extend(e.prototype, {
        value2html: function (e, i) {
            e ? t(i).text("[hidden]") : t(i).empty()
        }, html2value: function () {
            return null
        }
    }), e.defaults = t.extend({}, t.fn.editabletypes.text.defaults, {tpl: '<input type="password">'}), t.fn.editabletypes.password = e
}(window.jQuery), function (t) {
    "use strict";
    var e = function (t) {
        this.init("email", t, e.defaults)
    };
    t.fn.editableutils.inherit(e, t.fn.editabletypes.text), e.defaults = t.extend({}, t.fn.editabletypes.text.defaults, {tpl: '<input type="email">'}), t.fn.editabletypes.email = e
}(window.jQuery), function (t) {
    "use strict";
    var e = function (t) {
        this.init("url", t, e.defaults)
    };
    t.fn.editableutils.inherit(e, t.fn.editabletypes.text), e.defaults = t.extend({}, t.fn.editabletypes.text.defaults, {tpl: '<input type="url">'}), t.fn.editabletypes.url = e
}(window.jQuery), function (t) {
    "use strict";
    var e = function (t) {
        this.init("tel", t, e.defaults)
    };
    t.fn.editableutils.inherit(e, t.fn.editabletypes.text), e.defaults = t.extend({}, t.fn.editabletypes.text.defaults, {tpl: '<input type="tel">'}), t.fn.editabletypes.tel = e
}(window.jQuery), function (t) {
    "use strict";
    var e = function (t) {
        this.init("number", t, e.defaults)
    };
    t.fn.editableutils.inherit(e, t.fn.editabletypes.text), t.extend(e.prototype, {
        render: function () {
            e.superclass.render.call(this), this.setAttr("min"), this.setAttr("max"), this.setAttr("step")
        }, postrender: function () {
            this.$clear && this.$clear.css({right: 24})
        }
    }), e.defaults = t.extend({}, t.fn.editabletypes.text.defaults, {
        tpl: '<input type="number">',
        inputclass: "input-mini",
        min: null,
        max: null,
        step: null
    }), t.fn.editabletypes.number = e
}(window.jQuery), function (t) {
    "use strict";
    var e = function (t) {
        this.init("range", t, e.defaults)
    };
    t.fn.editableutils.inherit(e, t.fn.editabletypes.number), t.extend(e.prototype, {
        render: function () {
            this.$input = this.$tpl.filter("input"), this.setClass(), this.setAttr("min"), this.setAttr("max"), this.setAttr("step"), this.$input.on("input", function () {
                t(this).siblings("output").text(t(this).val())
            })
        }, activate: function () {
            this.$input.focus()
        }
    }), e.defaults = t.extend({}, t.fn.editabletypes.number.defaults, {
        tpl: '<input type="range"><output style="width: 30px; display: inline-block"></output>',
        inputclass: "input-medium"
    }), t.fn.editabletypes.range = e
}(window.jQuery), function (t) {
    "use strict";
    var e = function (t) {
        this.init("time", t, e.defaults)
    };
    t.fn.editableutils.inherit(e, t.fn.editabletypes.abstractinput), t.extend(e.prototype, {
        render: function () {
            this.setClass()
        }
    }), e.defaults = t.extend({}, t.fn.editabletypes.abstractinput.defaults, {tpl: '<input type="time">'}), t.fn.editabletypes.time = e
}(window.jQuery), function (t) {
    "use strict";
    var e = function (i) {
        if (this.init("select2", i, e.defaults), i.select2 = i.select2 || {}, this.sourceData = null, i.placeholder && (i.select2.placeholder = i.placeholder), !i.select2.tags && i.source) {
            var n = i.source;
            t.isFunction(i.source) && (n = i.source.call(i.scope)), "string" == typeof n ? (i.select2.ajax = i.select2.ajax || {}, i.select2.ajax.data || (i.select2.ajax.data = function (t) {
                return {query: t}
            }), i.select2.ajax.results || (i.select2.ajax.results = function (t) {
                return {results: t}
            }), i.select2.ajax.url = n) : (this.sourceData = this.convertSource(n), i.select2.data = this.sourceData)
        }
        if (this.options.select2 = t.extend({}, e.defaults.select2, i.select2), this.isMultiple = this.options.select2.tags || this.options.select2.multiple, this.isRemote = "ajax" in this.options.select2, this.idFunc = this.options.select2.id, "function" != typeof this.idFunc) {
            var a = this.idFunc || "id";
            this.idFunc = function (t) {
                return t[a]
            }
        }
        this.formatSelection = this.options.select2.formatSelection, "function" != typeof this.formatSelection && (this.formatSelection = function (t) {
            return t.text
        })
    };
    t.fn.editableutils.inherit(e, t.fn.editabletypes.abstractinput), t.extend(e.prototype, {
        render: function () {
            this.setClass(), this.isRemote && this.$input.on("select2-loaded", t.proxy(function (t) {
                this.sourceData = t.items.results
            }, this)), this.isMultiple && this.$input.on("change", function () {
                t(this).closest("form").parent().triggerHandler("resize")
            })
        }, value2html: function (i, n) {
            var a, s = "", o = this;
            this.options.select2.tags ? a = i : this.sourceData && (a = t.fn.editableutils.itemsByValue(i, this.sourceData, this.idFunc)), t.isArray(a) ? (s = [], t.each(a, function (t, e) {
                s.push(e && "object" == typeof e ? o.formatSelection(e) : e)
            })) : a && (s = o.formatSelection(a)), s = t.isArray(s) ? s.join(this.options.viewseparator) : s, e.superclass.value2html.call(this, s, n)
        }, html2value: function (t) {
            return this.options.select2.tags ? this.str2value(t, this.options.viewseparator) : null
        }, value2input: function (e) {
            if (t.isArray(e) && (e = e.join(this.getSeparator())), this.$input.data("select2") ? this.$input.val(e).trigger("change", !0) : (this.$input.val(e), this.$input.select2(this.options.select2)), this.isRemote && !this.isMultiple && !this.options.select2.initSelection) {
                var i = this.options.select2.id, n = this.options.select2.formatSelection;
                if (!i && !n) {
                    var a = t(this.options.scope);
                    if (!a.data("editable").isEmpty) {
                        var s = {id: e, text: a.text()};
                        this.$input.select2("data", s)
                    }
                }
            }
        }, input2value: function () {
            return this.$input.select2("val")
        }, str2value: function (e, i) {
            if ("string" != typeof e || !this.isMultiple) return e;
            i = i || this.getSeparator();
            var n, a, s;
            if (null === e || e.length < 1) return null;
            for (n = e.split(i), a = 0, s = n.length; a < s; a += 1) n[a] = t.trim(n[a]);
            return n
        }, autosubmit: function () {
            this.$input.on("change", function (e, i) {
                i || t(this).closest("form").submit()
            })
        }, getSeparator: function () {
            return this.options.select2.separator || t.fn.select2.defaults.separator
        }, convertSource: function (e) {
            if (t.isArray(e) && e.length && e[0].value !== undefined) for (var i = 0; i < e.length; i++) e[i].value !== undefined && (e[i].id = e[i].value, delete e[i].value);
            return e
        }, destroy: function () {
            this.$input.data("select2") && this.$input.select2("destroy")
        }
    }), e.defaults = t.extend({}, t.fn.editabletypes.abstractinput.defaults, {
        tpl: '<input type="hidden">',
        select2: null,
        placeholder: null,
        source: null,
        viewseparator: ", "
    }), t.fn.editabletypes.select2 = e
}(window.jQuery), /**
 * Combodate - 1.0.5
 * Dropdown date and time picker.
 * Converts text input into dropdowns to pick day, month, year, hour, minute and second.
 * Uses momentjs as datetime library http://momentjs.com.
 * For i18n include corresponding file from https://github.com/timrwood/moment/tree/master/lang
 *
 * Confusion at noon and midnight - see http://en.wikipedia.org/wiki/12-hour_clock#Confusion_at_noon_and_midnight
 * In combodate:
 * 12:00 pm --> 12:00 (24-h format, midday)
 * 12:00 am --> 00:00 (24-h format, midnight, start of day)
 *
 * Differs from momentjs parse rules:
 * 00:00 pm, 12:00 pm --> 12:00 (24-h format, day not change)
 * 00:00 am, 12:00 am --> 00:00 (24-h format, day not change)
 *
 *
 * Author: Vitaliy Potapov
 * Project page: http://github.com/vitalets/combodate
 * Copyright (c) 2012 Vitaliy Potapov. Released under MIT License.
 **/
    function (t) {
        var e = function (e, i) {
            if (this.$element = t(e), !this.$element.is("input")) return void t.error("Combodate should be applied to INPUT element");
            this.options = t.extend({}, t.fn.combodate.defaults, i, this.$element.data()), this.init()
        };
        e.prototype = {
            constructor: e, init: function () {
                this.map = {
                    day: ["D", "date"],
                    month: ["M", "month"],
                    year: ["Y", "year"],
                    hour: ["[Hh]", "hours"],
                    minute: ["m", "minutes"],
                    second: ["s", "seconds"],
                    ampm: ["[Aa]", ""]
                }, this.$widget = t('<span class="combodate"></span>').html(this.getTemplate()), this.initCombos(), this.$widget.on("change", "select", t.proxy(function (e) {
                    this.$element.val(this.getValue()).change(), this.options.smartDays && (t(e.target).is(".month") || t(e.target).is(".year")) && this.fillCombo("day")
                }, this)), this.$widget.find("select").css("width", "auto"), this.$element.hide().after(this.$widget), this.setValue(this.$element.val() || this.options.value)
            }, getTemplate: function () {
                var e = this.options.template;
                return t.each(this.map, function (t, i) {
                    i = i[0];
                    var n = new RegExp(i + "+"), a = i.length > 1 ? i.substring(1, 2) : i;
                    e = e.replace(n, "{" + a + "}")
                }), e = e.replace(/ /g, "&nbsp;"), t.each(this.map, function (t, i) {
                    i = i[0];
                    var n = i.length > 1 ? i.substring(1, 2) : i;
                    e = e.replace("{" + n + "}", '<select class="' + t + '"></select>')
                }), e
            }, initCombos: function () {
                for (var t in this.map) {
                    var e = this.$widget.find("." + t);
                    this["$" + t] = e.length ? e : null, this.fillCombo(t)
                }
            }, fillCombo: function (t) {
                var e = this["$" + t];
                if (e) {
                    var i = "fill" + t.charAt(0).toUpperCase() + t.slice(1), n = this[i](), a = e.val();
                    e.empty();
                    for (var s = 0; s < n.length; s++) e.append('<option value="' + n[s][0] + '">' + n[s][1] + "</option>");
                    e.val(a)
                }
            }, fillCommon: function (t) {
                var e, i = [];
                if ("name" === this.options.firstItem) {
                    e = moment.relativeTime || moment.langData()._relativeTime;
                    var n = "function" == typeof e[t] ? e[t](1, !0, t, !1) : e[t];
                    n = n.split(" ").reverse()[0], i.push(["", n])
                } else "empty" === this.options.firstItem && i.push(["", ""]);
                return i
            }, fillDay: function () {
                var t, e, i = this.fillCommon("d"), n = -1 !== this.options.template.indexOf("DD"), a = 31;
                if (this.options.smartDays && this.$month && this.$year) {
                    var s = parseInt(this.$month.val(), 10), o = parseInt(this.$year.val(), 10);
                    isNaN(s) || isNaN(o) || (a = moment([o, s]).daysInMonth())
                }
                for (e = 1; e <= a; e++) t = n ? this.leadZero(e) : e, i.push([e, t]);
                return i
            }, fillMonth: function () {
                var t, e, i = this.fillCommon("M"), n = -1 !== this.options.template.indexOf("MMMM"),
                    a = -1 !== this.options.template.indexOf("MMM"), s = -1 !== this.options.template.indexOf("MM");
                for (e = 0; e <= 11; e++) t = n ? moment().date(1).month(e).format("MMMM") : a ? moment().date(1).month(e).format("MMM") : s ? this.leadZero(e + 1) : e + 1, i.push([e, t]);
                return i
            }, fillYear: function () {
                var t, e, i = [], n = -1 !== this.options.template.indexOf("YYYY");
                for (e = this.options.maxYear; e >= this.options.minYear; e--) t = n ? e : (e + "").substring(2), i[this.options.yearDescending ? "push" : "unshift"]([e, t]);
                return i = this.fillCommon("y").concat(i)
            }, fillHour: function () {
                var t, e, i = this.fillCommon("h"), n = -1 !== this.options.template.indexOf("h"),
                    a = (this.options.template.indexOf("H"), -1 !== this.options.template.toLowerCase().indexOf("hh")),
                    s = n ? 1 : 0, o = n ? 12 : 23;
                for (e = s; e <= o; e++) t = a ? this.leadZero(e) : e, i.push([e, t]);
                return i
            }, fillMinute: function () {
                var t, e, i = this.fillCommon("m"), n = -1 !== this.options.template.indexOf("mm");
                for (e = 0; e <= 59; e += this.options.minuteStep) t = n ? this.leadZero(e) : e, i.push([e, t]);
                return i
            }, fillSecond: function () {
                var t, e, i = this.fillCommon("s"), n = -1 !== this.options.template.indexOf("ss");
                for (e = 0; e <= 59; e += this.options.secondStep) t = n ? this.leadZero(e) : e, i.push([e, t]);
                return i
            }, fillAmpm: function () {
                var t = -1 !== this.options.template.indexOf("a");
                this.options.template.indexOf("A");
                return [["am", t ? "am" : "AM"], ["pm", t ? "pm" : "PM"]]
            }, getValue: function (e) {
                var i, n = {}, a = this, s = !1;
                return t.each(this.map, function (t) {
                    if ("ampm" !== t) {
                        var e = "day" === t ? 1 : 0;
                        return n[t] = a["$" + t] ? parseInt(a["$" + t].val(), 10) : e, isNaN(n[t]) ? (s = !0, !1) : void 0
                    }
                }), s ? "" : (this.$ampm && (12 === n.hour ? n.hour = "am" === this.$ampm.val() ? 0 : 12 : n.hour = "am" === this.$ampm.val() ? n.hour : n.hour + 12), i = moment([n.year, n.month, n.day, n.hour, n.minute, n.second]), this.highlight(i), e = e === undefined ? this.options.format : e, null === e ? i.isValid() ? i : null : i.isValid() ? i.format(e) : "")
            }, setValue: function (e) {
                function i(e, i) {
                    var n = {};
                    return e.children("option").each(function (e, a) {
                        var s, o = t(a).attr("value");
                        "" !== o && (s = Math.abs(o - i), ("undefined" == typeof n.distance || s < n.distance) && (n = {
                            value: o,
                            distance: s
                        }))
                    }), n.value
                }

                if (e) {
                    var n = "string" == typeof e ? moment(e, this.options.format) : moment(e), a = this, s = {};
                    n.isValid() && (t.each(this.map, function (t, e) {
                        "ampm" !== t && (s[t] = n[e[1]]())
                    }), this.$ampm && (s.hour >= 12 ? (s.ampm = "pm", s.hour > 12 && (s.hour -= 12)) : (s.ampm = "am", 0 === s.hour && (s.hour = 12))), t.each(s, function (t, e) {
                        a["$" + t] && ("minute" === t && a.options.minuteStep > 1 && a.options.roundTime && (e = i(a["$" + t], e)), "second" === t && a.options.secondStep > 1 && a.options.roundTime && (e = i(a["$" + t], e)), a["$" + t].val(e))
                    }), this.options.smartDays && this.fillCombo("day"), this.$element.val(n.format(this.options.format)).change())
                }
            }, highlight: function (t) {
                t.isValid() ? this.options.errorClass ? this.$widget.removeClass(this.options.errorClass) : this.$widget.find("select").css("border-color", this.borderColor) : this.options.errorClass ? this.$widget.addClass(this.options.errorClass) : (this.borderColor || (this.borderColor = this.$widget.find("select").css("border-color")), this.$widget.find("select").css("border-color", "red"))
            }, leadZero: function (t) {
                return t <= 9 ? "0" + t : t
            }, destroy: function () {
                this.$widget.remove(), this.$element.removeData("combodate").show()
            }
        }, t.fn.combodate = function (i) {
            var n, a = Array.apply(null, arguments);
            return a.shift(), "getValue" === i && this.length && (n = this.eq(0).data("combodate")) ? n.getValue.apply(n, a) : this.each(function () {
                var n = t(this), s = n.data("combodate"), o = "object" == typeof i && i;
                s || n.data("combodate", s = new e(this, o)), "string" == typeof i && "function" == typeof s[i] && s[i].apply(s, a)
            })
        }, t.fn.combodate.defaults = {
            format: "DD-MM-YYYY HH:mm",
            template: "D / MMM / YYYY   H : mm",
            value: null,
            minYear: 1970,
            maxYear: 2015,
            yearDescending: !0,
            minuteStep: 5,
            secondStep: 1,
            firstItem: "empty",
            errorClass: null,
            roundTime: !0,
            smartDays: !1
        }
    }(window.jQuery), function (t) {
    "use strict";
    var e = function (i) {
        this.init("combodate", i, e.defaults), this.options.viewformat || (this.options.viewformat = this.options.format), i.combodate = t.fn.editableutils.tryParseJson(i.combodate, !0), this.options.combodate = t.extend({}, e.defaults.combodate, i.combodate, {
            format: this.options.format,
            template: this.options.template
        })
    };
    t.fn.editableutils.inherit(e, t.fn.editabletypes.abstractinput), t.extend(e.prototype, {
        render: function () {
            this.$input.combodate(this.options.combodate), "bs3" === t.fn.editableform.engine && this.$input.siblings().find("select").addClass("form-control"), this.options.inputclass && this.$input.siblings().find("select").addClass(this.options.inputclass)
        }, value2html: function (t, i) {
            var n = t ? t.format(this.options.viewformat) : "";
            e.superclass.value2html.call(this, n, i)
        }, html2value: function (t) {
            return t ? moment(t, this.options.viewformat) : null
        }, value2str: function (t) {
            return t ? t.format(this.options.format) : ""
        }, str2value: function (t) {
            return t ? moment(t, this.options.format) : null
        }, value2submit: function (t) {
            return this.value2str(t)
        }, value2input: function (t) {
            this.$input.combodate("setValue", t)
        }, input2value: function () {
            return this.$input.combodate("getValue", null)
        }, activate: function () {
            this.$input.siblings(".combodate").find("select").eq(0).focus()
        }, autosubmit: function () {
        }
    }), e.defaults = t.extend({}, t.fn.editabletypes.abstractinput.defaults, {
        tpl: '<input type="text">',
        inputclass: null,
        format: "YYYY-MM-DD",
        viewformat: null,
        template: "D / MMM / YYYY",
        combodate: null
    }), t.fn.editabletypes.combodate = e
}(window.jQuery), function (t) {
    "use strict";
    var e = t.fn.editableform.Constructor.prototype.initInput;
    t.extend(t.fn.editableform.Constructor.prototype, {
        initTemplate: function () {
            this.$form = t(t.fn.editableform.template), this.$form.find(".control-group").addClass("form-group"), this.$form.find(".editable-error-block").addClass("help-block")
        }, initInput: function () {
            e.apply(this);
            var i = null === this.input.options.inputclass || !1 === this.input.options.inputclass, n = "input-sm",
                a = "text,select,textarea,password,email,url,tel,number,range,time,typeaheadjs".split(",");
            ~t.inArray(this.input.type, a) && (this.input.$input.addClass("form-control"), i && (this.input.options.inputclass = n, this.input.$input.addClass(n)));
            for (var s = this.$form.find(".editable-buttons"), o = i ? [n] : this.input.options.inputclass.split(" "), r = 0; r < o.length; r++) "input-lg" === o[r].toLowerCase() && s.find("button").removeClass("btn-sm").addClass("btn-lg")
        }
    }), t.fn.editableform.buttons = '<button type="submit" class="btn btn-primary btn-sm editable-submit"><i class="glyphicon glyphicon-ok"></i></button><button type="button" class="btn btn-default btn-sm editable-cancel"><i class="glyphicon glyphicon-remove"></i></button>', t.fn.editableform.errorGroupClass = "has-error", t.fn.editableform.errorBlockClass = null, t.fn.editableform.engine = "bs3"
}(window.jQuery), function (t) {
    "use strict";
    t.extend(t.fn.editableContainer.Popup.prototype, {
        containerName: "popover",
        containerDataName: "bs.popover",
        innerCss: ".popover-content",
        defaults: t.fn.popover.Constructor.DEFAULTS,
        initContainer: function () {
            t.extend(this.containerOptions, {
                trigger: "manual",
                selector: !1,
                content: " ",
                template: this.defaults.template
            });
            var e;
            this.$element.data("template") && (e = this.$element.data("template"), this.$element.removeData("template")), this.call(this.containerOptions), e && this.$element.data("template", e)
        },
        innerShow: function () {
            this.call("show")
        },
        innerHide: function () {
            this.call("hide")
        },
        innerDestroy: function () {
            this.call("destroy")
        },
        setContainerOption: function (t, e) {
            this.container().options[t] = e
        },
        setPosition: function () {
            (function () {
                var t = this.tip(),
                    e = "function" == typeof this.options.placement ? this.options.placement.call(this, t[0], this.$element[0]) : this.options.placement,
                    i = /\s?auto?\s?/i, n = i.test(e);
                n && (e = e.replace(i, "") || "top");
                var a = this.getPosition(), s = t[0].offsetWidth, o = t[0].offsetHeight;
                if (n) {
                    var r = this.$element.parent(), l = e,
                        d = document.documentElement.scrollTop || document.body.scrollTop,
                        c = "body" == this.options.container ? window.innerWidth : r.outerWidth(),
                        u = "body" == this.options.container ? window.innerHeight : r.outerHeight(),
                        f = "body" == this.options.container ? 0 : r.offset().left;
                    e = "bottom" == e && a.top + a.height + o - d > u ? "top" : "top" == e && a.top - d - o < 0 ? "bottom" : "right" == e && a.right + s > c ? "left" : "left" == e && a.left - s < f ? "right" : e, t.removeClass(l).addClass(e)
                }
                var p = this.getCalculatedOffset(e, a, s, o);
                this.applyPlacement(p, e)
            }).call(this.container())
        }
    })
}(window.jQuery), /* =========================================================
 * bootstrap-datepicker.js
 * http://www.eyecon.ro/bootstrap-datepicker
 * =========================================================
 * Copyright 2012 Stefan Petre
 * Improvements by Andrew Rowls
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================= */
    function (t) {
        function e() {
            return new Date(Date.UTC.apply(Date, arguments))
        }

        function i(e, i) {
            var n, a = t(e).data(), s = {}, o = new RegExp("^" + i.toLowerCase() + "([A-Z])"),
                i = new RegExp("^" + i.toLowerCase());
            for (var r in a) i.test(r) && (n = r.replace(o, function (t, e) {
                return e.toLowerCase()
            }), s[n] = a[r]);
            return s
        }

        function n(e) {
            var i = {};
            if (c[e] || (e = e.split("-")[0], c[e])) {
                var n = c[e];
                return t.each(d, function (t, e) {
                    e in n && (i[e] = n[e])
                }), i
            }
        }

        var a = function (e, i) {
            this._process_options(i), this.element = t(e), this.isInline = !1, this.isInput = this.element.is("input"), this.component = !!this.element.is(".date") && this.element.find(".add-on, .btn"), this.hasInput = this.component && this.element.find("input").length, this.component && 0 === this.component.length && (this.component = !1), this.picker = t(u.template), this._buildEvents(), this._attachEvents(), this.isInline ? this.picker.addClass("datepicker-inline").appendTo(this.element) : this.picker.addClass("datepicker-dropdown dropdown-menu"), this.o.rtl && (this.picker.addClass("datepicker-rtl"), this.picker.find(".prev i, .next i").toggleClass("icon-arrow-left icon-arrow-right")), this.viewMode = this.o.startView, this.o.calendarWeeks && this.picker.find("tfoot th.today").attr("colspan", function (t, e) {
                return parseInt(e) + 1
            }), this._allow_update = !1, this.setStartDate(this.o.startDate), this.setEndDate(this.o.endDate), this.setDaysOfWeekDisabled(this.o.daysOfWeekDisabled), this.fillDow(), this.fillMonths(), this._allow_update = !0, this.update(), this.showMode(), this.isInline && this.show()
        };
        a.prototype = {
            constructor: a, _process_options: function (e) {
                this._o = t.extend({}, this._o, e);
                var i = this.o = t.extend({}, this._o), n = i.language;
                switch (c[n] || (n = n.split("-")[0], c[n] || (n = l.language)), i.language = n, i.startView) {
                    case 2:
                    case"decade":
                        i.startView = 2;
                        break;
                    case 1:
                    case"year":
                        i.startView = 1;
                        break;
                    default:
                        i.startView = 0
                }
                switch (i.minViewMode) {
                    case 1:
                    case"months":
                        i.minViewMode = 1;
                        break;
                    case 2:
                    case"years":
                        i.minViewMode = 2;
                        break;
                    default:
                        i.minViewMode = 0
                }
                i.startView = Math.max(i.startView, i.minViewMode), i.weekStart %= 7, i.weekEnd = (i.weekStart + 6) % 7;
                var a = u.parseFormat(i.format);
                i.startDate !== -Infinity && (i.startDate = u.parseDate(i.startDate, a, i.language)), i.endDate !== Infinity && (i.endDate = u.parseDate(i.endDate, a, i.language)), i.daysOfWeekDisabled = i.daysOfWeekDisabled || [], t.isArray(i.daysOfWeekDisabled) || (i.daysOfWeekDisabled = i.daysOfWeekDisabled.split(/[,\s]*/)), i.daysOfWeekDisabled = t.map(i.daysOfWeekDisabled, function (t) {
                    return parseInt(t, 10)
                })
            }, _events: [], _secondaryEvents: [], _applyEvents: function (t) {
                for (var e, i, n = 0; n < t.length; n++) e = t[n][0], i = t[n][1], e.on(i)
            }, _unapplyEvents: function (t) {
                for (var e, i, n = 0; n < t.length; n++) e = t[n][0], i = t[n][1], e.off(i)
            }, _buildEvents: function () {
                this.isInput ? this._events = [[this.element, {
                    focus: t.proxy(this.show, this),
                    keyup: t.proxy(this.update, this),
                    keydown: t.proxy(this.keydown, this)
                }]] : this.component && this.hasInput ? this._events = [[this.element.find("input"), {
                    focus: t.proxy(this.show, this),
                    keyup: t.proxy(this.update, this),
                    keydown: t.proxy(this.keydown, this)
                }], [this.component, {click: t.proxy(this.show, this)}]] : this.element.is("div") ? this.isInline = !0 : this._events = [[this.element, {click: t.proxy(this.show, this)}]], this._secondaryEvents = [[this.picker, {click: t.proxy(this.click, this)}], [t(window), {resize: t.proxy(this.place, this)}], [t(document), {
                    mousedown: t.proxy(function (t) {
                        this.element.is(t.target) || this.element.find(t.target).size() || this.picker.is(t.target) || this.picker.find(t.target).size() || this.hide()
                    }, this)
                }]]
            }, _attachEvents: function () {
                this._detachEvents(), this._applyEvents(this._events)
            }, _detachEvents: function () {
                this._unapplyEvents(this._events)
            }, _attachSecondaryEvents: function () {
                this._detachSecondaryEvents(), this._applyEvents(this._secondaryEvents)
            }, _detachSecondaryEvents: function () {
                this._unapplyEvents(this._secondaryEvents)
            }, _trigger: function (e, i) {
                var n = i || this.date, a = new Date(n.getTime() + 6e4 * n.getTimezoneOffset());
                this.element.trigger({
                    type: e, date: a, format: t.proxy(function (t) {
                        var e = t || this.o.format;
                        return u.formatDate(n, e, this.o.language)
                    }, this)
                })
            }, show: function (t) {
                this.isInline || this.picker.appendTo("body"), this.picker.show(), this.height = this.component ? this.component.outerHeight() : this.element.outerHeight(), this.place(), this._attachSecondaryEvents(), t && t.preventDefault(), this._trigger("show")
            }, hide: function () {
                this.isInline || this.picker.is(":visible") && (this.picker.hide().detach(), this._detachSecondaryEvents(), this.viewMode = this.o.startView, this.showMode(), this.o.forceParse && (this.isInput && this.element.val() || this.hasInput && this.element.find("input").val()) && this.setValue(), this._trigger("hide"))
            }, remove: function () {
                this.hide(), this._detachEvents(), this._detachSecondaryEvents(), this.picker.remove(), delete this.element.data().datepicker, this.isInput || delete this.element.data().date
            }, getDate: function () {
                var t = this.getUTCDate();
                return new Date(t.getTime() + 6e4 * t.getTimezoneOffset())
            }, getUTCDate: function () {
                return this.date
            }, setDate: function (t) {
                this.setUTCDate(new Date(t.getTime() - 6e4 * t.getTimezoneOffset()))
            }, setUTCDate: function (t) {
                this.date = t, this.setValue()
            }, setValue: function () {
                var t = this.getFormattedDate();
                this.isInput ? this.element.val(t) : this.component && this.element.find("input").val(t)
            }, getFormattedDate: function (t) {
                return t === undefined && (t = this.o.format), u.formatDate(this.date, t, this.o.language)
            }, setStartDate: function (t) {
                this._process_options({startDate: t}), this.update(), this.updateNavArrows()
            }, setEndDate: function (t) {
                this._process_options({endDate: t}), this.update(), this.updateNavArrows()
            }, setDaysOfWeekDisabled: function (t) {
                this._process_options({daysOfWeekDisabled: t}), this.update(), this.updateNavArrows()
            }, place: function () {
                if (!this.isInline) {
                    var e = parseInt(this.element.parents().filter(function () {
                            return "auto" != t(this).css("z-index")
                        }).first().css("z-index")) + 10,
                        i = this.component ? this.component.parent().offset() : this.element.offset(),
                        n = this.component ? this.component.outerHeight(!0) : this.element.outerHeight(!0);
                    this.picker.css({top: i.top + n, left: i.left, zIndex: e})
                }
            }, _allow_update: !0, update: function () {
                if (this._allow_update) {
                    var t, e = !1;
                    arguments && arguments.length && ("string" == typeof arguments[0] || arguments[0] instanceof Date) ? (t = arguments[0], e = !0) : (t = this.isInput ? this.element.val() : this.element.data("date") || this.element.find("input").val(), delete this.element.data().date), this.date = u.parseDate(t, this.o.format, this.o.language), e && this.setValue(), this.date < this.o.startDate ? this.viewDate = new Date(this.o.startDate) : this.date > this.o.endDate ? this.viewDate = new Date(this.o.endDate) : this.viewDate = new Date(this.date), this.fill()
                }
            }, fillDow: function () {
                var t = this.o.weekStart, e = "<tr>";
                if (this.o.calendarWeeks) {
                    var i = '<th class="cw">&nbsp;</th>';
                    e += i, this.picker.find(".datepicker-days thead tr:first-child").prepend(i)
                }
                for (; t < this.o.weekStart + 7;) e += '<th class="dow">' + c[this.o.language].daysMin[t++ % 7] + "</th>";
                e += "</tr>", this.picker.find(".datepicker-days thead").append(e)
            }, fillMonths: function () {
                for (var t = "", e = 0; e < 12;) t += '<span class="month">' + c[this.o.language].monthsShort[e++] + "</span>";
                this.picker.find(".datepicker-months td").html(t)
            }, setRange: function (e) {
                e && e.length ? this.range = t.map(e, function (t) {
                    return t.valueOf()
                }) : delete this.range, this.fill()
            }, getClassNames: function (e) {
                var i = [], n = this.viewDate.getUTCFullYear(), a = this.viewDate.getUTCMonth(),
                    s = this.date.valueOf(), o = new Date;
                return e.getUTCFullYear() < n || e.getUTCFullYear() == n && e.getUTCMonth() < a ? i.push("old") : (e.getUTCFullYear() > n || e.getUTCFullYear() == n && e.getUTCMonth() > a) && i.push("new"), this.o.todayHighlight && e.getUTCFullYear() == o.getFullYear() && e.getUTCMonth() == o.getMonth() && e.getUTCDate() == o.getDate() && i.push("today"), s && e.valueOf() == s && i.push("active"), (e.valueOf() < this.o.startDate || e.valueOf() > this.o.endDate || -1 !== t.inArray(e.getUTCDay(), this.o.daysOfWeekDisabled)) && i.push("disabled"), this.range && (e > this.range[0] && e < this.range[this.range.length - 1] && i.push("range"), -1 != t.inArray(e.valueOf(), this.range) && i.push("selected")), i
            }, fill: function () {
                var i, n = new Date(this.viewDate), a = n.getUTCFullYear(), s = n.getUTCMonth(),
                    o = this.o.startDate !== -Infinity ? this.o.startDate.getUTCFullYear() : -Infinity,
                    r = this.o.startDate !== -Infinity ? this.o.startDate.getUTCMonth() : -Infinity,
                    l = this.o.endDate !== Infinity ? this.o.endDate.getUTCFullYear() : Infinity,
                    d = this.o.endDate !== Infinity ? this.o.endDate.getUTCMonth() : Infinity;
                this.date && this.date.valueOf();
                this.picker.find(".datepicker-days thead th.datepicker-switch").text(c[this.o.language].months[s] + " " + a), this.picker.find("tfoot th.today").text(c[this.o.language].today).toggle(!1 !== this.o.todayBtn), this.picker.find("tfoot th.clear").text(c[this.o.language].clear).toggle(!1 !== this.o.clearBtn), this.updateNavArrows(), this.fillMonths();
                var f = e(a, s - 1, 28, 0, 0, 0, 0), p = u.getDaysInMonth(f.getUTCFullYear(), f.getUTCMonth());
                f.setUTCDate(p), f.setUTCDate(p - (f.getUTCDay() - this.o.weekStart + 7) % 7);
                var h = new Date(f);
                h.setUTCDate(h.getUTCDate() + 42), h = h.valueOf();
                for (var m, v = []; f.valueOf() < h;) {
                    if (f.getUTCDay() == this.o.weekStart && (v.push("<tr>"), this.o.calendarWeeks)) {
                        var g = new Date(+f + (this.o.weekStart - f.getUTCDay() - 7) % 7 * 864e5),
                            y = new Date(+g + (11 - g.getUTCDay()) % 7 * 864e5),
                            b = new Date(+(b = e(y.getUTCFullYear(), 0, 1)) + (11 - b.getUTCDay()) % 7 * 864e5),
                            k = (y - b) / 864e5 / 7 + 1;
                        v.push('<td class="cw">' + k + "</td>")
                    }
                    m = this.getClassNames(f), m.push("day");
                    var w = this.o.beforeShowDay(f);
                    w === undefined ? w = {} : "boolean" == typeof w ? w = {enabled: w} : "string" == typeof w && (w = {classes: w}), !1 === w.enabled && m.push("disabled"), w.classes && (m = m.concat(w.classes.split(/\s+/))), w.tooltip && (i = w.tooltip), m = t.unique(m), v.push('<td class="' + m.join(" ") + '"' + (i ? ' title="' + i + '"' : "") + ">" + f.getUTCDate() + "</td>"), f.getUTCDay() == this.o.weekEnd && v.push("</tr>"), f.setUTCDate(f.getUTCDate() + 1)
                }
                this.picker.find(".datepicker-days tbody").empty().append(v.join(""));
                var x = this.date && this.date.getUTCFullYear(),
                    C = this.picker.find(".datepicker-months").find("th:eq(1)").text(a).end().find("span").removeClass("active");
                x && x == a && C.eq(this.date.getUTCMonth()).addClass("active"), (a < o || a > l) && C.addClass("disabled"), a == o && C.slice(0, r).addClass("disabled"), a == l && C.slice(d + 1).addClass("disabled"), v = "", a = 10 * parseInt(a / 10, 10);
                var _ = this.picker.find(".datepicker-years").find("th:eq(1)").text(a + "-" + (a + 9)).end().find("td");
                a -= 1;
                for (var $ = -1; $ < 11; $++) v += '<span class="year' + (-1 == $ ? " old" : 10 == $ ? " new" : "") + (x == a ? " active" : "") + (a < o || a > l ? " disabled" : "") + '">' + a + "</span>", a += 1;
                _.html(v)
            }, updateNavArrows: function () {
                if (this._allow_update) {
                    var t = new Date(this.viewDate), e = t.getUTCFullYear(), i = t.getUTCMonth();
                    switch (this.viewMode) {
                        case 0:
                            this.o.startDate !== -Infinity && e <= this.o.startDate.getUTCFullYear() && i <= this.o.startDate.getUTCMonth() ? this.picker.find(".prev").css({visibility: "hidden"}) : this.picker.find(".prev").css({visibility: "visible"}), this.o.endDate !== Infinity && e >= this.o.endDate.getUTCFullYear() && i >= this.o.endDate.getUTCMonth() ? this.picker.find(".next").css({visibility: "hidden"}) : this.picker.find(".next").css({visibility: "visible"});
                            break;
                        case 1:
                        case 2:
                            this.o.startDate !== -Infinity && e <= this.o.startDate.getUTCFullYear() ? this.picker.find(".prev").css({visibility: "hidden"}) : this.picker.find(".prev").css({visibility: "visible"}), this.o.endDate !== Infinity && e >= this.o.endDate.getUTCFullYear() ? this.picker.find(".next").css({visibility: "hidden"}) : this.picker.find(".next").css({visibility: "visible"})
                    }
                }
            }, click: function (i) {
                i.preventDefault();
                var n = t(i.target).closest("span, td, th");
                if (1 == n.length) switch (n[0].nodeName.toLowerCase()) {
                    case"th":
                        switch (n[0].className) {
                            case"datepicker-switch":
                                this.showMode(1);
                                break;
                            case"prev":
                            case"next":
                                var a = u.modes[this.viewMode].navStep * ("prev" == n[0].className ? -1 : 1);
                                switch (this.viewMode) {
                                    case 0:
                                        this.viewDate = this.moveMonth(this.viewDate, a);
                                        break;
                                    case 1:
                                    case 2:
                                        this.viewDate = this.moveYear(this.viewDate, a)
                                }
                                this.fill();
                                break;
                            case"today":
                                var s = new Date;
                                s = e(s.getFullYear(), s.getMonth(), s.getDate(), 0, 0, 0), this.showMode(-2);
                                var o = "linked" == this.o.todayBtn ? null : "view";
                                this._setDate(s, o);
                                break;
                            case"clear":
                                var r;
                                this.isInput ? r = this.element : this.component && (r = this.element.find("input")), r && r.val("").change(), this._trigger("changeDate"), this.update(), this.o.autoclose && this.hide()
                        }
                        break;
                    case"span":
                        if (!n.is(".disabled")) {
                            if (this.viewDate.setUTCDate(1), n.is(".month")) {
                                var l = 1, d = n.parent().find("span").index(n), c = this.viewDate.getUTCFullYear();
                                this.viewDate.setUTCMonth(d), this._trigger("changeMonth", this.viewDate), 1 === this.o.minViewMode && this._setDate(e(c, d, l, 0, 0, 0, 0))
                            } else {
                                var c = parseInt(n.text(), 10) || 0, l = 1, d = 0;
                                this.viewDate.setUTCFullYear(c), this._trigger("changeYear", this.viewDate), 2 === this.o.minViewMode && this._setDate(e(c, d, l, 0, 0, 0, 0))
                            }
                            this.showMode(-1), this.fill()
                        }
                        break;
                    case"td":
                        if (n.is(".day") && !n.is(".disabled")) {
                            var l = parseInt(n.text(), 10) || 1, c = this.viewDate.getUTCFullYear(),
                                d = this.viewDate.getUTCMonth();
                            n.is(".old") ? 0 === d ? (d = 11, c -= 1) : d -= 1 : n.is(".new") && (11 == d ? (d = 0, c += 1) : d += 1), this._setDate(e(c, d, l, 0, 0, 0, 0))
                        }
                }
            }, _setDate: function (t, e) {
                e && "date" != e || (this.date = new Date(t)), e && "view" != e || (this.viewDate = new Date(t)), this.fill(), this.setValue(), this._trigger("changeDate");
                var i;
                this.isInput ? i = this.element : this.component && (i = this.element.find("input")), i && (i.change(), !this.o.autoclose || e && "date" != e || this.hide())
            }, moveMonth: function (t, e) {
                if (!e) return t;
                var i, n, a = new Date(t.valueOf()), s = a.getUTCDate(), o = a.getUTCMonth(), r = Math.abs(e);
                if (e = e > 0 ? 1 : -1, 1 == r) n = -1 == e ? function () {
                    return a.getUTCMonth() == o
                } : function () {
                    return a.getUTCMonth() != i
                }, i = o + e, a.setUTCMonth(i), (i < 0 || i > 11) && (i = (i + 12) % 12); else {
                    for (var l = 0; l < r; l++) a = this.moveMonth(a, e);
                    i = a.getUTCMonth(), a.setUTCDate(s), n = function () {
                        return i != a.getUTCMonth()
                    }
                }
                for (; n();) a.setUTCDate(--s), a.setUTCMonth(i);
                return a
            }, moveYear: function (t, e) {
                return this.moveMonth(t, 12 * e)
            }, dateWithinRange: function (t) {
                return t >= this.o.startDate && t <= this.o.endDate
            }, keydown: function (t) {
                if (this.picker.is(":not(:visible)")) return void(27 == t.keyCode && this.show());
                var e, i, n, a = !1;
                switch (t.keyCode) {
                    case 27:
                        this.hide(), t.preventDefault();
                        break;
                    case 37:
                    case 39:
                        if (!this.o.keyboardNavigation) break;
                        e = 37 == t.keyCode ? -1 : 1, t.ctrlKey ? (i = this.moveYear(this.date, e), n = this.moveYear(this.viewDate, e)) : t.shiftKey ? (i = this.moveMonth(this.date, e), n = this.moveMonth(this.viewDate, e)) : (i = new Date(this.date), i.setUTCDate(this.date.getUTCDate() + e), n = new Date(this.viewDate), n.setUTCDate(this.viewDate.getUTCDate() + e)), this.dateWithinRange(i) && (this.date = i, this.viewDate = n, this.setValue(), this.update(), t.preventDefault(), a = !0);
                        break;
                    case 38:
                    case 40:
                        if (!this.o.keyboardNavigation) break;
                        e = 38 == t.keyCode ? -1 : 1, t.ctrlKey ? (i = this.moveYear(this.date, e), n = this.moveYear(this.viewDate, e)) : t.shiftKey ? (i = this.moveMonth(this.date, e), n = this.moveMonth(this.viewDate, e)) : (i = new Date(this.date), i.setUTCDate(this.date.getUTCDate() + 7 * e), n = new Date(this.viewDate), n.setUTCDate(this.viewDate.getUTCDate() + 7 * e)), this.dateWithinRange(i) && (this.date = i, this.viewDate = n, this.setValue(), this.update(), t.preventDefault(), a = !0);
                        break;
                    case 13:
                        this.hide(), t.preventDefault();
                        break;
                    case 9:
                        this.hide()
                }
                if (a) {
                    this._trigger("changeDate");
                    var s;
                    this.isInput ? s = this.element : this.component && (s = this.element.find("input")), s && s.change()
                }
            }, showMode: function (t) {
                t && (this.viewMode = Math.max(this.o.minViewMode, Math.min(2, this.viewMode + t))), this.picker.find(">div").hide().filter(".datepicker-" + u.modes[this.viewMode].clsName).css("display", "block"), this.updateNavArrows()
            }
        };
        var s = function (e, i) {
            this.element = t(e), this.inputs = t.map(i.inputs, function (t) {
                return t.jquery ? t[0] : t
            }), delete i.inputs, t(this.inputs).datepicker(i).bind("changeDate", t.proxy(this.dateUpdated, this)), this.pickers = t.map(this.inputs, function (e) {
                return t(e).data("datepicker")
            }), this.updateDates()
        };
        s.prototype = {
            updateDates: function () {
                this.dates = t.map(this.pickers, function (t) {
                    return t.date
                }), this.updateRanges()
            }, updateRanges: function () {
                var e = t.map(this.dates, function (t) {
                    return t.valueOf()
                });
                t.each(this.pickers, function (t, i) {
                    i.setRange(e)
                })
            }, dateUpdated: function (e) {
                var i = t(e.target).data("datepicker"), n = i.getUTCDate(), a = t.inArray(e.target, this.inputs),
                    s = this.inputs.length;
                if (-1 != a) {
                    if (n < this.dates[a]) for (; a >= 0 && n < this.dates[a];) this.pickers[a--].setUTCDate(n); else if (n > this.dates[a]) for (; a < s && n > this.dates[a];) this.pickers[a++].setUTCDate(n);
                    this.updateDates()
                }
            }, remove: function () {
                t.map(this.pickers, function (t) {
                    t.remove()
                }), delete this.element.data().datepicker
            }
        };
        var o = t.fn.datepicker, r = t.fn.datepicker = function (e) {
            var o = Array.apply(null, arguments);
            o.shift();
            var r;
            return this.each(function () {
                var d = t(this), c = d.data("datepicker"), u = "object" == typeof e && e;
                if (!c) {
                    var f = i(this, "date"), p = t.extend({}, l, f, u), h = n(p.language), m = t.extend({}, l, h, f, u);
                    if (d.is(".input-daterange") || m.inputs) {
                        var v = {inputs: m.inputs || d.find("input").toArray()};
                        d.data("datepicker", c = new s(this, t.extend(m, v)))
                    } else d.data("datepicker", c = new a(this, m))
                }
                if ("string" == typeof e && "function" == typeof c[e] && (r = c[e].apply(c, o)) !== undefined) return !1
            }), r !== undefined ? r : this
        }, l = t.fn.datepicker.defaults = {
            autoclose: !1,
            beforeShowDay: t.noop,
            calendarWeeks: !1,
            clearBtn: !1,
            daysOfWeekDisabled: [],
            endDate: Infinity,
            forceParse: !0,
            format: "mm/dd/yyyy",
            keyboardNavigation: !0,
            language: "en",
            minViewMode: 0,
            rtl: !1,
            startDate: -Infinity,
            startView: 0,
            todayBtn: !1,
            todayHighlight: !1,
            weekStart: 0
        }, d = t.fn.datepicker.locale_opts = ["format", "rtl", "weekStart"];
        t.fn.datepicker.Constructor = a;
        var c = t.fn.datepicker.dates = {
            en: {
                days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"],
                daysShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"],
                daysMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa", "Su"],
                months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
                monthsShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                today: "Today",
                clear: "Clear"
            }
        }, u = {
            modes: [{clsName: "days", navFnc: "Month", navStep: 1}, {
                clsName: "months",
                navFnc: "FullYear",
                navStep: 1
            }, {clsName: "years", navFnc: "FullYear", navStep: 10}],
            isLeapYear: function (t) {
                return t % 4 == 0 && t % 100 != 0 || t % 400 == 0
            },
            getDaysInMonth: function (t, e) {
                return [31, u.isLeapYear(t) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][e]
            },
            validParts: /dd?|DD?|mm?|MM?|yy(?:yy)?/g,
            nonpunctuation: /[^ -\/:-@\[\u3400-\u9fff-`{-~\t\n\r]+/g,
            parseFormat: function (t) {
                var e = t.replace(this.validParts, "\0").split("\0"), i = t.match(this.validParts);
                if (!e || !e.length || !i || 0 === i.length) throw new Error("Invalid date format.");
                return {separators: e, parts: i}
            },
            parseDate: function (i, n, s) {
                if (i instanceof Date) return i;
                if ("string" == typeof n && (n = u.parseFormat(n)), /^[\-+]\d+[dmwy]([\s,]+[\-+]\d+[dmwy])*$/.test(i)) {
                    var o, r, l = /([\-+]\d+)([dmwy])/, d = i.match(/([\-+]\d+)([dmwy])/g);
                    i = new Date;
                    for (var f = 0; f < d.length; f++) switch (o = l.exec(d[f]), r = parseInt(o[1]), o[2]) {
                        case"d":
                            i.setUTCDate(i.getUTCDate() + r);
                            break;
                        case"m":
                            i = a.prototype.moveMonth.call(a.prototype, i, r);
                            break;
                        case"w":
                            i.setUTCDate(i.getUTCDate() + 7 * r);
                            break;
                        case"y":
                            i = a.prototype.moveYear.call(a.prototype, i, r)
                    }
                    return e(i.getUTCFullYear(), i.getUTCMonth(), i.getUTCDate(), 0, 0, 0)
                }
                var p, h, o, d = i && i.match(this.nonpunctuation) || [], i = new Date, m = {},
                    v = ["yyyy", "yy", "M", "MM", "m", "mm", "d", "dd"], g = {
                        yyyy: function (t, e) {
                            return t.setUTCFullYear(e)
                        }, yy: function (t, e) {
                            return t.setUTCFullYear(2e3 + e)
                        }, m: function (t, e) {
                            for (e -= 1; e < 0;) e += 12;
                            for (e %= 12, t.setUTCMonth(e); t.getUTCMonth() != e;) t.setUTCDate(t.getUTCDate() - 1);
                            return t
                        }, d: function (t, e) {
                            return t.setUTCDate(e)
                        }
                    };
                g.M = g.MM = g.mm = g.m, g.dd = g.d, i = e(i.getFullYear(), i.getMonth(), i.getDate(), 0, 0, 0);
                var y = n.parts.slice();
                if (d.length != y.length && (y = t(y).filter(function (e, i) {
                        return -1 !== t.inArray(i, v)
                    }).toArray()), d.length == y.length) {
                    for (var f = 0, b = y.length; f < b; f++) {
                        if (p = parseInt(d[f], 10), o = y[f], isNaN(p)) switch (o) {
                            case"MM":
                                h = t(c[s].months).filter(function () {
                                    var t = this.slice(0, d[f].length);
                                    return t == d[f].slice(0, t.length)
                                }), p = t.inArray(h[0], c[s].months) + 1;
                                break;
                            case"M":
                                h = t(c[s].monthsShort).filter(function () {
                                    var t = this.slice(0, d[f].length);
                                    return t == d[f].slice(0, t.length)
                                }), p = t.inArray(h[0], c[s].monthsShort) + 1
                        }
                        m[o] = p
                    }
                    for (var k, f = 0; f < v.length; f++) (k = v[f]) in m && !isNaN(m[k]) && g[k](i, m[k])
                }
                return i
            },
            formatDate: function (e, i, n) {
                "string" == typeof i && (i = u.parseFormat(i));
                var a = {
                    d: e.getUTCDate(),
                    D: c[n].daysShort[e.getUTCDay()],
                    DD: c[n].days[e.getUTCDay()],
                    m: e.getUTCMonth() + 1,
                    M: c[n].monthsShort[e.getUTCMonth()],
                    MM: c[n].months[e.getUTCMonth()],
                    yy: e.getUTCFullYear().toString().substring(2),
                    yyyy: e.getUTCFullYear()
                };
                a.dd = (a.d < 10 ? "0" : "") + a.d, a.mm = (a.m < 10 ? "0" : "") + a.m;
                for (var e = [], s = t.extend([], i.separators), o = 0, r = i.parts.length; o <= r; o++) s.length && e.push(s.shift()), e.push(a[i.parts[o]]);
                return e.join("")
            },
            headTemplate: '<thead><tr><th class="prev"><i class="icon-arrow-left"/></th><th colspan="5" class="datepicker-switch"></th><th class="next"><i class="icon-arrow-right"/></th></tr></thead>',
            contTemplate: '<tbody><tr><td colspan="7"></td></tr></tbody>',
            footTemplate: '<tfoot><tr><th colspan="7" class="today"></th></tr><tr><th colspan="7" class="clear"></th></tr></tfoot>'
        };
        u.template = '<div class="datepicker"><div class="datepicker-days"><table class=" table-condensed">' + u.headTemplate + "<tbody></tbody>" + u.footTemplate + '</table></div><div class="datepicker-months"><table class="table-condensed">' + u.headTemplate + u.contTemplate + u.footTemplate + '</table></div><div class="datepicker-years"><table class="table-condensed">' + u.headTemplate + u.contTemplate + u.footTemplate + "</table></div></div>", t.fn.datepicker.DPGlobal = u, t.fn.datepicker.noConflict = function () {
            return t.fn.datepicker = o, this
        }, t(document).on("focus.datepicker.data-api click.datepicker.data-api", '[data-provide="datepicker"]', function (e) {
            var i = t(this);
            i.data("datepicker") || (e.preventDefault(), r.call(i, "show"))
        }), t(function () {
            r.call(t('[data-provide="datepicker-inline"]'))
        })
    }(window.jQuery), function (t) {
    "use strict";
    t.fn.bdatepicker = t.fn.datepicker.noConflict(), t.fn.datepicker || (t.fn.datepicker = t.fn.bdatepicker);
    var e = function (t) {
        this.init("date", t, e.defaults), this.initPicker(t, e.defaults)
    };
    t.fn.editableutils.inherit(e, t.fn.editabletypes.abstractinput), t.extend(e.prototype, {
        initPicker: function (e, i) {
            this.options.viewformat || (this.options.viewformat = this.options.format), e.datepicker = t.fn.editableutils.tryParseJson(e.datepicker, !0), this.options.datepicker = t.extend({}, i.datepicker, e.datepicker, {format: this.options.viewformat}), this.options.datepicker.language = this.options.datepicker.language || "en", this.dpg = t.fn.bdatepicker.DPGlobal, this.parsedFormat = this.dpg.parseFormat(this.options.format), this.parsedViewFormat = this.dpg.parseFormat(this.options.viewformat)
        }, render: function () {
            this.$input.bdatepicker(this.options.datepicker), this.options.clear && (this.$clear = t('<a href="#"></a>').html(this.options.clear).click(t.proxy(function (t) {
                t.preventDefault(), t.stopPropagation(), this.clear()
            }, this)), this.$tpl.parent().append(t('<div class="editable-clear">').append(this.$clear)))
        }, value2html: function (t, i) {
            var n = t ? this.dpg.formatDate(t, this.parsedViewFormat, this.options.datepicker.language) : "";
            e.superclass.value2html.call(this, n, i)
        }, html2value: function (t) {
            return this.parseDate(t, this.parsedViewFormat)
        }, value2str: function (t) {
            return t ? this.dpg.formatDate(t, this.parsedFormat, this.options.datepicker.language) : ""
        }, str2value: function (t) {
            return this.parseDate(t, this.parsedFormat)
        }, value2submit: function (t) {
            return this.value2str(t)
        }, value2input: function (t) {
            this.$input.bdatepicker("update", t)
        }, input2value: function () {
            return this.$input.data("datepicker").date
        }, activate: function () {
        }, clear: function () {
            this.$input.data("datepicker").date = null, this.$input.find(".active").removeClass("active"), this.options.showbuttons || this.$input.closest("form").submit()
        }, autosubmit: function () {
            this.$input.on("mouseup", ".day", function (e) {
                if (!t(e.currentTarget).is(".old") && !t(e.currentTarget).is(".new")) {
                    var i = t(this).closest("form");
                    setTimeout(function () {
                        i.submit()
                    }, 200)
                }
            })
        }, parseDate: function (t, e) {
            var i, n = null;
            return t && (n = this.dpg.parseDate(t, e, this.options.datepicker.language), "string" == typeof t && (i = this.dpg.formatDate(n, e, this.options.datepicker.language), t !== i && (n = null))), n
        }
    }), e.defaults = t.extend({}, t.fn.editabletypes.abstractinput.defaults, {
        tpl: '<div class="editable-date well"></div>',
        inputclass: null,
        format: "yyyy-mm-dd",
        viewformat: null,
        datepicker: {weekStart: 0, startView: 0, minViewMode: 0, autoclose: !1},
        clear: "&times; clear"
    }), t.fn.editabletypes.date = e
}(window.jQuery), function (t) {
    "use strict";
    var e = function (t) {
        this.init("datefield", t, e.defaults), this.initPicker(t, e.defaults)
    };
    t.fn.editableutils.inherit(e, t.fn.editabletypes.date), t.extend(e.prototype, {
        render: function () {
            this.$input = this.$tpl.find("input"), this.setClass(), this.setAttr("placeholder"), this.$tpl.bdatepicker(this.options.datepicker), this.$input.off("focus keydown"), this.$input.keyup(t.proxy(function () {
                this.$tpl.removeData("date"), this.$tpl.bdatepicker("update")
            }, this))
        }, value2input: function (t) {
            this.$input.val(t ? this.dpg.formatDate(t, this.parsedViewFormat, this.options.datepicker.language) : ""), this.$tpl.bdatepicker("update")
        }, input2value: function () {
            return this.html2value(this.$input.val())
        }, activate: function () {
            t.fn.editabletypes.text.prototype.activate.call(this)
        }, autosubmit: function () {
        }
    }), e.defaults = t.extend({}, t.fn.editabletypes.date.defaults, {
        tpl: '<div class="input-append date"><input type="text"/><span class="add-on"><i class="icon-th"></i></span></div>',
        inputclass: "input-small",
        datepicker: {weekStart: 0, startView: 0, minViewMode: 0, autoclose: !0}
    }), t.fn.editabletypes.datefield = e
}(window.jQuery), function (t) {
    "use strict";
    var e = function (t) {
        this.init("datetime", t, e.defaults), this.initPicker(t, e.defaults)
    };
    t.fn.editableutils.inherit(e, t.fn.editabletypes.abstractinput), t.extend(e.prototype, {
        initPicker: function (e, i) {
            this.options.viewformat || (this.options.viewformat = this.options.format), e.datetimepicker = t.fn.editableutils.tryParseJson(e.datetimepicker, !0), this.options.datetimepicker = t.extend({}, i.datetimepicker, e.datetimepicker, {format: this.options.viewformat}), this.options.datetimepicker.language = this.options.datetimepicker.language || "en", this.dpg = t.fn.datetimepicker.DPGlobal, this.parsedFormat = this.dpg.parseFormat(this.options.format, this.options.formatType), this.parsedViewFormat = this.dpg.parseFormat(this.options.viewformat, this.options.formatType)
        }, render: function () {
            this.$input.datetimepicker(this.options.datetimepicker), this.$input.on("changeMode", function () {
                var e = t(this).closest("form").parent();
                setTimeout(function () {
                    e.triggerHandler("resize")
                }, 0)
            }), this.options.clear && (this.$clear = t('<a href="#"></a>').html(this.options.clear).click(t.proxy(function (t) {
                t.preventDefault(), t.stopPropagation(), this.clear()
            }, this)), this.$tpl.parent().append(t('<div class="editable-clear">').append(this.$clear)))
        }, value2html: function (t, i) {
            var n = t ? this.dpg.formatDate(this.toUTC(t), this.parsedViewFormat, this.options.datetimepicker.language, this.options.formatType) : "";
            if (!i) return n;
            e.superclass.value2html.call(this, n, i)
        }, html2value: function (t) {
            var e = this.parseDate(t, this.parsedViewFormat);
            return e ? this.fromUTC(e) : null
        }, value2str: function (t) {
            return t ? this.dpg.formatDate(this.toUTC(t), this.parsedFormat, this.options.datetimepicker.language, this.options.formatType) : ""
        }, str2value: function (t) {
            var e = this.parseDate(t, this.parsedFormat);
            return e ? this.fromUTC(e) : null
        }, value2submit: function (t) {
            return this.value2str(t)
        }, value2input: function (t) {
            t && this.$input.data("datetimepicker").setDate(t)
        }, input2value: function () {
            var t = this.$input.data("datetimepicker");
            return t.date ? t.getDate() : null
        }, activate: function () {
        }, clear: function () {
            this.$input.data("datetimepicker").date = null, this.$input.find(".active").removeClass("active"), this.options.showbuttons || this.$input.closest("form").submit()
        }, autosubmit: function () {
            this.$input.on("mouseup", ".minute", function () {
                var e = t(this).closest("form");
                setTimeout(function () {
                    e.submit()
                }, 200)
            })
        }, toUTC: function (t) {
            return t ? new Date(t.valueOf() - 6e4 * t.getTimezoneOffset()) : t
        }, fromUTC: function (t) {
            return t ? new Date(t.valueOf() + 6e4 * t.getTimezoneOffset()) : t
        }, parseDate: function (t, e) {
            var i, n = null;
            return t && (n = this.dpg.parseDate(t, e, this.options.datetimepicker.language, this.options.formatType), "string" == typeof t && (i = this.dpg.formatDate(n, e, this.options.datetimepicker.language, this.options.formatType), t !== i && (n = null))), n
        }
    }), e.defaults = t.extend({}, t.fn.editabletypes.abstractinput.defaults, {
        tpl: '<div class="editable-date well"></div>',
        inputclass: null,
        format: "yyyy-mm-dd hh:ii",
        formatType: "standard",
        viewformat: null,
        datetimepicker: {todayHighlight: !1, autoclose: !1},
        clear: "&times; clear"
    }), t.fn.editabletypes.datetime = e
}(window.jQuery), function (t) {
    "use strict";
    var e = function (t) {
        this.init("datetimefield", t, e.defaults), this.initPicker(t, e.defaults)
    };
    t.fn.editableutils.inherit(e, t.fn.editabletypes.datetime), t.extend(e.prototype, {
        render: function () {
            this.$input = this.$tpl.find("input"), this.setClass(), this.setAttr("placeholder"), this.$tpl.datetimepicker(this.options.datetimepicker), this.$input.off("focus keydown"), this.$input.keyup(t.proxy(function () {
                this.$tpl.removeData("date"), this.$tpl.datetimepicker("update")
            }, this))
        }, value2input: function (t) {
            this.$input.val(this.value2html(t)), this.$tpl.datetimepicker("update")
        }, input2value: function () {
            return this.html2value(this.$input.val())
        }, activate: function () {
            t.fn.editabletypes.text.prototype.activate.call(this)
        }, autosubmit: function () {
        }
    }), e.defaults = t.extend({}, t.fn.editabletypes.datetime.defaults, {
        tpl: '<div class="input-append date"><input type="text"/><span class="add-on"><i class="icon-th"></i></span></div>',
        inputclass: "input-medium",
        datetimepicker: {todayHighlight: !1, autoclose: !0}
    }), t.fn.editabletypes.datetimefield = e
}(window.jQuery), function (t, e, i) {
    "use strict";
    !function t(e, i, n) {
        function a(o, r) {
            if (!i[o]) {
                if (!e[o]) {
                    var l = "function" == typeof require && require;
                    if (!r && l) return l(o, !0);
                    if (s) return s(o, !0);
                    var d = new Error("Cannot find module '" + o + "'");
                    throw d.code = "MODULE_NOT_FOUND", d
                }
                var c = i[o] = {exports: {}};
                e[o][0].call(c.exports, function (t) {
                    var i = e[o][1][t];
                    return a(i || t)
                }, c, c.exports, t, e, i, n)
            }
            return i[o].exports
        }

        for (var s = "function" == typeof require && require, o = 0; o < n.length; o++) a(n[o]);
        return a
    }({
        1: [function (n, a, s) {
            var o = function (t) {
                return t && t.__esModule ? t : {"default": t}
            };
            Object.defineProperty(s, "__esModule", {value: !0});
            var r, l, d, c, u = n("./modules/handle-dom"), f = n("./modules/utils"), p = n("./modules/handle-swal-dom"),
                h = n("./modules/handle-click"), m = n("./modules/handle-key"), v = o(m),
                g = n("./modules/default-params"), y = o(g), b = n("./modules/set-params"), k = o(b);
            s["default"] = d = c = function () {
                function n(t) {
                    var e = a;
                    return e[t] === i ? y["default"][t] : e[t]
                }

                var a = arguments[0];
                if (u.addClass(e.body, "stop-scrolling"), p.resetInput(), a === i) return f.logStr("SweetAlert expects at least 1 attribute!"), !1;
                var s = f.extend({}, y["default"]);
                switch (typeof a) {
                    case"string":
                        s.title = a, s.text = arguments[1] || "", s.type = arguments[2] || "";
                        break;
                    case"object":
                        if (a.title === i) return f.logStr('Missing "title" argument!'), !1;
                        s.title = a.title;
                        for (var o in y["default"]) s[o] = n(o);
                        s.confirmButtonText = s.showCancelButton ? "Confirm" : y["default"].confirmButtonText, s.confirmButtonText = n("confirmButtonText"), s.doneFunction = arguments[1] || null;
                        break;
                    default:
                        return f.logStr('Unexpected type of argument! Expected "string" or "object", got ' + typeof a), !1
                }
                k["default"](s), p.fixVerticalPosition(), p.openModal(arguments[1]);
                for (var d = p.getModal(), m = d.querySelectorAll("button"), g = ["onclick", "onmouseover", "onmouseout", "onmousedown", "onmouseup", "onfocus"], b = function (t) {
                    return h.handleButton(t, s, d)
                }, w = 0; w < m.length; w++) for (var x = 0; x < g.length; x++) {
                    var C = g[x];
                    m[w][C] = b
                }
                p.getOverlay().onclick = b, r = t.onkeydown;
                var _ = function (t) {
                    return v["default"](t, s, d)
                };
                t.onkeydown = _, t.onfocus = function () {
                    setTimeout(function () {
                        l !== i && (l.focus(), l = i)
                    }, 0)
                }, c.enableButtons()
            }, d.setDefaults = c.setDefaults = function (t) {
                if (!t) throw new Error("userParams is required");
                if ("object" != typeof t) throw new Error("userParams has to be a object");
                f.extend(y["default"], t)
            }, d.close = c.close = function () {
                var n = p.getModal();
                u.fadeOut(p.getOverlay(), 5), u.fadeOut(n, 5), u.removeClass(n, "showSweetAlert"), u.addClass(n, "hideSweetAlert"), u.removeClass(n, "visible");
                var a = n.querySelector(".sa-icon.sa-success");
                u.removeClass(a, "animate"), u.removeClass(a.querySelector(".sa-tip"), "animateSuccessTip"), u.removeClass(a.querySelector(".sa-long"), "animateSuccessLong");
                var s = n.querySelector(".sa-icon.sa-error");
                u.removeClass(s, "animateErrorIcon"), u.removeClass(s.querySelector(".sa-x-mark"), "animateXMark");
                var o = n.querySelector(".sa-icon.sa-warning");
                return u.removeClass(o, "pulseWarning"), u.removeClass(o.querySelector(".sa-body"), "pulseWarningIns"), u.removeClass(o.querySelector(".sa-dot"), "pulseWarningIns"), setTimeout(function () {
                    var t = n.getAttribute("data-custom-class");
                    u.removeClass(n, t)
                }, 300), u.removeClass(e.body, "stop-scrolling"), t.onkeydown = r, t.previousActiveElement && t.previousActiveElement.focus(), l = i, clearTimeout(n.timeout), !0
            }, d.showInputError = c.showInputError = function (t) {
                var e = p.getModal(), i = e.querySelector(".sa-input-error");
                u.addClass(i, "show");
                var n = e.querySelector(".sa-error-container");
                u.addClass(n, "show"), n.querySelector("p").innerHTML = t, setTimeout(function () {
                    d.enableButtons()
                }, 1), e.querySelector("input").focus()
            },
                d.resetInputError = c.resetInputError = function (t) {
                    if (t && 13 === t.keyCode) return !1;
                    var e = p.getModal(), i = e.querySelector(".sa-input-error");
                    u.removeClass(i, "show");
                    var n = e.querySelector(".sa-error-container");
                    u.removeClass(n, "show")
                }, d.disableButtons = c.disableButtons = function () {
                var t = p.getModal(), e = t.querySelector("button.confirm"), i = t.querySelector("button.cancel");
                e.disabled = !0, i.disabled = !0
            }, d.enableButtons = c.enableButtons = function () {
                var t = p.getModal(), e = t.querySelector("button.confirm"), i = t.querySelector("button.cancel");
                e.disabled = !1, i.disabled = !1
            }, void 0 !== t ? t.sweetAlert = t.swal = d : f.logStr("SweetAlert is a frontend module!"), a.exports = s["default"]
        }, {
            "./modules/default-params": 2,
            "./modules/handle-click": 3,
            "./modules/handle-dom": 4,
            "./modules/handle-key": 5,
            "./modules/handle-swal-dom": 6,
            "./modules/set-params": 8,
            "./modules/utils": 9
        }], 2: [function (t, e, i) {
            Object.defineProperty(i, "__esModule", {value: !0});
            var n = {
                title: "",
                text: "",
                type: null,
                allowOutsideClick: !1,
                showConfirmButton: !0,
                showCancelButton: !1,
                closeOnConfirm: !0,
                closeOnCancel: !0,
                confirmButtonText: "OK",
                confirmButtonColor: "#8CD4F5",
                cancelButtonText: "Cancel",
                imageUrl: null,
                imageSize: null,
                timer: null,
                customClass: "",
                html: !1,
                animation: !0,
                allowEscapeKey: !0,
                inputType: "text",
                inputPlaceholder: "",
                inputValue: "",
                showLoaderOnConfirm: !1
            };
            i["default"] = n, e.exports = i["default"]
        }, {}], 3: [function (e, i, n) {
            Object.defineProperty(n, "__esModule", {value: !0});
            var a = e("./utils"), s = (e("./handle-swal-dom"), e("./handle-dom")), o = function (e, i, n) {
                function o(t) {
                    h && i.confirmButtonColor && (p.style.backgroundColor = t)
                }

                var d, c, u, f = e || t.event, p = f.target || f.srcElement, h = -1 !== p.className.indexOf("confirm"),
                    m = -1 !== p.className.indexOf("sweet-overlay"), v = s.hasClass(n, "visible"),
                    g = i.doneFunction && "true" === n.getAttribute("data-has-done-function");
                switch (h && i.confirmButtonColor && (d = i.confirmButtonColor, c = a.colorLuminance(d, -.04), u = a.colorLuminance(d, -.14)), f.type) {
                    case"mouseover":
                        o(c);
                        break;
                    case"mouseout":
                        o(d);
                        break;
                    case"mousedown":
                        o(u);
                        break;
                    case"mouseup":
                        o(c);
                        break;
                    case"focus":
                        var y = n.querySelector("button.confirm"), b = n.querySelector("button.cancel");
                        h ? b.style.boxShadow = "none" : y.style.boxShadow = "none";
                        break;
                    case"click":
                        var k = n === p, w = s.isDescendant(n, p);
                        if (!k && !w && v && !i.allowOutsideClick) break;
                        h && g && v ? r(n, i) : g && v || m ? l(n, i) : s.isDescendant(n, p) && "BUTTON" === p.tagName && sweetAlert.close()
                }
            }, r = function (t, e) {
                var i = !0;
                s.hasClass(t, "show-input") && ((i = t.querySelector("input").value) || (i = "")), e.doneFunction(i), e.closeOnConfirm && sweetAlert.close(), e.showLoaderOnConfirm && sweetAlert.disableButtons()
            }, l = function (t, e) {
                var i = String(e.doneFunction).replace(/\s/g, "");
                "function(" === i.substring(0, 9) && ")" !== i.substring(9, 10) && e.doneFunction(!1), e.closeOnCancel && sweetAlert.close()
            };
            n["default"] = {handleButton: o, handleConfirm: r, handleCancel: l}, i.exports = n["default"]
        }, {"./handle-dom": 4, "./handle-swal-dom": 6, "./utils": 9}], 4: [function (i, n, a) {
            Object.defineProperty(a, "__esModule", {value: !0});
            var s = function (t, e) {
                return new RegExp(" " + e + " ").test(" " + t.className + " ")
            }, o = function (t, e) {
                s(t, e) || (t.className += " " + e)
            }, r = function (t, e) {
                var i = " " + t.className.replace(/[\t\r\n]/g, " ") + " ";
                if (s(t, e)) {
                    for (; i.indexOf(" " + e + " ") >= 0;) i = i.replace(" " + e + " ", " ");
                    t.className = i.replace(/^\s+|\s+$/g, "")
                }
            }, l = function (t) {
                var i = e.createElement("div");
                return i.appendChild(e.createTextNode(t)), i.innerHTML
            }, d = function (t) {
                t.style.opacity = "", t.style.display = "block"
            }, c = function (t) {
                if (t && !t.length) return d(t);
                for (var e = 0; e < t.length; ++e) d(t[e])
            }, u = function (t) {
                t.style.opacity = "", t.style.display = "none"
            }, f = function (t) {
                if (t && !t.length) return u(t);
                for (var e = 0; e < t.length; ++e) u(t[e])
            }, p = function (t, e) {
                for (var i = e.parentNode; null !== i;) {
                    if (i === t) return !0;
                    i = i.parentNode
                }
                return !1
            }, h = function (t) {
                t.style.left = "-9999px", t.style.display = "block";
                var e, i = t.clientHeight;
                return e = "undefined" != typeof getComputedStyle ? parseInt(getComputedStyle(t).getPropertyValue("padding-top"), 10) : parseInt(t.currentStyle.padding), t.style.left = "", t.style.display = "none", "-" + parseInt((i + e) / 2) + "px"
            }, m = function (t, e) {
                if (+t.style.opacity < 1) {
                    e = e || 16, t.style.opacity = 0, t.style.display = "block";
                    var i = +new Date, n = function (t) {
                        function e() {
                            return t.apply(this, arguments)
                        }

                        return e.toString = function () {
                            return t.toString()
                        }, e
                    }(function () {
                        t.style.opacity = +t.style.opacity + (new Date - i) / 100, i = +new Date, +t.style.opacity < 1 && setTimeout(n, e)
                    });
                    n()
                }
                t.style.display = "block"
            }, v = function (t, e) {
                e = e || 16, t.style.opacity = 1;
                var i = +new Date, n = function (t) {
                    function e() {
                        return t.apply(this, arguments)
                    }

                    return e.toString = function () {
                        return t.toString()
                    }, e
                }(function () {
                    t.style.opacity = +t.style.opacity - (new Date - i) / 100, i = +new Date, +t.style.opacity > 0 ? setTimeout(n, e) : t.style.display = "none"
                });
                n()
            }, g = function (i) {
                if ("function" == typeof MouseEvent) {
                    var n = new MouseEvent("click", {view: t, bubbles: !1, cancelable: !0});
                    i.dispatchEvent(n)
                } else if (e.createEvent) {
                    var a = e.createEvent("MouseEvents");
                    a.initEvent("click", !1, !1), i.dispatchEvent(a)
                } else e.createEventObject ? i.fireEvent("onclick") : "function" == typeof i.onclick && i.onclick()
            }, y = function (e) {
                "function" == typeof e.stopPropagation ? (e.stopPropagation(), e.preventDefault()) : t.event && t.event.hasOwnProperty("cancelBubble") && (t.event.cancelBubble = !0)
            };
            a.hasClass = s, a.addClass = o, a.removeClass = r, a.escapeHtml = l, a._show = d, a.show = c, a._hide = u, a.hide = f, a.isDescendant = p, a.getTopMargin = h, a.fadeIn = m, a.fadeOut = v, a.fireClick = g, a.stopEventPropagation = y
        }, {}], 5: [function (e, n, a) {
            Object.defineProperty(a, "__esModule", {value: !0});
            var s = e("./handle-dom"), o = e("./handle-swal-dom"), r = function (e, n, a) {
                var r = e || t.event, l = r.keyCode || r.which, d = a.querySelector("button.confirm"),
                    c = a.querySelector("button.cancel"), u = a.querySelectorAll("button[tabindex]");
                if (-1 !== [9, 13, 32, 27].indexOf(l)) {
                    for (var f = r.target || r.srcElement, p = -1, h = 0; h < u.length; h++) if (f === u[h]) {
                        p = h;
                        break
                    }
                    9 === l ? (f = -1 === p ? d : p === u.length - 1 ? u[0] : u[p + 1], s.stopEventPropagation(r), f.focus(), n.confirmButtonColor && o.setFocusStyle(f, n.confirmButtonColor)) : 13 === l ? ("INPUT" === f.tagName && (f = d, d.focus()), f = -1 === p ? d : i) : 27 === l && !0 === n.allowEscapeKey ? (f = c, s.fireClick(f, r)) : f = i
                }
            };
            a["default"] = r, n.exports = a["default"]
        }, {"./handle-dom": 4, "./handle-swal-dom": 6}], 6: [function (i, n, a) {
            var s = function (t) {
                return t && t.__esModule ? t : {"default": t}
            };
            Object.defineProperty(a, "__esModule", {value: !0});
            var o = i("./utils"), r = i("./handle-dom"), l = i("./default-params"), d = s(l), c = i("./injected-html"),
                u = s(c), f = ".sweet-alert", p = ".sweet-overlay", h = function () {
                    var t = e.createElement("div");
                    for (t.innerHTML = u["default"]; t.firstChild;) e.body.appendChild(t.firstChild)
                }, m = function (t) {
                    function e() {
                        return t.apply(this, arguments)
                    }

                    return e.toString = function () {
                        return t.toString()
                    }, e
                }(function () {
                    var t = e.querySelector(f);
                    return t || (h(), t = m()), t
                }), v = function () {
                    var t = m();
                    return t ? t.querySelector("input") : void 0
                }, g = function () {
                    return e.querySelector(p)
                }, y = function (t, e) {
                    var i = o.hexToRgb(e);
                    t.style.boxShadow = "0 0 2px rgba(" + i + ", 0.8), inset 0 0 0 1px rgba(0, 0, 0, 0.05)"
                }, b = function (i) {
                    var n = m();
                    r.fadeIn(g(), 10), r.show(n), r.addClass(n, "showSweetAlert"), r.removeClass(n, "hideSweetAlert"), t.previousActiveElement = e.activeElement, n.querySelector("button.confirm").focus(), setTimeout(function () {
                        r.addClass(n, "visible")
                    }, 500);
                    var a = n.getAttribute("data-timer");
                    if ("null" !== a && "" !== a) {
                        var s = i;
                        n.timeout = setTimeout(function () {
                            (s || null) && "true" === n.getAttribute("data-has-done-function") ? s(null) : sweetAlert.close()
                        }, a)
                    }
                }, k = function () {
                    var t = m(), e = v();
                    r.removeClass(t, "show-input"), e.value = d["default"].inputValue, e.setAttribute("type", d["default"].inputType), e.setAttribute("placeholder", d["default"].inputPlaceholder), w()
                }, w = function (t) {
                    if (t && 13 === t.keyCode) return !1;
                    var e = m(), i = e.querySelector(".sa-input-error");
                    r.removeClass(i, "show");
                    var n = e.querySelector(".sa-error-container");
                    r.removeClass(n, "show")
                }, x = function () {
                    m().style.marginTop = r.getTopMargin(m())
                };
            a.sweetAlertInitialize = h, a.getModal = m, a.getOverlay = g, a.getInput = v, a.setFocusStyle = y, a.openModal = b, a.resetInput = k, a.resetInputError = w, a.fixVerticalPosition = x
        }, {"./default-params": 2, "./handle-dom": 4, "./injected-html": 7, "./utils": 9}], 7: [function (t, e, i) {
            Object.defineProperty(i, "__esModule", {value: !0}), i["default"] = '<div class="sweet-overlay" tabIndex="-1"></div><div class="sweet-alert"><div class="sa-icon sa-error">\n      <span class="sa-x-mark">\n        <span class="sa-line sa-left"></span>\n        <span class="sa-line sa-right"></span>\n      </span>\n    </div><div class="sa-icon sa-warning">\n      <span class="sa-body"></span>\n      <span class="sa-dot"></span>\n    </div><div class="sa-icon sa-info"></div><div class="sa-icon sa-success">\n      <span class="sa-line sa-tip"></span>\n      <span class="sa-line sa-long"></span>\n\n      <div class="sa-placeholder"></div>\n      <div class="sa-fix"></div>\n    </div><div class="sa-icon sa-custom"></div><h2>Title</h2>\n    <p>Text</p>\n    <fieldset>\n      <input type="text" tabIndex="3" />\n      <div class="sa-input-error"></div>\n    </fieldset><div class="sa-error-container">\n      <div class="icon">!</div>\n      <p>Not valid!</p>\n    </div><div class="sa-button-container">\n      <button class="cancel" tabIndex="2">Cancel</button>\n      <div class="sa-confirm-button-container">\n        <button class="confirm" tabIndex="1">OK</button><div class="la-ball-fall">\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      </div>\n    </div></div>', e.exports = i["default"]
        }, {}], 8: [function (t, e, n) {
            Object.defineProperty(n, "__esModule", {value: !0});
            var a = t("./utils"), s = t("./handle-swal-dom"), o = t("./handle-dom"),
                r = ["error", "warning", "info", "success", "input", "prompt"], l = function (t) {
                    var e = s.getModal(), n = e.querySelector("h2"), l = e.querySelector("p"),
                        d = e.querySelector("button.cancel"), c = e.querySelector("button.confirm");
                    if (n.innerHTML = t.html ? t.title : o.escapeHtml(t.title).split("\n").join("<br>"), l.innerHTML = t.html ? t.text : o.escapeHtml(t.text || "").split("\n").join("<br>"), t.text && o.show(l), t.customClass) o.addClass(e, t.customClass), e.setAttribute("data-custom-class", t.customClass); else {
                        var u = e.getAttribute("data-custom-class");
                        o.removeClass(e, u), e.setAttribute("data-custom-class", "")
                    }
                    if (o.hide(e.querySelectorAll(".sa-icon")), t.type && !a.isIE8()) {
                        var f = function () {
                            for (var n = !1, a = 0; a < r.length; a++) if (t.type === r[a]) {
                                n = !0;
                                break
                            }
                            if (!n) return logStr("Unknown alert type: " + t.type), {v: !1};
                            var l = ["success", "error", "warning", "info"], d = i;
                            -1 !== l.indexOf(t.type) && (d = e.querySelector(".sa-icon.sa-" + t.type), o.show(d));
                            var c = s.getInput();
                            switch (t.type) {
                                case"success":
                                    o.addClass(d, "animate"), o.addClass(d.querySelector(".sa-tip"), "animateSuccessTip"), o.addClass(d.querySelector(".sa-long"), "animateSuccessLong");
                                    break;
                                case"error":
                                    o.addClass(d, "animateErrorIcon"), o.addClass(d.querySelector(".sa-x-mark"), "animateXMark");
                                    break;
                                case"warning":
                                    o.addClass(d, "pulseWarning"), o.addClass(d.querySelector(".sa-body"), "pulseWarningIns"), o.addClass(d.querySelector(".sa-dot"), "pulseWarningIns");
                                    break;
                                case"input":
                                case"prompt":
                                    c.setAttribute("type", t.inputType), c.value = t.inputValue, c.setAttribute("placeholder", t.inputPlaceholder), o.addClass(e, "show-input"), setTimeout(function () {
                                        c.focus(), c.addEventListener("keyup", swal.resetInputError)
                                    }, 400)
                            }
                        }();
                        if ("object" == typeof f) return f.v
                    }
                    if (t.imageUrl) {
                        var p = e.querySelector(".sa-icon.sa-custom");
                        p.style.backgroundImage = "url(" + t.imageUrl + ")", o.show(p);
                        var h = 80, m = 80;
                        if (t.imageSize) {
                            var v = t.imageSize.toString().split("x"), g = v[0], y = v[1];
                            g && y ? (h = g, m = y) : logStr("Parameter imageSize expects value with format WIDTHxHEIGHT, got " + t.imageSize)
                        }
                        p.setAttribute("style", p.getAttribute("style") + "width:" + h + "px; height:" + m + "px")
                    }
                    e.setAttribute("data-has-cancel-button", t.showCancelButton), t.showCancelButton ? d.style.display = "inline-block" : o.hide(d), e.setAttribute("data-has-confirm-button", t.showConfirmButton), t.showConfirmButton ? c.style.display = "inline-block" : o.hide(c), t.cancelButtonText && (d.innerHTML = o.escapeHtml(t.cancelButtonText)), t.confirmButtonText && (c.innerHTML = o.escapeHtml(t.confirmButtonText)), t.confirmButtonColor && (c.style.backgroundColor = t.confirmButtonColor, c.style.borderLeftColor = t.confirmLoadingButtonColor, c.style.borderRightColor = t.confirmLoadingButtonColor, s.setFocusStyle(c, t.confirmButtonColor)), e.setAttribute("data-allow-outside-click", t.allowOutsideClick);
                    var b = !!t.doneFunction;
                    e.setAttribute("data-has-done-function", b), t.animation ? "string" == typeof t.animation ? e.setAttribute("data-animation", t.animation) : e.setAttribute("data-animation", "pop") : e.setAttribute("data-animation", "none"), e.setAttribute("data-timer", t.timer)
                };
            n["default"] = l, e.exports = n["default"]
        }, {"./handle-dom": 4, "./handle-swal-dom": 6, "./utils": 9}], 9: [function (e, i, n) {
            Object.defineProperty(n, "__esModule", {value: !0});
            var a = function (t, e) {
                for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
                return t
            }, s = function (t) {
                var e = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(t);
                return e ? parseInt(e[1], 16) + ", " + parseInt(e[2], 16) + ", " + parseInt(e[3], 16) : null
            }, o = function () {
                return t.attachEvent && !t.addEventListener
            }, r = function (e) {
                t.console && t.console.log("SweetAlert: " + e)
            }, l = function (t, e) {
                t = String(t).replace(/[^0-9a-f]/gi, ""), t.length < 6 && (t = t[0] + t[0] + t[1] + t[1] + t[2] + t[2]), e = e || 0;
                var i, n, a = "#";
                for (n = 0; 3 > n; n++) i = parseInt(t.substr(2 * n, 2), 16), i = Math.round(Math.min(Math.max(0, i + i * e), 255)).toString(16), a += ("00" + i).substr(i.length);
                return a
            };
            n.extend = a, n.hexToRgb = s, n.isIE8 = o, n.logStr = r, n.colorLuminance = l
        }, {}]
    }, {}, [1]), "function" == typeof define && define.amd ? define(function () {
        return sweetAlert
    }) : "undefined" != typeof module && module.exports && (module.exports = sweetAlert)
}(window, document), /*!
* jquery.inputmask.bundle.js
* http://github.com/RobinHerbots/jquery.inputmask
* Copyright (c) 2010 - 2015 Robin Herbots
* Licensed under the MIT license (http://www.opensource.org/licenses/mit-license.php)
* Version: 3.2.5
*/
    function (t) {
        function e(i, n) {
            return this instanceof e ? ("object" == typeof i ? n = i : (n = n || {}, n.alias = i), this.el = void 0, this.opts = t.extend(!0, {}, this.defaults, n), this.noMasksCache = n && void 0 !== n.definitions, this.userOptions = n || {}, void a(this.opts.alias, n, this.opts)) : new e(i, n)
        }

        function i(t) {
            var e = document.createElement("input"), i = "on" + t, n = i in e;
            return n || (e.setAttribute(i, "return;"), n = "function" == typeof e[i]), e = null, n
        }

        function n(t) {
            var e = "text" === t || "tel" === t || "password" === t;
            if (!e) {
                var i = document.createElement("input");
                i.setAttribute("type", t), e = "text" === i.type, i = null
            }
            return e
        }

        function a(e, i, n) {
            var s = n.aliases[e];
            return s ? (s.alias && a(s.alias, void 0, n), t.extend(!0, n, s), t.extend(!0, n, i), !0) : (null === n.mask && (n.mask = e), !1)
        }

        function s(e, i, n) {
            function s(t, i) {
                null !== (i = void 0 !== i ? i : e.getAttribute("data-inputmask-" + t)) && ("string" == typeof i && (0 === t.indexOf("on") ? i = window[i] : "false" === i ? i = !1 : "true" === i && (i = !0)), n[t] = i)
            }

            var o, r, l, d, c = e.getAttribute("data-inputmask");
            if (c && "" !== c && (c = c.replace(new RegExp("'", "g"), '"'), r = JSON.parse("{" + c + "}")), r) {
                l = void 0;
                for (d in r) if ("alias" === d.toLowerCase()) {
                    l = r[d];
                    break
                }
            }
            s("alias", l), n.alias && a(n.alias, n, i);
            for (o in i) {
                if (r) {
                    l = void 0;
                    for (d in r) if (d.toLowerCase() === o.toLowerCase()) {
                        l = r[d];
                        break
                    }
                }
                s(o, l)
            }
            return t.extend(!0, i, n), i
        }

        function o(i, n) {
            function a(e) {
                function n(t, e, i, n) {
                    this.matches = [], this.isGroup = t || !1, this.isOptional = e || !1, this.isQuantifier = i || !1, this.isAlternator = n || !1, this.quantifier = {
                        min: 1,
                        max: 1
                    }
                }

                function a(e, n, a) {
                    var s = i.definitions[n];
                    a = void 0 !== a ? a : e.matches.length;
                    var o = e.matches[a - 1];
                    if (s && !g) {
                        s.placeholder = t.isFunction(s.placeholder) ? s.placeholder(i) : s.placeholder;
                        for (var r = s.prevalidator, l = r ? r.length : 0, d = 1; d < s.cardinality; d++) {
                            var c = l >= d ? r[d - 1] : [], u = c.validator, f = c.cardinality;
                            e.matches.splice(a++, 0, {
                                fn: u ? "string" == typeof u ? new RegExp(u) : new function () {
                                    this.test = u
                                } : new RegExp("."),
                                cardinality: f || 1,
                                optionality: e.isOptional,
                                newBlockMarker: void 0 === o || o.def !== (s.definitionSymbol || n),
                                casing: s.casing,
                                def: s.definitionSymbol || n,
                                placeholder: s.placeholder,
                                mask: n
                            }), o = e.matches[a - 1]
                        }
                        e.matches.splice(a++, 0, {
                            fn: s.validator ? "string" == typeof s.validator ? new RegExp(s.validator) : new function () {
                                this.test = s.validator
                            } : new RegExp("."),
                            cardinality: s.cardinality,
                            optionality: e.isOptional,
                            newBlockMarker: void 0 === o || o.def !== (s.definitionSymbol || n),
                            casing: s.casing,
                            def: s.definitionSymbol || n,
                            placeholder: s.placeholder,
                            mask: n
                        })
                    } else e.matches.splice(a++, 0, {
                        fn: null,
                        cardinality: 0,
                        optionality: e.isOptional,
                        newBlockMarker: void 0 === o || o.def !== n,
                        casing: null,
                        def: n,
                        placeholder: void 0,
                        mask: n
                    }), g = !1
                }

                function s(t, e) {
                    t.isGroup && (t.isGroup = !1, a(t, i.groupmarker.start, 0), !0 !== e && a(t, i.groupmarker.end))
                }

                function o(t, e, i, n) {
                    e.matches.length > 0 && (void 0 === n || n) && (i = e.matches[e.matches.length - 1], s(i)), a(e, t)
                }

                function r() {
                    if (b.length > 0) {
                        if (f = b[b.length - 1], o(c, f, h, !f.isAlternator), f.isAlternator) {
                            p = b.pop();
                            for (var t = 0; t < p.matches.length; t++) p.matches[t].isGroup = !1;
                            b.length > 0 ? (f = b[b.length - 1], f.matches.push(p)) : y.matches.push(p)
                        }
                    } else o(c, y, h)
                }

                function l(t) {
                    function e(t) {
                        return t === i.optionalmarker.start ? t = i.optionalmarker.end : t === i.optionalmarker.end ? t = i.optionalmarker.start : t === i.groupmarker.start ? t = i.groupmarker.end : t === i.groupmarker.end && (t = i.groupmarker.start), t
                    }

                    t.matches = t.matches.reverse();
                    for (var n in t.matches) {
                        var a = parseInt(n);
                        if (t.matches[n].isQuantifier && t.matches[a + 1] && t.matches[a + 1].isGroup) {
                            var s = t.matches[n];
                            t.matches.splice(n, 1), t.matches.splice(a + 1, 0, s)
                        }
                        void 0 !== t.matches[n].matches ? t.matches[n] = l(t.matches[n]) : t.matches[n] = e(t.matches[n])
                    }
                    return t
                }

                for (var d, c, u, f, p, h, m, v = /(?:[?*+]|\{[0-9\+\*]+(?:,[0-9\+\*]*)?\})|[^.?*+^${[]()|\\]+|./g, g = !1, y = new n, b = [], k = []; d = v.exec(e);) if (c = d[0], g) r(); else switch (c.charAt(0)) {
                    case i.escapeChar:
                        g = !0;
                        break;
                    case i.optionalmarker.end:
                    case i.groupmarker.end:
                        if (void 0 !== (u = b.pop())) if (b.length > 0) {
                            if (f = b[b.length - 1], f.matches.push(u), f.isAlternator) {
                                p = b.pop();
                                for (var w = 0; w < p.matches.length; w++) p.matches[w].isGroup = !1;
                                b.length > 0 ? (f = b[b.length - 1], f.matches.push(p)) : y.matches.push(p)
                            }
                        } else y.matches.push(u); else r();
                        break;
                    case i.optionalmarker.start:
                        b.push(new n(!1, !0));
                        break;
                    case i.groupmarker.start:
                        b.push(new n(!0));
                        break;
                    case i.quantifiermarker.start:
                        var x = new n(!1, !1, !0);
                        c = c.replace(/[{}]/g, "");
                        var C = c.split(","), _ = isNaN(C[0]) ? C[0] : parseInt(C[0]),
                            $ = 1 === C.length ? _ : isNaN(C[1]) ? C[1] : parseInt(C[1]);
                        if (("*" === $ || "+" === $) && (_ = "*" === $ ? 0 : 1), x.quantifier = {
                                min: _,
                                max: $
                            }, b.length > 0) {
                            var D = b[b.length - 1].matches;
                            d = D.pop(), d.isGroup || (m = new n(!0), m.matches.push(d), d = m), D.push(d), D.push(x)
                        } else d = y.matches.pop(), d.isGroup || (m = new n(!0), m.matches.push(d), d = m), y.matches.push(d), y.matches.push(x);
                        break;
                    case i.alternatormarker:
                        b.length > 0 ? (f = b[b.length - 1], h = f.matches.pop()) : h = y.matches.pop(), h.isAlternator ? b.push(h) : (p = new n(!1, !1, !1, !0), p.matches.push(h), b.push(p));
                        break;
                    default:
                        r()
                }
                for (; b.length > 0;) u = b.pop(), s(u, !0), y.matches.push(u);
                return y.matches.length > 0 && (h = y.matches[y.matches.length - 1], s(h), k.push(y)), i.numericInput && l(k[0]), k
            }

            function s(s, o) {
                if (null !== s && "" !== s) {
                    if (1 === s.length && !1 === i.greedy && 0 !== i.repeat && (i.placeholder = ""), i.repeat > 0 || "*" === i.repeat || "+" === i.repeat) {
                        var r = "*" === i.repeat ? 0 : "+" === i.repeat ? 1 : i.repeat;
                        s = i.groupmarker.start + s + i.groupmarker.end + i.quantifiermarker.start + r + "," + i.repeat + i.quantifiermarker.end
                    }
                    var l;
                    return void 0 === e.prototype.masksCache[s] || !0 === n ? (l = {
                        mask: s,
                        maskToken: a(s),
                        validPositions: {},
                        _buffer: void 0,
                        buffer: void 0,
                        tests: {},
                        metadata: o
                    }, !0 !== n && (e.prototype.masksCache[i.numericInput ? s.split("").reverse().join("") : s] = l, l = t.extend(!0, {}, e.prototype.masksCache[i.numericInput ? s.split("").reverse().join("") : s]))) : l = t.extend(!0, {}, e.prototype.masksCache[i.numericInput ? s.split("").reverse().join("") : s]), l
                }
            }

            function o(t) {
                return t = t.toString()
            }

            var r;
            if (t.isFunction(i.mask) && (i.mask = i.mask(i)), t.isArray(i.mask)) {
                if (i.mask.length > 1) {
                    i.keepStatic = null === i.keepStatic || i.keepStatic;
                    var l = "(";
                    return t.each(i.numericInput ? i.mask.reverse() : i.mask, function (e, i) {
                        l.length > 1 && (l += ")|("), l += o(void 0 === i.mask || t.isFunction(i.mask) ? i : i.mask)
                    }), l += ")", s(l, i.mask)
                }
                i.mask = i.mask.pop()
            }
            return i.mask && (r = void 0 === i.mask.mask || t.isFunction(i.mask.mask) ? s(o(i.mask), i.mask) : s(o(i.mask.mask), i.mask)), r
        }

        function r(a, s, o) {
            function l(t, e, i) {
                e = e || 0;
                var n, a, s, o = [], r = 0;
                do {
                    if (!0 === t && m().validPositions[r]) {
                        var l = m().validPositions[r];
                        a = l.match, n = l.locator.slice(), o.push(!0 === i ? l.input : j(r, a))
                    } else s = k(r, n, r - 1), a = s.match, n = s.locator.slice(), o.push(j(r, a));
                    r++
                } while ((void 0 === vt || vt > r - 1) && null !== a.fn || null === a.fn && "" !== a.def || e >= r);
                return o.pop(), o
            }

            function m() {
                return s
            }

            function v(t) {
                var e = m();
                e.buffer = void 0, e.tests = {}, !0 !== t && (e._buffer = void 0, e.validPositions = {}, e.p = 0)
            }

            function g(t, e) {
                var i = m(), n = -1, a = i.validPositions;
                void 0 === t && (t = -1);
                var s = n, o = n;
                for (var r in a) {
                    var l = parseInt(r);
                    a[l] && (e || null !== a[l].match.fn) && (t >= l && (s = l), l >= t && (o = l))
                }
                return n = -1 !== s && t - s > 1 || t > o ? s : o
            }

            function y(e, i, n) {
                if (o.insertMode && void 0 !== m().validPositions[e] && void 0 === n) {
                    var a, s = t.extend(!0, {}, m().validPositions), r = g();
                    for (a = e; r >= a; a++) delete m().validPositions[a];
                    m().validPositions[e] = i;
                    var l, d = !0, c = m().validPositions;
                    for (a = l = e; r >= a; a++) {
                        var u = s[a];
                        if (void 0 !== u) for (var f = l, p = -1; f < I() && (null == u.match.fn && c[a] && (!0 === c[a].match.optionalQuantifier || !0 === c[a].match.optionality) || null != u.match.fn);) {
                            if (null === u.match.fn || !o.keepStatic && c[a] && (void 0 !== c[a + 1] && C(a + 1, c[a].locator.slice(), a).length > 1 || void 0 !== c[a].alternation) ? f++ : f = M(l), x(f, u.match.def)) {
                                d = !1 !== P(f, u.input, !0, !0), l = f;
                                break
                            }
                            if (d = null == u.match.fn, p === f) break;
                            p = f
                        }
                        if (!d) break
                    }
                    if (!d) return m().validPositions = t.extend(!0, {}, s), v(!0), !1
                } else m().validPositions[e] = i;
                return v(!0), !0
            }

            function b(t, e, i, n) {
                var a, s = t;
                for (m().p = t, a = s; e > a; a++) void 0 !== m().validPositions[a] && (!0 === i || !1 !== o.canClearPosition(m(), a, g(), n, o)) && delete m().validPositions[a];
                for (a = s + 1; a <= g();) {
                    for (; void 0 !== m().validPositions[s];) s++;
                    var r = m().validPositions[s];
                    if (s > a && (a = s + 1), void 0 === m().validPositions[a] && A(a) || void 0 !== r) a++; else {
                        var l = k(a);
                        x(s, l.match.def) ? !1 !== P(s, l.input || j(a), !0) && (delete m().validPositions[a], a++) : A(a) || (a++, s--), s++
                    }
                }
                var d = g(), c = I();
                for (!0 !== n && !0 !== i && void 0 !== m().validPositions[d] && m().validPositions[d].input === o.radixPoint && delete m().validPositions[d], a = d + 1; c >= a; a++) m().validPositions[a] && delete m().validPositions[a];
                v(!0)
            }

            function k(t, e, i) {
                var n = m().validPositions[t];
                if (void 0 === n) for (var a = C(t, e, i), s = g(), r = m().validPositions[s] || C(0)[0], l = void 0 !== r.alternation ? r.locator[r.alternation].toString().split(",") : [], d = 0; d < a.length && (n = a[d], !(n.match && (o.greedy && !0 !== n.match.optionalQuantifier || (!1 === n.match.optionality || !1 === n.match.newBlockMarker) && !0 !== n.match.optionalQuantifier) && (void 0 === r.alternation || r.alternation !== n.alternation || void 0 !== n.locator[r.alternation] && T(n.locator[r.alternation].toString().split(","), l)))); d++) ;
                return n
            }

            function w(t) {
                return m().validPositions[t] ? m().validPositions[t].match : C(t)[0].match
            }

            function x(t, e) {
                for (var i = !1, n = C(t), a = 0; a < n.length; a++) if (n[a].match && n[a].match.def === e) {
                    i = !0;
                    break
                }
                return i
            }

            function C(e, i, n, a) {
                function s(i, n, a, l) {
                    function c(a, l, p) {
                        function h(e, i) {
                            var n = m().validPositions[e];
                            return void 0 === n && m().tests[e] && t.each(m().tests[e], function (t, e) {
                                return e.alternation && -1 !== e.locator[e.alternation].toString().indexOf(i) ? (n = e, !1) : void 0
                            }), n ? n.locator.slice(n.alternation + 1) : []
                        }

                        if (d > 1e4) throw"Inputmask: There is probably an error in your mask definition or in the code. Create an issue on github with an example of the mask you are using. " + m().mask;
                        if (d === e && void 0 === a.matches) return u.push({match: a, locator: l.reverse()}), !0;
                        if (void 0 !== a.matches) {
                            if (a.isGroup && p !== a) {
                                if (a = c(i.matches[t.inArray(a, i.matches) + 1], l)) return !0
                            } else if (a.isOptional) {
                                var v = a;
                                if (a = s(a, n, l, p)) {
                                    if (o = u[u.length - 1].match, !(r = 0 === t.inArray(o, v.matches))) return !0;
                                    f = !0, d = e
                                }
                            } else if (a.isAlternator) {
                                var g, y = a, b = [], k = u.slice(), w = l.length, x = n.length > 0 ? n.shift() : -1;
                                if (-1 === x || "string" == typeof x) {
                                    var C, _ = d, $ = n.slice(), D = [];
                                    if ("string" == typeof x) D = x.split(","); else for (C = 0; C < y.matches.length; C++) D.push(C);
                                    for (var S = 0; S < D.length; S++) {
                                        if (C = parseInt(D[S]), u = [], n = h(d, C), !0 !== (a = c(y.matches[C] || i.matches[C], [C].concat(l), p) || a) && void 0 !== a && D[D.length - 1] < y.matches.length) {
                                            var T = i.matches.indexOf(a) + 1;
                                            i.matches.length > T && (a = c(i.matches[T], [T].concat(l.slice(1, l.length)), p)) && (D.push(T.toString()), t.each(u, function (t, e) {
                                                e.alternation = l.length - 1
                                            }))
                                        }
                                        g = u.slice(), d = _, u = [];
                                        for (var P = 0; P < $.length; P++) n[P] = $[P];
                                        for (var A = 0; A < g.length; A++) {
                                            var I = g[A];
                                            I.alternation = I.alternation || w;
                                            for (var M = 0; M < b.length; M++) {
                                                var E = b[M];
                                                if (I.match.def === E.match.def && ("string" != typeof x || -1 !== t.inArray(I.locator[I.alternation].toString(), D))) {
                                                    I.match.mask === E.match.mask && (g.splice(A, 1), A--), -1 === E.locator[I.alternation].toString().indexOf(I.locator[I.alternation]) && (E.locator[I.alternation] = E.locator[I.alternation] + "," + I.locator[I.alternation], E.alternation = I.alternation);
                                                    break
                                                }
                                            }
                                        }
                                        b = b.concat(g)
                                    }
                                    "string" == typeof x && (b = t.map(b, function (e, i) {
                                        if (isFinite(i)) {
                                            var n = e.alternation, a = e.locator[n].toString().split(",");
                                            e.locator[n] = void 0, e.alternation = void 0;
                                            for (var s = 0; s < a.length; s++) -1 !== t.inArray(a[s], D) && (void 0 !== e.locator[n] ? (e.locator[n] += ",", e.locator[n] += a[s]) : e.locator[n] = parseInt(a[s]), e.alternation = n);
                                            if (void 0 !== e.locator[n]) return e
                                        }
                                    })), u = k.concat(b), d = e, f = u.length > 0
                                } else a = c(y.matches[x] || i.matches[x], [x].concat(l), p);
                                if (a) return !0
                            } else if (a.isQuantifier && p !== i.matches[t.inArray(a, i.matches) - 1]) for (var O = a, F = n.length > 0 ? n.shift() : 0; F < (isNaN(O.quantifier.max) ? F + 1 : O.quantifier.max) && e >= d; F++) {
                                var j = i.matches[t.inArray(O, i.matches) - 1];
                                if (a = c(j, [F].concat(l), j)) {
                                    if (o = u[u.length - 1].match, o.optionalQuantifier = F > O.quantifier.min - 1, r = 0 === t.inArray(o, j.matches)) {
                                        if (F > O.quantifier.min - 1) {
                                            f = !0, d = e;
                                            break
                                        }
                                        return !0
                                    }
                                    return !0
                                }
                            } else if (a = s(a, n, l, p)) return !0
                        } else d++
                    }

                    for (var p = n.length > 0 ? n.shift() : 0; p < i.matches.length; p++) if (!0 !== i.matches[p].isQuantifier) {
                        var h = c(i.matches[p], [p].concat(a), l);
                        if (h && d === e) return h;
                        if (d > e) break
                    }
                }

                var o, r, l = m().maskToken, d = i ? n : 0, c = i || [0], u = [], f = !1;
                if (e > -1) {
                    if (!0 === a && m().tests[e]) return m().tests[e];
                    if (void 0 === i) {
                        for (var p, h = e - 1; void 0 === (p = m().validPositions[h]) && h > -1 && (!m().tests[h] || void 0 === (p = m().tests[h][0]));) h--;
                        void 0 !== p && h > -1 && (d = h, c = p.locator.slice())
                    }
                    for (var v = c.shift(); v < l.length; v++) {
                        if (s(l[v], c, [v]) && d === e || d > e) break
                    }
                    return (0 === u.length || f) && u.push({
                        match: {
                            fn: null,
                            cardinality: 0,
                            optionality: !0,
                            casing: null,
                            def: ""
                        }, locator: []
                    }), m().tests[e] = t.extend(!0, [], u), m().tests[e]
                }
            }

            function _() {
                return void 0 === m()._buffer && (m()._buffer = l(!1, 1)), m()._buffer
            }

            function $(t) {
                return (void 0 === m().buffer || !0 === t) && (!0 === t && (m().tests = {}), m().buffer = l(!0, g(), !0)), m().buffer
            }

            function D(t, e, i) {
                var n;
                if (i = i, !0 === t) v(), t = 0, e = i.length; else for (n = t; e > n; n++) delete m().validPositions[n], delete m().tests[n];
                for (n = t; e > n; n++) v(!0), i[n] !== o.skipOptionalPartCharacter && P(n, i[n], !0, !0)
            }

            function S(t, e) {
                switch (e.casing) {
                    case"upper":
                        t = t.toUpperCase();
                        break;
                    case"lower":
                        t = t.toLowerCase()
                }
                return t
            }

            function T(e, i) {
                for (var n = o.greedy ? i : i.slice(0, 1), a = !1, s = 0; s < e.length; s++) if (-1 !== t.inArray(e[s], n)) {
                    a = !0;
                    break
                }
                return a
            }

            function P(e, i, n, a) {
                function s(e, i, n, a) {
                    var s = !1;
                    return t.each(C(e), function (r, l) {
                        for (var d = l.match, c = i ? 1 : 0, u = "", f = d.cardinality; f > c; f--) u += O(e - (f - 1));
                        if (i && (u += i), $(!0), !1 !== (s = null != d.fn ? d.fn.test(u, m(), e, n, o) : (i === d.def || i === o.skipOptionalPartCharacter) && "" !== d.def && {
                                c: d.def,
                                pos: e
                            })) {
                            var p = void 0 !== s.c ? s.c : i;
                            p = p === o.skipOptionalPartCharacter && null === d.fn ? d.def : p;
                            var h = e, k = $();
                            if (void 0 !== s.remove && (t.isArray(s.remove) || (s.remove = [s.remove]), t.each(s.remove.sort(function (t, e) {
                                    return e - t
                                }), function (t, e) {
                                    b(e, e + 1, !0)
                                })), void 0 !== s.insert && (t.isArray(s.insert) || (s.insert = [s.insert]), t.each(s.insert.sort(function (t, e) {
                                    return t - e
                                }), function (t, e) {
                                    P(e.pos, e.c, !0)
                                })), s.refreshFromBuffer) {
                                var w = s.refreshFromBuffer;
                                if (n = !0, D(!0 === w ? w : w.start, w.end, k), void 0 === s.pos && void 0 === s.c) return s.pos = g(), !1;
                                if ((h = void 0 !== s.pos ? s.pos : e) !== e) return s = t.extend(s, P(h, p, !0)), !1
                            } else if (!0 !== s && void 0 !== s.pos && s.pos !== e && (h = s.pos, D(e, h, $().slice()), h !== e)) return s = t.extend(s, P(h, p, !0)), !1;
                            return (!0 === s || void 0 !== s.pos || void 0 !== s.c) && (r > 0 && v(!0), y(h, t.extend({}, l, {input: S(p, d)}), a) || (s = !1), !1)
                        }
                    }), s
                }

                function r(e, i, n, a) {
                    for (var s, r, l, d, c, u, f = t.extend(!0, {}, m().validPositions), p = g(); p >= 0 && (!(d = m().validPositions[p]) || void 0 === d.alternation || (s = p, r = m().validPositions[s].alternation, k(s).locator[d.alternation] === d.locator[d.alternation])); p--) ;
                    if (void 0 !== r) {
                        s = parseInt(s);
                        for (var h in m().validPositions) if (h = parseInt(h), d = m().validPositions[h], h >= s && void 0 !== d.alternation) {
                            var y = m().validPositions[s].locator[r].toString().split(","),
                                b = void 0 !== d.locator[r] ? d.locator[r] : y[0];
                            b.length > 0 && (b = b.split(",")[0]);
                            for (var w = 0; w < y.length; w++) if (b < y[w]) {
                                for (var x, C, _ = h; _ >= 0; _--) if (void 0 !== (x = m().validPositions[_])) {
                                    C = x.locator[r], x.locator[r] = parseInt(y[w]);
                                    break
                                }
                                if (b !== x.locator[r]) {
                                    var $ = [], D = 0;
                                    for (c = h + 1; c < g() + 1; c++) u = m().validPositions[c], u && null != u.match.fn ? $.push(u.input) : e > c && D++, delete m().validPositions[c], delete m().tests[c];
                                    for (v(!0), o.keepStatic = !o.keepStatic, l = !0; $.length > 0;) {
                                        var S = $.shift();
                                        if (S !== o.skipOptionalPartCharacter && !(l = P(g() + 1, S, !1, !0))) break
                                    }
                                    if (x.alternation = r, x.locator[r] = C, l) {
                                        var T = g(e) + 1, A = 0;
                                        for (c = h + 1; c < g() + 1; c++) (void 0 === (u = m().validPositions[c]) || null == u.match.fn) && e > c && A++;
                                        e += A - D, l = P(e > T ? T : e, i, n, a)
                                    }
                                    if (o.keepStatic = !o.keepStatic, l) return l;
                                    v(), m().validPositions = t.extend(!0, {}, f)
                                }
                            }
                            break
                        }
                    }
                    return !1
                }

                function l(e, i) {
                    for (var n = m().validPositions[i], a = n.locator, s = a.length, o = e; i > o; o++) if (!A(o, !0)) {
                        var r = C(o), l = r[0], d = -1;
                        t.each(r, function (t, e) {
                            for (var i = 0; s > i; i++) e.locator[i] && T(e.locator[i].toString().split(","), a[i].toString().split(",")) && i > d && (d = i, l = e)
                        }), y(o, t.extend({}, l, {input: l.match.def}), !0)
                    }
                }

                n = !0 === n;
                for (var d = $(), c = e - 1; c > -1 && !m().validPositions[c]; c--) ;
                for (c++; e > c; c++) void 0 === m().validPositions[c] && ((!A(c) || d[c] !== j(c)) && C(c).length > 1 || d[c] === o.radixPoint || "0" === d[c] && t.inArray(o.radixPoint, d) < c) && s(c, d[c], !0);
                var u = e, f = !1, p = t.extend(!0, {}, m().validPositions);
                if (u < I() && (f = s(u, i, n, a), (!n || a) && !1 === f)) {
                    var h = m().validPositions[u];
                    if (!h || null !== h.match.fn || h.match.def !== i && i !== o.skipOptionalPartCharacter) {
                        if ((o.insertMode || void 0 === m().validPositions[M(u)]) && !A(u, !0)) for (var w = u + 1, x = M(u); x >= w; w++) if (!1 !== (f = s(w, i, n, a))) {
                            l(u, w), u = w;
                            break
                        }
                    } else f = {caret: M(u)}
                }
                if (!1 === f && o.keepStatic && (f = r(e, i, n, a)), !0 === f && (f = {pos: u}), t.isFunction(o.postValidation) && !1 !== f && !n) {
                    var _ = o.postValidation($(!0), o);
                    if (_) {
                        if (_.refreshFromBuffer) {
                            var E = _.refreshFromBuffer;
                            D(!0 === E ? E : E.start, E.end, _.buffer), v(!0), f = _
                        }
                    } else v(!0), m().validPositions = t.extend(!0, {}, p), f = !1
                }
                return f
            }

            function A(t, e) {
                var i = w(t);
                if (null != i.fn) return i.fn;
                if (!0 !== e && t > -1 && !o.keepStatic && void 0 === m().validPositions[t]) {
                    return C(t, void 0, void 0, !0).length > 2
                }
                return !1
            }

            function I() {
                var t;
                -1 === (vt = void 0 !== ht ? ht.maxLength : void 0) && (vt = void 0);
                var e, i = g(), n = m().validPositions[i], a = void 0 !== n ? n.locator.slice() : void 0;
                for (e = i + 1; void 0 === n || null !== n.match.fn || null === n.match.fn && "" !== n.match.def; e++) n = k(e, a, e - 1), a = n.locator.slice();
                return t = "" !== w(e - 1).def ? e : e - 1, void 0 === vt || vt > t ? t : vt
            }

            function M(t, e) {
                var i = I();
                if (t >= i) return i;
                for (var n = t; ++n < i && (!0 === e && (!0 !== w(n).newBlockMarker || !A(n)) || !0 !== e && !A(n) && (!0 !== o.nojumps || o.nojumpsThreshold > n));) ;
                return n
            }

            function E(t, e) {
                var i = t;
                if (0 >= i) return 0;
                for (; --i > 0 && (!0 === e && !0 !== w(i).newBlockMarker || !0 !== e && !A(i));) ;
                return i
            }

            function O(t) {
                return void 0 === m().validPositions[t] ? j(t) : m().validPositions[t].input
            }

            function F(e, i, n, a, s) {
                if (a && t.isFunction(o.onBeforeWrite)) {
                    var r = o.onBeforeWrite(a, i, n, o);
                    if (r) {
                        if (r.refreshFromBuffer) {
                            var l = r.refreshFromBuffer;
                            D(!0 === l ? l : l.start, l.end, r.buffer || i), i = $(!0)
                        }
                        void 0 !== n && (n = void 0 !== r.caret ? r.caret : n)
                    }
                }
                e.inputmask._valueSet(i.join("")), void 0 === n || void 0 !== a && "blur" === a.type || U(e, n), !0 === s && (kt = !0, t(e).trigger("input"))
            }

            function j(t, e) {
                if (e = e || w(t), void 0 !== e.placeholder) return e.placeholder;
                if (null === e.fn) {
                    if (t > -1 && !o.keepStatic && void 0 === m().validPositions[t]) {
                        var i, n = C(t), a = 0;
                        if (n.length > 2) for (var s = 0; s < n.length; s++) if (!0 !== n[s].match.optionality && !0 !== n[s].match.optionalQuantifier && (null === n[s].match.fn || void 0 === i || !1 !== n[s].match.fn.test(i.match.def, m(), t, !0, o)) && (a++, null === n[s].match.fn && (i = n[s]), a > 1)) return o.placeholder.charAt(t % o.placeholder.length)
                    }
                    return e.def
                }
                return o.placeholder.charAt(t % o.placeholder.length)
            }

            function R(i, n, a, s) {
                function r() {
                    var t = !1, e = _().slice(c, M(c)).join("").indexOf(d);
                    if (-1 !== e && !A(c)) {
                        t = !0;
                        for (var i = _().slice(c, c + e), n = 0; n < i.length; n++) if (" " !== i[n]) {
                            t = !1;
                            break
                        }
                    }
                    return t
                }

                var l = s.slice(), d = "", c = 0;
                if (v(), m().p = M(-1), !a) if (!0 !== o.autoUnmask) {
                    var u = _().slice(0, M(-1)).join(""), f = l.join("").match(new RegExp("^" + e.escapeRegex(u), "g"));
                    f && f.length > 0 && (l.splice(0, f.length * u.length), c = M(c))
                } else c = M(c);
                t.each(l, function (e, n) {
                    var s = t.Event("keypress");
                    s.which = n.charCodeAt(0), d += n;
                    var l = g(void 0, !0), u = m().validPositions[l], f = k(l + 1, u ? u.locator.slice() : void 0, l);
                    if (!r() || a || o.autoUnmask) {
                        var p = a ? e : null == f.match.fn && f.match.optionality && l + 1 < m().p ? l + 1 : m().p;
                        z.call(i, s, !0, !1, a, p), c = p + 1, d = ""
                    } else z.call(i, s, !0, !1, !0, l + 1)
                }), n && F(i, $(), document.activeElement === i ? M(g(0)) : void 0, t.Event("checkval"))
            }

            function N(e) {
                if (e && void 0 === e.inputmask) return e.value;
                var i = [], n = m().validPositions;
                for (var a in n) n[a].match && null != n[a].match.fn && i.push(n[a].input);
                var s = 0 === i.length ? null : (yt ? i.reverse() : i).join("");
                if (null !== s) {
                    var r = (yt ? $().slice().reverse() : $()).join("");
                    t.isFunction(o.onUnMask) && (s = o.onUnMask(r, s, o) || s)
                }
                return s
            }

            function U(t, e, i) {
                function n(t) {
                    if (yt && "number" == typeof t && (!o.greedy || "" !== o.placeholder)) {
                        t = $().join("").length - t
                    }
                    return t
                }

                var a;
                if ("number" != typeof e) return t.setSelectionRange ? (e = t.selectionStart, i = t.selectionEnd) : window.getSelection ? (a = window.getSelection().getRangeAt(0), (a.commonAncestorContainer.parentNode === t || a.commonAncestorContainer === t) && (e = a.startOffset, i = a.endOffset)) : document.selection && document.selection.createRange && (a = document.selection.createRange(), e = 0 - a.duplicate().moveStart("character", -1e5), i = e + a.text.length), {
                    begin: n(e),
                    end: n(i)
                };
                e = n(e), i = n(i), i = "number" == typeof i ? i : e;
                var s = parseInt(((t.ownerDocument.defaultView || window).getComputedStyle ? (t.ownerDocument.defaultView || window).getComputedStyle(t, null) : t.currentStyle).fontSize) * i;
                if (t.scrollLeft = s > t.scrollWidth ? s : 0, u || !1 !== o.insertMode || e !== i || i++, t.setSelectionRange) t.selectionStart = e, t.selectionEnd = i; else if (window.getSelection) {
                    if (a = document.createRange(), void 0 === t.firstChild) {
                        var r = document.createTextNode("");
                        t.appendChild(r)
                    }
                    a.setStart(t.firstChild, e < t.inputmask._valueGet().length ? e : t.inputmask._valueGet().length), a.setEnd(t.firstChild, i < t.inputmask._valueGet().length ? i : t.inputmask._valueGet().length), a.collapse(!0);
                    var l = window.getSelection();
                    l.removeAllRanges(), l.addRange(a)
                } else t.createTextRange && (a = t.createTextRange(), a.collapse(!0), a.moveEnd("character", i), a.moveStart("character", e), a.select())
            }

            function B(e) {
                var i, n, a = $(), s = a.length, o = g(), r = {}, l = m().validPositions[o],
                    d = void 0 !== l ? l.locator.slice() : void 0;
                for (i = o + 1; i < a.length; i++) n = k(i, d, i - 1), d = n.locator.slice(), r[i] = t.extend(!0, {}, n);
                var c = l && void 0 !== l.alternation ? l.locator[l.alternation] : void 0;
                for (i = s - 1; i > o && (n = r[i], (n.match.optionality || n.match.optionalQuantifier || c && (c !== r[i].locator[l.alternation] && null != n.match.fn || null === n.match.fn && n.locator[l.alternation] && T(n.locator[l.alternation].toString().split(","), c.toString().split(",")) && "" !== C(i)[0].def)) && a[i] === j(i, n.match)); i--) s--;
                return e ? {l: s, def: r[s] ? r[s].match : void 0} : s
            }

            function L(t) {
                for (var e = B(), i = t.length - 1; i > e && !A(i); i--) ;
                return t.splice(e, i + 1 - e), t
            }

            function V(e) {
                if (t.isFunction(o.isComplete)) return o.isComplete(e, o);
                if ("*" !== o.repeat) {
                    var i = !1, n = B(!0), a = E(n.l);
                    if (void 0 === n.def || n.def.newBlockMarker || n.def.optionality || n.def.optionalQuantifier) {
                        i = !0;
                        for (var s = 0; a >= s; s++) {
                            var r = k(s).match;
                            if (null !== r.fn && void 0 === m().validPositions[s] && !0 !== r.optionality && !0 !== r.optionalQuantifier || null === r.fn && e[s] !== j(s, r)) {
                                i = !1;
                                break
                            }
                        }
                    }
                    return i
                }
            }

            function q(t, e) {
                return yt ? t - e > 1 || t - e == 1 && o.insertMode : e - t > 1 || e - t == 1 && o.insertMode
            }

            function H(i) {
                return function (n) {
                    var a = !1, s = !1;
                    if (void 0 === this.inputmask) {
                        var r = t.data(this, "_inputmask_opts");
                        r ? new e(r).mask(this) : t(this).off(".inputmask")
                    } else {
                        if ("setvalue" === n.type || !(this.disabled || this.readOnly && !("keydown" === n.type && n.ctrlKey && 67 === n.keyCode || !1 === o.tabThrough && n.keyCode === e.keyCode.TAB))) {
                            switch (n.type) {
                                case"input":
                                    if (!0 === kt || !0 === a) return kt = !1, n.preventDefault();
                                    s = !1;
                                    break;
                                case"keydown":
                                    bt = !1, a = !1, s = !0;
                                    break;
                                case"keypress":
                                    if (!0 === bt) return n.preventDefault();
                                    bt = !0;
                                    break;
                                case"compositionstart":
                                    a = !0;
                                    break;
                                case"compositionupdate":
                                    kt = s;
                                    break;
                                case"compositionend":
                                    a = !1, s = !1;
                                    break;
                                case"cut":
                                    kt = !0
                            }
                            return i.apply(this, arguments)
                        }
                        n.preventDefault()
                    }
                }
            }

            function Y(e) {
                function i(e) {
                    if (t.valHooks && (void 0 === t.valHooks[e] || !0 !== t.valHooks[e].inputmaskpatch)) {
                        var i = t.valHooks[e] && t.valHooks[e].get ? t.valHooks[e].get : function (t) {
                            return t.value
                        }, n = t.valHooks[e] && t.valHooks[e].set ? t.valHooks[e].set : function (t, e) {
                            return t.value = e, t
                        };
                        t.valHooks[e] = {
                            get: function (t) {
                                if (t.inputmask) {
                                    if (t.inputmask.opts.autoUnmask) return t.inputmask.unmaskedvalue();
                                    var e = i(t), n = t.inputmask.maskset, a = n._buffer;
                                    return a = a ? a.join("") : "", e !== a ? e : ""
                                }
                                return i(t)
                            }, set: function (e, i) {
                                var a, s = t(e);
                                return a = n(e, i), e.inputmask && s.trigger("setvalue.inputmask"), a
                            }, inputmaskpatch: !0
                        }
                    }
                }

                function n() {
                    return this.inputmask ? this.inputmask.opts.autoUnmask ? this.inputmask.unmaskedvalue() : r.call(this) !== _().join("") ? document.activeElement === this && o.clearMaskOnLostFocus ? (yt ? L($().slice()).reverse() : L($().slice())).join("") : r.call(this) : "" : r.call(this)
                }

                function a(e) {
                    l.call(this, e), this.inputmask && t(this).trigger("setvalue.inputmask")
                }

                function s(e) {
                    t(e).on("mouseenter.inputmask", H(function () {
                        var e = t(this), i = this, n = i.inputmask._valueGet();
                        "" !== n && n !== $().join("") && e.trigger("setvalue.inputmask")
                    }))
                }

                var r, l;
                e.inputmask.__valueGet || (Object.getOwnPropertyDescriptor && void 0 === e.value ? (r = function () {
                    return this.textContent
                }, l = function (t) {
                    this.textContent = t
                }, Object.defineProperty(e, "value", {
                    get: n,
                    set: a
                })) : document.__lookupGetter__ && e.__lookupGetter__("value") ? (r = e.__lookupGetter__("value"), l = e.__lookupSetter__("value"), e.__defineGetter__("value", n), e.__defineSetter__("value", a)) : (r = function () {
                    return e.value
                }, l = function (t) {
                    e.value = t
                }, i(e.type), s(e)), e.inputmask.__valueGet = r, e.inputmask._valueGet = function (t) {
                    return yt && !0 !== t ? r.call(this.el).split("").reverse().join("") : r.call(this.el)
                }, e.inputmask.__valueSet = l, e.inputmask._valueSet = function (t, e) {
                    l.call(this.el, null === t || void 0 === t ? "" : !0 !== e && yt ? t.split("").reverse().join("") : t)
                })
            }

            function G(i, n, a, s) {
                function r() {
                    if (o.keepStatic) {
                        v(!0);
                        var e, n = [], a = t.extend(!0, {}, m().validPositions);
                        for (e = g(); e >= 0; e--) {
                            var s = m().validPositions[e];
                            if (s && (null != s.match.fn && n.push(s.input), delete m().validPositions[e], void 0 !== s.alternation && s.locator[s.alternation] === k(e).locator[s.alternation])) break
                        }
                        if (e > -1) for (; n.length > 0;) {
                            m().p = M(g());
                            var r = t.Event("keypress");
                            r.which = n.pop().charCodeAt(0), z.call(i, r, !0, !1, !1, m().p)
                        } else m().validPositions = t.extend(!0, {}, a)
                    }
                }

                if ((o.numericInput || yt) && (n === e.keyCode.BACKSPACE ? n = e.keyCode.DELETE : n === e.keyCode.DELETE && (n = e.keyCode.BACKSPACE), yt)) {
                    var l = a.end;
                    a.end = a.begin, a.begin = l
                }
                n === e.keyCode.BACKSPACE && (a.end - a.begin < 1 || !1 === o.insertMode) ? (a.begin = E(a.begin), void 0 === m().validPositions[a.begin] || m().validPositions[a.begin].input !== o.groupSeparator && m().validPositions[a.begin].input !== o.radixPoint || a.begin--) : n === e.keyCode.DELETE && a.begin === a.end && (a.end = A(a.end) ? a.end + 1 : M(a.end) + 1, void 0 === m().validPositions[a.begin] || m().validPositions[a.begin].input !== o.groupSeparator && m().validPositions[a.begin].input !== o.radixPoint || a.end++), b(a.begin, a.end, !1, s), !0 !== s && r();
                var d = g(a.begin);
                d < a.begin ? (-1 === d && v(), m().p = M(d)) : !0 !== s && (m().p = a.begin)
            }

            function W(n) {
                var a = this, s = t(a), r = n.keyCode, l = U(a);
                r === e.keyCode.BACKSPACE || r === e.keyCode.DELETE || d && 127 === r || n.ctrlKey && 88 === r && !i("cut") ? (n.preventDefault(), 88 === r && (ft = $().join("")), G(a, r, l), F(a, $(), m().p, n, ft !== $().join("")), a.inputmask._valueGet() === _().join("") ? s.trigger("cleared") : !0 === V($()) && s.trigger("complete"), o.showTooltip && (a.title = o.tooltip || m().mask)) : r === e.keyCode.END || r === e.keyCode.PAGE_DOWN ? setTimeout(function () {
                    var t = M(g());
                    o.insertMode || t !== I() || n.shiftKey || t--, U(a, n.shiftKey ? l.begin : t, t)
                }, 0) : r === e.keyCode.HOME && !n.shiftKey || r === e.keyCode.PAGE_UP ? U(a, 0, n.shiftKey ? l.begin : 0) : (o.undoOnEscape && r === e.keyCode.ESCAPE || 90 === r && n.ctrlKey) && !0 !== n.altKey ? (R(a, !0, !1, ft.split("")), s.trigger("click")) : r !== e.keyCode.INSERT || n.shiftKey || n.ctrlKey ? !0 === o.tabThrough && r === e.keyCode.TAB ? (!0 === n.shiftKey ? (null === w(l.begin).fn && (l.begin = M(l.begin)), l.end = E(l.begin, !0), l.begin = E(l.end, !0)) : (l.begin = M(l.begin, !0), l.end = M(l.begin, !0), l.end < I() && l.end--), l.begin < I() && (n.preventDefault(), U(a, l.begin, l.end))) : !1 !== o.insertMode || n.shiftKey || (r === e.keyCode.RIGHT ? setTimeout(function () {
                    var t = U(a);
                    U(a, t.begin)
                }, 0) : r === e.keyCode.LEFT && setTimeout(function () {
                    var t = U(a);
                    U(a, yt ? t.begin + 1 : t.begin - 1)
                }, 0)) : (o.insertMode = !o.insertMode, U(a, o.insertMode || l.begin !== I() ? l.begin : l.begin - 1)), o.onKeyDown.call(this, n, $(), U(a).begin, o), wt = -1 !== t.inArray(r, o.ignorables)
            }

            function z(i, n, a, s, r) {
                var l = this, d = t(l), c = i.which || i.charCode || i.keyCode;
                if (!(!0 === n || i.ctrlKey && i.altKey) && (i.ctrlKey || i.metaKey || wt)) return c === e.keyCode.ENTER && ft !== $().join("") && (ft = $().join(""), i.preventDefault(), setTimeout(function () {
                    d.trigger("change")
                }, 0)), !0;
                if (c) {
                    46 === c && !1 === i.shiftKey && "," === o.radixPoint && (c = 44);
                    var u, f = n ? {begin: r, end: r} : U(l), p = String.fromCharCode(c), h = q(f.begin, f.end);
                    h && (m().undoPositions = t.extend(!0, {}, m().validPositions), G(l, e.keyCode.DELETE, f, !0), f.begin = m().p, o.insertMode || (o.insertMode = !o.insertMode, y(f.begin, s), o.insertMode = !o.insertMode), h = !o.multi), m().writeOutBuffer = !0;
                    var g = yt && !h ? f.end : f.begin, b = P(g, p, s);
                    if (!1 !== b) {
                        if (!0 !== b && (g = void 0 !== b.pos ? b.pos : g, p = void 0 !== b.c ? b.c : p), v(!0), void 0 !== b.caret) u = b.caret; else {
                            var k = m().validPositions;
                            u = !o.keepStatic && (void 0 !== k[g + 1] && C(g + 1, k[g].locator.slice(), g).length > 1 || void 0 !== k[g].alternation) ? g + 1 : M(g)
                        }
                        m().p = u
                    }
                    if (!1 !== a) {
                        var w = this;
                        if (setTimeout(function () {
                                o.onKeyValidation.call(w, c, b, o)
                            }, 0), m().writeOutBuffer && !1 !== b) {
                            var x = $();
                            F(l, x, n ? void 0 : o.numericInput ? E(u) : u, i, !0 !== n), !0 !== n && setTimeout(function () {
                                !0 === V(x) && d.trigger("complete")
                            }, 0)
                        } else h && (m().buffer = void 0, m().validPositions = m().undoPositions)
                    } else h && (m().buffer = void 0, m().validPositions = m().undoPositions);
                    if (o.showTooltip && (l.title = o.tooltip || m().mask), n && t.isFunction(o.onBeforeWrite)) {
                        var _ = o.onBeforeWrite(i, $(), u, o);
                        if (_ && _.refreshFromBuffer) {
                            var S = _.refreshFromBuffer;
                            D(!0 === S ? S : S.start, S.end, _.buffer), v(!0), _.caret && (m().p = _.caret)
                        }
                    }
                    if (i.preventDefault(), n) return b
                }
            }

            function K(e) {
                var i = this, n = e.originalEvent || e, a = t(i), s = i.inputmask._valueGet(!0), r = U(i);
                if ("propertychange" === e.type && i.inputmask._valueGet().length <= I()) return !0;
                if ("paste" === e.type) {
                    var l = s.substr(0, r.begin), d = s.substr(r.end, s.length);
                    l === _().slice(0, r.begin).join("") && (l = ""), d === _().slice(r.end).join("") && (d = ""), window.clipboardData && window.clipboardData.getData ? s = l + window.clipboardData.getData("Text") + d : n.clipboardData && n.clipboardData.getData && (s = l + n.clipboardData.getData("text/plain") + d)
                }
                var c = s;
                if (t.isFunction(o.onBeforePaste)) {
                    if (!1 === (c = o.onBeforePaste(s, o))) return e.preventDefault(), !1;
                    c || (c = s)
                }
                return R(i, !1, !1, yt ? c.split("").reverse() : c.toString().split("")), F(i, $(), void 0, e, !0), a.trigger("click"), !0 === V($()) && a.trigger("complete"), !1
            }

            function Q(e) {
                var i = this;
                R(i, !0, !1, i.inputmask._valueGet().split("")), !0 === V($()) && t(i).trigger("complete"), e.preventDefault()
            }

            function J(t) {
                var i = this, n = U(i), a = i._valueGet();
                a = a.replace(new RegExp("(" + e.escapeRegex(_().join("")) + ")*"), ""), n.begin > a.length && (U(i, a.length), n = U(i)), $().length - a.length != 1 || a.charAt(n.begin) === $()[n.begin] || a.charAt(n.begin + 1) === $()[n.begin] || A(n.begin) ? Q.call(this, t) : (t.keyCode = o.keyCode.BACKSPACE, W.call(i, t)), t.preventDefault()
            }

            function Z(t) {
                var e = t.originalEvent || t;
                ft = $().join(""), "" === pt || e.data.indexOf(pt)
            }

            function X(e) {
                var i = this, n = e.originalEvent || e;
                0 === n.data.indexOf(pt) && (v(), m().p = M(-1), kt = !0);
                for (var a = n.data, s = 0; s < a.length; s++) {
                    var r = t.Event("keypress");
                    r.which = a.charCodeAt(s), bt = !1, wt = !1, z.call(i, r, !0, !1, !1, m().p)
                }
                setTimeout(function () {
                    var t = m().p;
                    F(i, $(), o.numericInput ? E(t) : t)
                }, 0), pt = n.data
            }

            function tt() {
            }

            function et() {
                var e = this, i = e.inputmask._valueGet();
                R(e, !0, !1, (t.isFunction(o.onBeforeMask) ? o.onBeforeMask(i, o) || i : i).split("")), ft = $().join(""), (o.clearMaskOnLostFocus || o.clearIncomplete) && e.inputmask._valueGet() === _().join("") && e.inputmask._valueSet("")
            }

            function it() {
                var t = this, e = t.inputmask._valueGet();
                o.showMaskOnFocus && (!o.showMaskOnHover || o.showMaskOnHover && "" === e) ? t.inputmask._valueGet() !== $().join("") && F(t, $(), M(g())) : !1 === xt && U(t, M(g())), !0 === o.positionCaretOnTab && setTimeout(function () {
                    U(t, M(g()))
                }, 0), ft = $().join("")
            }

            function nt() {
                var t = this;
                if (xt = !1, o.clearMaskOnLostFocus) {
                    var e = $().slice(), i = t.inputmask._valueGet();
                    document.activeElement !== t && i !== t.getAttribute("placeholder") && "" !== i && (-1 === g() && i === _().join("") ? e = [] : L(e), F(t, e))
                }
            }

            function at() {
                function e(e) {
                    if (o.radixFocus && "" !== o.radixPoint) {
                        var i = m().validPositions;
                        if (void 0 === i[e] || i[e].input === j(e)) {
                            if (e < M(-1)) return !0;
                            var n = t.inArray(o.radixPoint, $());
                            if (-1 !== n) {
                                for (var a in i) if (a > n && i[a].input !== j(a)) return !1;
                                return !0
                            }
                        }
                    }
                    return !1
                }

                var i = this;
                if (document.activeElement === i) {
                    var n = U(i);
                    if (n.begin === n.end) if (e(n.begin)) U(i, t.inArray(o.radixPoint, $())); else {
                        var a = n.begin, s = g(a), r = M(s);
                        r > a ? U(i, A(a) || A(a - 1) ? a : M(a)) : (($()[r] !== j(r) || !A(r, !0) && w(r).def === j(r)) && (r = M(r)), U(i, o.numericInput ? 0 : r))
                    }
                }
            }

            function st() {
                var t = this;
                setTimeout(function () {
                    U(t, 0, M(g()))
                }, 0)
            }

            function ot(i) {
                var n = this, a = t(n), s = U(n), r = i.originalEvent || i, l = window.clipboardData || r.clipboardData,
                    d = yt ? $().slice(s.end, s.begin) : $().slice(s.begin, s.end);
                l.setData("text", yt ? d.reverse().join("") : d.join("")), document.execCommand && document.execCommand("copy"), G(n, e.keyCode.DELETE, s), F(n, $(), m().p, i, ft !== $().join("")), n.inputmask._valueGet() === _().join("") && a.trigger("cleared"), o.showTooltip && (n.title = o.tooltip || m().mask)
            }

            function rt(e) {
                var i = t(this), n = this;
                if (n.inputmask) {
                    var a = n.inputmask._valueGet(), s = $().slice();
                    ft !== s.join("") && setTimeout(function () {
                        i.trigger("change"), ft = s.join("")
                    }, 0), "" !== a && (o.clearMaskOnLostFocus && (-1 === g() && a === _().join("") ? s = [] : L(s)), !1 === V(s) && (setTimeout(function () {
                        i.trigger("incomplete")
                    }, 0), o.clearIncomplete && (v(), s = o.clearMaskOnLostFocus ? [] : _().slice())), F(n, s, void 0, e))
                }
            }

            function lt() {
                var t = this;
                xt = !0, document.activeElement !== t && o.showMaskOnHover && t.inputmask._valueGet() !== $().join("") && F(t, $())
            }

            function dt() {
                ft !== $().join("") && mt.trigger("change"), o.clearMaskOnLostFocus && -1 === g() && ht.inputmask._valueGet && ht.inputmask._valueGet() === _().join("") && ht.inputmask._valueSet(""), o.removeMaskOnSubmit && (ht.inputmask._valueSet(ht.inputmask.unmaskedvalue(), !0), setTimeout(function () {
                    F(ht, $())
                }, 0))
            }

            function ct() {
                setTimeout(function () {
                    mt.trigger("setvalue.inputmask")
                }, 0)
            }

            function ut(e) {
                if (ht = e, mt = t(ht), o.showTooltip && (ht.title = o.tooltip || m().mask), ("rtl" === ht.dir || o.rightAlign) && (ht.style.textAlign = "right"), ("rtl" === ht.dir || o.numericInput) && (ht.dir = "ltr", ht.removeAttribute("dir"), ht.inputmask.isRTL = !0, yt = !0), mt.off(".inputmask"), Y(ht), ("INPUT" === ht.tagName && n(ht.getAttribute("type")) || ht.isContentEditable) && (t(ht.form).on("submit.inputmask", dt).on("reset.inputmask", ct), mt.on("mouseenter.inputmask", H(lt)).on("blur.inputmask", H(rt)).on("focus.inputmask", H(it)).on("mouseleave.inputmask", H(nt)).on("click.inputmask", H(at)).on("dblclick.inputmask", H(st)).on(h + ".inputmask dragdrop.inputmask drop.inputmask", H(K)).on("cut.inputmask", H(ot)).on("complete.inputmask", H(o.oncomplete)).on("incomplete.inputmask", H(o.onincomplete)).on("cleared.inputmask", H(o.oncleared)).on("keydown.inputmask", H(W)).on("keypress.inputmask", H(z)), f || mt.on("compositionstart.inputmask", H(Z)).on("compositionupdate.inputmask", H(X)).on("compositionend.inputmask", H(tt)), "paste" === h && mt.on("input.inputmask", H(Q)), (c || f || u || p) && (mt.off("input.inputmask"), mt.on("input.inputmask", H(J)))), mt.on("setvalue.inputmask", H(et)), "" !== ht.inputmask._valueGet() || !1 === o.clearMaskOnLostFocus) {
                    var i = t.isFunction(o.onBeforeMask) ? o.onBeforeMask(ht.inputmask._valueGet(), o) || ht.inputmask._valueGet() : ht.inputmask._valueGet();
                    R(ht, !0, !1, i.split(""));
                    var a = $().slice();
                    ft = a.join(""), !1 === V(a) && o.clearIncomplete && v(), o.clearMaskOnLostFocus && (a.join("") === _().join("") ? a = [] : L(a)), F(ht, a), document.activeElement === ht && U(ht, M(g()))
                }
            }

            var ft, pt, ht, mt, vt, gt, yt = !1, bt = !1, kt = !1, wt = !1, xt = !0;
            if (void 0 !== a) switch (a.action) {
                case"isComplete":
                    return ht = a.el, V($());
                case"unmaskedvalue":
                    return ht = a.el, void 0 !== ht && void 0 !== ht.inputmask ? (s = ht.inputmask.maskset, o = ht.inputmask.opts, yt = ht.inputmask.isRTL) : (gt = a.value, o.numericInput && (yt = !0), gt = (t.isFunction(o.onBeforeMask) ? o.onBeforeMask(gt, o) || gt : gt).split(""), R(void 0, !1, !1, yt ? gt.reverse() : gt), t.isFunction(o.onBeforeWrite) && o.onBeforeWrite(void 0, $(), 0, o)), N(ht);
                case"mask":
                    ht = a.el, s = ht.inputmask.maskset, o = ht.inputmask.opts, yt = ht.inputmask.isRTL, ft = $().join(""), ut(ht);
                    break;
                case"format":
                    return o.numericInput && (yt = !0), gt = (t.isFunction(o.onBeforeMask) ? o.onBeforeMask(a.value, o) || a.value : a.value).split(""), R(void 0, !1, !1, yt ? gt.reverse() : gt), t.isFunction(o.onBeforeWrite) && o.onBeforeWrite(void 0, $(), 0, o), a.metadata ? {
                        value: yt ? $().slice().reverse().join("") : $().join(""),
                        metadata: r({action: "getmetadata"}, s, o)
                    } : yt ? $().slice().reverse().join("") : $().join("");
                case"isValid":
                    o.numericInput && (yt = !0), a.value ? (gt = a.value.split(""), R(void 0, !1, !0, yt ? gt.reverse() : gt)) : a.value = $().join("");
                    for (var Ct = $(), _t = B(), $t = Ct.length - 1; $t > _t && !A($t); $t--) ;
                    return Ct.splice(_t, $t + 1 - _t), V(Ct) && a.value === $().join("");
                case"getemptymask":
                    return _();
                case"remove":
                    ht = a.el, mt = t(ht), s = ht.inputmask.maskset, o = ht.inputmask.opts, ht.inputmask._valueSet(N(ht)), mt.off(".inputmask");
                    var Dt;
                    Object.getOwnPropertyDescriptor && (Dt = Object.getOwnPropertyDescriptor(ht, "value")), Dt && Dt.get ? ht.inputmask.__valueGet && Object.defineProperty(ht, "value", {
                        get: ht.inputmask.__valueGet,
                        set: ht.inputmask.__valueSet
                    }) : document.__lookupGetter__ && ht.__lookupGetter__("value") && ht.inputmask.__valueGet && (ht.__defineGetter__("value", ht.inputmask.__valueGet), ht.__defineSetter__("value", ht.inputmask.__valueSet)), ht.inputmask = void 0;
                    break;
                case"getmetadata":
                    if (t.isArray(s.metadata)) {
                        for (var St, Tt = g(), Pt = Tt; Pt >= 0; Pt--) if (m().validPositions[Pt] && void 0 !== m().validPositions[Pt].alternation) {
                            St = m().validPositions[Pt].alternation;
                            break
                        }
                        return void 0 !== St ? s.metadata[m().validPositions[Tt].locator[St]] : s.metadata[0]
                    }
                    return s.metadata
            }
        }

        e.prototype = {
            defaults: {
                placeholder: "_",
                optionalmarker: {start: "[", end: "]"},
                quantifiermarker: {start: "{", end: "}"},
                groupmarker: {start: "(", end: ")"},
                alternatormarker: "|",
                escapeChar: "\\",
                mask: null,
                oncomplete: t.noop,
                onincomplete: t.noop,
                oncleared: t.noop,
                repeat: 0,
                greedy: !0,
                autoUnmask: !1,
                removeMaskOnSubmit: !1,
                clearMaskOnLostFocus: !0,
                insertMode: !0,
                clearIncomplete: !1,
                aliases: {},
                alias: null,
                onKeyDown: t.noop,
                onBeforeMask: null,
                onBeforePaste: function (e, i) {
                    return t.isFunction(i.onBeforeMask) ? i.onBeforeMask(e, i) : e
                },
                onBeforeWrite: null,
                onUnMask: null,
                showMaskOnFocus: !0,
                showMaskOnHover: !0,
                onKeyValidation: t.noop,
                skipOptionalPartCharacter: " ",
                showTooltip: !1,
                tooltip: void 0,
                numericInput: !1,
                rightAlign: !1,
                undoOnEscape: !0,
                radixPoint: "",
                groupSeparator: "",
                radixFocus: !1,
                nojumps: !1,
                nojumpsThreshold: 0,
                keepStatic: null,
                positionCaretOnTab: !1,
                tabThrough: !1,
                supportsInputType: [],
                definitions: {
                    9: {validator: "[0-9]", cardinality: 1, definitionSymbol: "*"},
                    a: {
                        validator: "[A-Za-z\u0410-\u044f\u0401\u0451\xc0-\xff\xb5]",
                        cardinality: 1,
                        definitionSymbol: "*"
                    },
                    "*": {validator: "[0-9A-Za-z\u0410-\u044f\u0401\u0451\xc0-\xff\xb5]", cardinality: 1}
                },
                ignorables: [8, 9, 13, 19, 27, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 93, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123],
                isComplete: null,
                canClearPosition: t.noop,
                postValidation: null
            }, masksCache: {}, mask: function (i) {
                var n = this;
                return "string" == typeof i && (i = document.getElementById(i) || document.querySelectorAll(i)), i = i.nodeName ? [i] : i, t.each(i, function (i, a) {
                    var l = t.extend(!0, {}, n.opts);
                    s(a, l, t.extend(!0, {}, n.userOptions));
                    var d = o(l, n.noMasksCache);
                    void 0 !== d && (void 0 !== a.inputmask && a.inputmask.remove(), a.inputmask = new e, a.inputmask.opts = l, a.inputmask.noMasksCache = n.noMasksCache, a.inputmask.userOptions = t.extend(!0, {}, n.userOptions), a.inputmask.el = a, a.inputmask.maskset = d, a.inputmask.isRTL = !1, t.data(a, "_inputmask_opts", l), r({
                        action: "mask",
                        el: a
                    }))
                }), i ? i[0].inputmask || this : this
            }, option: function (e) {
                return "string" == typeof e ? this.opts[e] : "object" == typeof e ? (t.extend(this.opts, e), t.extend(this.userOptions, e), this.el && (void 0 !== e.mask || void 0 !== e.alias ? this.mask(this.el) : (t.data(this.el, "_inputmask_opts", this.opts), r({
                    action: "mask",
                    el: this.el
                }))), this) : void 0
            }, unmaskedvalue: function (t) {
                return r({
                    action: "unmaskedvalue",
                    el: this.el,
                    value: t
                }, this.el && this.el.inputmask ? this.el.inputmask.maskset : o(this.opts, this.noMasksCache), this.opts)
            }, remove: function () {
                return this.el ? (r({action: "remove", el: this.el}), this.el.inputmask = void 0, this.el) : void 0
            }, getemptymask: function () {
                return r({action: "getemptymask"}, this.maskset || o(this.opts, this.noMasksCache), this.opts)
            }, hasMaskedValue: function () {
                return !this.opts.autoUnmask
            }, isComplete: function () {
                return r({
                    action: "isComplete",
                    el: this.el
                }, this.maskset || o(this.opts, this.noMasksCache), this.opts)
            }, getmetadata: function () {
                return r({action: "getmetadata"}, this.maskset || o(this.opts, this.noMasksCache), this.opts)
            }, isValid: function (t) {
                return r({action: "isValid", value: t}, this.maskset || o(this.opts, this.noMasksCache), this.opts)
            }, format: function (t, e) {
                return r({
                    action: "format",
                    value: t,
                    metadata: e
                }, this.maskset || o(this.opts, this.noMasksCache), this.opts)
            }
        }, e.extendDefaults = function (i) {
            t.extend(!0, e.prototype.defaults, i)
        }, e.extendDefinitions = function (i) {
            t.extend(!0, e.prototype.defaults.definitions, i)
        }, e.extendAliases = function (i) {
            t.extend(!0, e.prototype.defaults.aliases, i)
        }, e.format = function (t, i, n) {
            return e(i).format(t, n)
        }, e.unmask = function (t, i) {
            return e(i).unmaskedvalue(t)
        }, e.isValid = function (t, i) {
            return e(i).isValid(t)
        }, e.remove = function (e) {
            t.each(e, function (t, e) {
                e.inputmask && e.inputmask.remove()
            })
        }, e.escapeRegex = function (t) {
            var e = ["/", ".", "*", "+", "?", "|", "(", ")", "[", "]", "{", "}", "\\", "$", "^"];
            return t.replace(new RegExp("(\\" + e.join("|\\") + ")", "gim"), "\\$1")
        }, e.keyCode = {
            ALT: 18,
            BACKSPACE: 8,
            CAPS_LOCK: 20,
            COMMA: 188,
            COMMAND: 91,
            COMMAND_LEFT: 91,
            COMMAND_RIGHT: 93,
            CONTROL: 17,
            DELETE: 46,
            DOWN: 40,
            END: 35,
            ENTER: 13,
            ESCAPE: 27,
            HOME: 36,
            INSERT: 45,
            LEFT: 37,
            MENU: 93,
            NUMPAD_ADD: 107,
            NUMPAD_DECIMAL: 110,
            NUMPAD_DIVIDE: 111,
            NUMPAD_ENTER: 108,
            NUMPAD_MULTIPLY: 106,
            NUMPAD_SUBTRACT: 109,
            PAGE_DOWN: 34,
            PAGE_UP: 33,
            PERIOD: 190,
            RIGHT: 39,
            SHIFT: 16,
            SPACE: 32,
            TAB: 9,
            UP: 38,
            WINDOWS: 91
        };
        var l = navigator.userAgent, d = null !== l.match(new RegExp("iphone", "i")),
            c = null !== l.match(new RegExp("android.*safari.*", "i")),
            u = null !== l.match(new RegExp("android.*chrome.*", "i")),
            f = null !== l.match(new RegExp("android.*firefox.*", "i")),
            p = /Kindle/i.test(l) || /Silk/i.test(l) || /KFTT/i.test(l) || /KFOT/i.test(l) || /KFJWA/i.test(l) || /KFJWI/i.test(l) || /KFSOWI/i.test(l) || /KFTHWA/i.test(l) || /KFTHWI/i.test(l) || /KFAPWA/i.test(l) || /KFAPWI/i.test(l),
            h = i("paste") ? "paste" : i("input") ? "input" : "propertychange";
        window.Inputmask = e
    }(jQuery), function (t, e) {
    void 0 === t.fn.inputmask && (t.fn.inputmask = function (i, n) {
        var a, s = this[0];
        if (n = n || {}, "string" == typeof i) switch (i) {
            case"unmaskedvalue":
                return s && s.inputmask ? s.inputmask.unmaskedvalue() : t(s).val();
            case"remove":
                return this.each(function () {
                    this.inputmask && this.inputmask.remove()
                });
            case"getemptymask":
                return s && s.inputmask ? s.inputmask.getemptymask() : "";
            case"hasMaskedValue":
                return !(!s || !s.inputmask) && s.inputmask.hasMaskedValue();
            case"isComplete":
                return !s || !s.inputmask || s.inputmask.isComplete();
            case"getmetadata":
                return s && s.inputmask ? s.inputmask.getmetadata() : void 0;
            case"setvalue":
                t(s).val(n), s && void 0 !== s.inputmask && t(s).triggerHandler("setvalue.inputmask");
                break;
            case"option":
                if ("string" != typeof n) return this.each(function () {
                    return void 0 !== this.inputmask ? this.inputmask.option(n) : void 0
                });
                if (s && void 0 !== s.inputmask) return s.inputmask.option(n);
                break;
            default:
                return n.alias = i, a = new e(n), this.each(function () {
                    a.mask(this)
                })
        } else {
            if ("object" == typeof i) return a = new e(i), void 0 === i.mask && void 0 === i.alias ? this.each(function () {
                return void 0 !== this.inputmask ? this.inputmask.option(i) : void a.mask(this)
            }) : this.each(function () {
                a.mask(this)
            });
            if (void 0 === i) return this.each(function () {
                a = new e(n), a.mask(this)
            })
        }
    }), t.fn.inputmask
}(jQuery, Inputmask), function (t, e) {
    e.extendDefinitions({
        h: {
            validator: "[01][0-9]|2[0-3]",
            cardinality: 2,
            prevalidator: [{validator: "[0-2]", cardinality: 1}]
        },
        s: {validator: "[0-5][0-9]", cardinality: 2, prevalidator: [{validator: "[0-5]", cardinality: 1}]},
        d: {validator: "0[1-9]|[12][0-9]|3[01]", cardinality: 2, prevalidator: [{validator: "[0-3]", cardinality: 1}]},
        m: {validator: "0[1-9]|1[012]", cardinality: 2, prevalidator: [{validator: "[01]", cardinality: 1}]},
        y: {
            validator: "(19|20)\\d{2}",
            cardinality: 4,
            prevalidator: [{validator: "[12]", cardinality: 1}, {
                validator: "(19|20)",
                cardinality: 2
            }, {validator: "(19|20)\\d", cardinality: 3}]
        }
    }), e.extendAliases({
        "dd/mm/yyyy": {
            mask: "1/2/y",
            placeholder: "dd/mm/yyyy",
            regex: {
                val1pre: new RegExp("[0-3]"), val1: new RegExp("0[1-9]|[12][0-9]|3[01]"), val2pre: function (t) {
                    var i = e.escapeRegex.call(this, t);
                    return new RegExp("((0[1-9]|[12][0-9]|3[01])" + i + "[01])")
                }, val2: function (t) {
                    var i = e.escapeRegex.call(this, t);
                    return new RegExp("((0[1-9]|[12][0-9])" + i + "(0[1-9]|1[012]))|(30" + i + "(0[13-9]|1[012]))|(31" + i + "(0[13578]|1[02]))")
                }
            },
            leapday: "29/02/",
            separator: "/",
            yearrange: {minyear: 1900, maxyear: 2099},
            isInYearRange: function (t, e, i) {
                if (isNaN(t)) return !1;
                var n = parseInt(t.concat(e.toString().slice(t.length))),
                    a = parseInt(t.concat(i.toString().slice(t.length)));
                return !isNaN(n) && (n >= e && i >= n) || !isNaN(a) && (a >= e && i >= a)
            },
            determinebaseyear: function (t, e, i) {
                var n = (new Date).getFullYear();
                if (t > n) return t;
                if (n > e) {
                    for (var a = e.toString().slice(0, 2), s = e.toString().slice(2, 4); a + i > e;) a--;
                    var o = a + s;
                    return t > o ? t : o
                }
                return n
            },
            onKeyDown: function (i) {
                var n = t(this);
                if (i.ctrlKey && i.keyCode === e.keyCode.RIGHT) {
                    var a = new Date;
                    n.val(a.getDate().toString() + (a.getMonth() + 1).toString() + a.getFullYear().toString()), n.trigger("setvalue.inputmask")
                }
            },
            getFrontValue: function (t, e, i) {
                for (var n = 0, a = 0, s = 0; s < t.length && "2" !== t.charAt(s); s++) {
                    var o = i.definitions[t.charAt(s)];
                    o ? (n += a, a = o.cardinality) : a++
                }
                return e.join("").substr(n, a)
            },
            definitions: {
                1: {
                    validator: function (t, e, i, n, a) {
                        var s = a.regex.val1.test(t);
                        return n || s || t.charAt(1) !== a.separator && -1 === "-./".indexOf(t.charAt(1)) || !(s = a.regex.val1.test("0" + t.charAt(0))) ? s : (e.buffer[i - 1] = "0", {
                            refreshFromBuffer: {
                                start: i - 1,
                                end: i
                            }, pos: i, c: t.charAt(0)
                        })
                    }, cardinality: 2, prevalidator: [{
                        validator: function (t, e, i, n, a) {
                            var s = t;
                            isNaN(e.buffer[i + 1]) || (s += e.buffer[i + 1]);
                            var o = 1 === s.length ? a.regex.val1pre.test(s) : a.regex.val1.test(s);
                            if (!n && !o) {
                                if (o = a.regex.val1.test(t + "0")) return e.buffer[i] = t, e.buffer[++i] = "0", {
                                    pos: i,
                                    c: "0"
                                };
                                if (o = a.regex.val1.test("0" + t)) return e.buffer[i] = "0", i++, {pos: i}
                            }
                            return o
                        }, cardinality: 1
                    }]
                }, 2: {
                    validator: function (t, e, i, n, a) {
                        var s = a.getFrontValue(e.mask, e.buffer, a);
                        -1 !== s.indexOf(a.placeholder[0]) && (s = "01" + a.separator);
                        var o = a.regex.val2(a.separator).test(s + t);
                        if (!n && !o && (t.charAt(1) === a.separator || -1 !== "-./".indexOf(t.charAt(1))) && (o = a.regex.val2(a.separator).test(s + "0" + t.charAt(0)))) return e.buffer[i - 1] = "0", {
                            refreshFromBuffer: {
                                start: i - 1,
                                end: i
                            }, pos: i, c: t.charAt(0)
                        };
                        if (a.mask.indexOf("2") === a.mask.length - 1 && o) {
                            if (e.buffer.join("").substr(4, 4) + t !== a.leapday) return !0;
                            var r = parseInt(e.buffer.join("").substr(0, 4), 10);
                            return r % 4 == 0 && (r % 100 != 0 || r % 400 == 0)
                        }
                        return o
                    }, cardinality: 2, prevalidator: [{
                        validator: function (t, e, i, n, a) {
                            isNaN(e.buffer[i + 1]) || (t += e.buffer[i + 1]);
                            var s = a.getFrontValue(e.mask, e.buffer, a);
                            -1 !== s.indexOf(a.placeholder[0]) && (s = "01" + a.separator);
                            var o = 1 === t.length ? a.regex.val2pre(a.separator).test(s + t) : a.regex.val2(a.separator).test(s + t);
                            return n || o || !(o = a.regex.val2(a.separator).test(s + "0" + t)) ? o : (e.buffer[i] = "0", i++, {pos: i})
                        }, cardinality: 1
                    }]
                }, y: {
                    validator: function (t, e, i, n, a) {
                        if (a.isInYearRange(t, a.yearrange.minyear, a.yearrange.maxyear)) {
                            if (e.buffer.join("").substr(0, 6) !== a.leapday) return !0;
                            var s = parseInt(t, 10);
                            return s % 4 == 0 && (s % 100 != 0 || s % 400 == 0)
                        }
                        return !1
                    }, cardinality: 4, prevalidator: [{
                        validator: function (t, e, i, n, a) {
                            var s = a.isInYearRange(t, a.yearrange.minyear, a.yearrange.maxyear);
                            if (!n && !s) {
                                var o = a.determinebaseyear(a.yearrange.minyear, a.yearrange.maxyear, t + "0").toString().slice(0, 1);
                                if (s = a.isInYearRange(o + t, a.yearrange.minyear, a.yearrange.maxyear)) return e.buffer[i++] = o.charAt(0), {pos: i};
                                if (o = a.determinebaseyear(a.yearrange.minyear, a.yearrange.maxyear, t + "0").toString().slice(0, 2), s = a.isInYearRange(o + t, a.yearrange.minyear, a.yearrange.maxyear)) return e.buffer[i++] = o.charAt(0), e.buffer[i++] = o.charAt(1), {pos: i}
                            }
                            return s
                        }, cardinality: 1
                    }, {
                        validator: function (t, e, i, n, a) {
                            var s = a.isInYearRange(t, a.yearrange.minyear, a.yearrange.maxyear);
                            if (!n && !s) {
                                var o = a.determinebaseyear(a.yearrange.minyear, a.yearrange.maxyear, t).toString().slice(0, 2);
                                if (s = a.isInYearRange(t[0] + o[1] + t[1], a.yearrange.minyear, a.yearrange.maxyear)) return e.buffer[i++] = o.charAt(1), {pos: i};
                                if (o = a.determinebaseyear(a.yearrange.minyear, a.yearrange.maxyear, t).toString().slice(0, 2), a.isInYearRange(o + t, a.yearrange.minyear, a.yearrange.maxyear)) {
                                    if (e.buffer.join("").substr(0, 6) !== a.leapday) s = !0; else {
                                        var r = parseInt(t, 10);
                                        s = r % 4 == 0 && (r % 100 != 0 || r % 400 == 0)
                                    }
                                } else s = !1;
                                if (s) return e.buffer[i - 1] = o.charAt(0), e.buffer[i++] = o.charAt(1), e.buffer[i++] = t.charAt(0), {
                                    refreshFromBuffer: {
                                        start: i - 3,
                                        end: i
                                    }, pos: i
                                }
                            }
                            return s
                        }, cardinality: 2
                    }, {
                        validator: function (t, e, i, n, a) {
                            return a.isInYearRange(t, a.yearrange.minyear, a.yearrange.maxyear)
                        }, cardinality: 3
                    }]
                }
            },
            insertMode: !1,
            autoUnmask: !1
        },
        "mm/dd/yyyy": {
            placeholder: "mm/dd/yyyy", alias: "dd/mm/yyyy", regex: {
                val2pre: function (t) {
                    var i = e.escapeRegex.call(this, t);
                    return new RegExp("((0[13-9]|1[012])" + i + "[0-3])|(02" + i + "[0-2])")
                }, val2: function (t) {
                    var i = e.escapeRegex.call(this, t);
                    return new RegExp("((0[1-9]|1[012])" + i + "(0[1-9]|[12][0-9]))|((0[13-9]|1[012])" + i + "30)|((0[13578]|1[02])" + i + "31)")
                }, val1pre: new RegExp("[01]"), val1: new RegExp("0[1-9]|1[012]")
            }, leapday: "02/29/", onKeyDown: function (i) {
                var n = t(this);
                if (i.ctrlKey && i.keyCode === e.keyCode.RIGHT) {
                    var a = new Date;
                    n.val((a.getMonth() + 1).toString() + a.getDate().toString() + a.getFullYear().toString()), n.trigger("setvalue.inputmask")
                }
            }
        },
        "yyyy/mm/dd": {
            mask: "y/1/2",
            placeholder: "yyyy/mm/dd",
            alias: "mm/dd/yyyy",
            leapday: "/02/29",
            onKeyDown: function (i) {
                var n = t(this);
                if (i.ctrlKey && i.keyCode === e.keyCode.RIGHT) {
                    var a = new Date;
                    n.val(a.getFullYear().toString() + (a.getMonth() + 1).toString() + a.getDate().toString()), n.trigger("setvalue.inputmask")
                }
            }
        },
        "dd.mm.yyyy": {
            mask: "1.2.y",
            placeholder: "dd.mm.yyyy",
            leapday: "29.02.",
            separator: ".",
            alias: "dd/mm/yyyy"
        },
        "dd-mm-yyyy": {
            mask: "1-2-y",
            placeholder: "dd-mm-yyyy",
            leapday: "29-02-",
            separator: "-",
            alias: "dd/mm/yyyy"
        },
        "mm.dd.yyyy": {
            mask: "1.2.y",
            placeholder: "mm.dd.yyyy",
            leapday: "02.29.",
            separator: ".",
            alias: "mm/dd/yyyy"
        },
        "mm-dd-yyyy": {
            mask: "1-2-y",
            placeholder: "mm-dd-yyyy",
            leapday: "02-29-",
            separator: "-",
            alias: "mm/dd/yyyy"
        },
        "yyyy.mm.dd": {
            mask: "y.1.2",
            placeholder: "yyyy.mm.dd",
            leapday: ".02.29",
            separator: ".",
            alias: "yyyy/mm/dd"
        },
        "yyyy-mm-dd": {
            mask: "y-1-2",
            placeholder: "yyyy-mm-dd",
            leapday: "-02-29",
            separator: "-",
            alias: "yyyy/mm/dd"
        },
        datetime: {
            mask: "1/2/y h:s",
            placeholder: "dd/mm/yyyy hh:mm",
            alias: "dd/mm/yyyy",
            regex: {
                hrspre: new RegExp("[012]"),
                hrs24: new RegExp("2[0-4]|1[3-9]"),
                hrs: new RegExp("[01][0-9]|2[0-4]"),
                ampm: new RegExp("^[a|p|A|P][m|M]"),
                mspre: new RegExp("[0-5]"),
                ms: new RegExp("[0-5][0-9]")
            },
            timeseparator: ":",
            hourFormat: "24",
            definitions: {
                h: {
                    validator: function (t, e, i, n, a) {
                        if ("24" === a.hourFormat && 24 === parseInt(t, 10)) return e.buffer[i - 1] = "0", e.buffer[i] = "0", {
                            refreshFromBuffer: {
                                start: i - 1,
                                end: i
                            }, c: "0"
                        };
                        var s = a.regex.hrs.test(t);
                        if (!n && !s && (t.charAt(1) === a.timeseparator || -1 !== "-.:".indexOf(t.charAt(1))) && (s = a.regex.hrs.test("0" + t.charAt(0)))) return e.buffer[i - 1] = "0", e.buffer[i] = t.charAt(0), i++, {
                            refreshFromBuffer: {
                                start: i - 2,
                                end: i
                            }, pos: i, c: a.timeseparator
                        };
                        if (s && "24" !== a.hourFormat && a.regex.hrs24.test(t)) {
                            var o = parseInt(t, 10);
                            return 24 === o ? (e.buffer[i + 5] = "a", e.buffer[i + 6] = "m") : (e.buffer[i + 5] = "p", e.buffer[i + 6] = "m"), o -= 12, 10 > o ? (e.buffer[i] = o.toString(), e.buffer[i - 1] = "0") : (e.buffer[i] = o.toString().charAt(1), e.buffer[i - 1] = o.toString().charAt(0)), {
                                refreshFromBuffer: {
                                    start: i - 1,
                                    end: i + 6
                                }, c: e.buffer[i]
                            }
                        }
                        return s
                    }, cardinality: 2, prevalidator: [{
                        validator: function (t, e, i, n, a) {
                            var s = a.regex.hrspre.test(t);
                            return n || s || !(s = a.regex.hrs.test("0" + t)) ? s : (e.buffer[i] = "0", i++, {pos: i})
                        }, cardinality: 1
                    }]
                }, s: {
                    validator: "[0-5][0-9]", cardinality: 2, prevalidator: [{
                        validator: function (t, e, i, n, a) {
                            var s = a.regex.mspre.test(t);
                            return n || s || !(s = a.regex.ms.test("0" + t)) ? s : (e.buffer[i] = "0", i++, {pos: i})
                        }, cardinality: 1
                    }]
                }, t: {
                    validator: function (t, e, i, n, a) {
                        return a.regex.ampm.test(t + "m")
                    }, casing: "lower", cardinality: 1
                }
            },
            insertMode: !1,
            autoUnmask: !1
        },
        datetime12: {mask: "1/2/y h:s t\\m", placeholder: "dd/mm/yyyy hh:mm xm", alias: "datetime", hourFormat: "12"},
        "mm/dd/yyyy hh:mm xm": {
            mask: "1/2/y h:s t\\m",
            placeholder: "mm/dd/yyyy hh:mm xm",
            alias: "datetime12",
            regex: {
                val2pre: function (t) {
                    var i = e.escapeRegex.call(this, t);
                    return new RegExp("((0[13-9]|1[012])" + i + "[0-3])|(02" + i + "[0-2])")
                }, val2: function (t) {
                    var i = e.escapeRegex.call(this, t);
                    return new RegExp("((0[1-9]|1[012])" + i + "(0[1-9]|[12][0-9]))|((0[13-9]|1[012])" + i + "30)|((0[13578]|1[02])" + i + "31)")
                }, val1pre: new RegExp("[01]"), val1: new RegExp("0[1-9]|1[012]")
            },
            leapday: "02/29/",
            onKeyDown: function (i) {
                var n = t(this);
                if (i.ctrlKey && i.keyCode === e.keyCode.RIGHT) {
                    var a = new Date;
                    n.val((a.getMonth() + 1).toString() + a.getDate().toString() + a.getFullYear().toString()), n.trigger("setvalue.inputmask")
                }
            }
        },
        "hh:mm t": {mask: "h:s t\\m", placeholder: "hh:mm xm", alias: "datetime", hourFormat: "12"},
        "h:s t": {mask: "h:s t\\m", placeholder: "hh:mm xm", alias: "datetime", hourFormat: "12"},
        "hh:mm:ss": {mask: "h:s:s", placeholder: "hh:mm:ss", alias: "datetime", autoUnmask: !1},
        "hh:mm": {mask: "h:s", placeholder: "hh:mm", alias: "datetime", autoUnmask: !1},
        date: {alias: "dd/mm/yyyy"},
        "mm/yyyy": {mask: "1/y", placeholder: "mm/yyyy", leapday: "donotuse", separator: "/", alias: "mm/dd/yyyy"},
        shamsi: {
            regex: {
                val2pre: function (t) {
                    var i = e.escapeRegex.call(this, t);
                    return new RegExp("((0[1-9]|1[012])" + i + "[0-3])")
                }, val2: function (t) {
                    var i = e.escapeRegex.call(this, t);
                    return new RegExp("((0[1-9]|1[012])" + i + "(0[1-9]|[12][0-9]))|((0[1-9]|1[012])" + i + "30)|((0[1-6])" + i + "31)")
                }, val1pre: new RegExp("[01]"), val1: new RegExp("0[1-9]|1[012]")
            },
            yearrange: {minyear: 1300, maxyear: 1499},
            mask: "y/1/2",
            leapday: "/12/30",
            placeholder: "yyyy/mm/dd",
            alias: "mm/dd/yyyy",
            clearIncomplete: !0
        }
    })
}(jQuery, Inputmask), function (t, e) {
    e.extendDefinitions({
        A: {
            validator: "[A-Za-z\u0410-\u044f\u0401\u0451\xc0-\xff\xb5]",
            cardinality: 1,
            casing: "upper"
        },
        "&": {validator: "[0-9A-Za-z\u0410-\u044f\u0401\u0451\xc0-\xff\xb5]", cardinality: 1, casing: "upper"},
        "#": {validator: "[0-9A-Fa-f]", cardinality: 1, casing: "upper"}
    }), e.extendAliases({
        url: {
            mask: "(\\http://)|(\\http\\s://)|(ftp://)|(ftp\\s://)*{+}",
            insertMode: !1,
            autoUnmask: !1
        },
        ip: {
            mask: "i[i[i]].i[i[i]].i[i[i]].i[i[i]]", definitions: {
                i: {
                    validator: function (t, e, i) {
                        return i - 1 > -1 && "." !== e.buffer[i - 1] ? (t = e.buffer[i - 1] + t, t = i - 2 > -1 && "." !== e.buffer[i - 2] ? e.buffer[i - 2] + t : "0" + t) : t = "00" + t, new RegExp("25[0-5]|2[0-4][0-9]|[01][0-9][0-9]").test(t)
                    }, cardinality: 1
                }
            }, onUnMask: function (t) {
                return t
            }
        },
        email: {
            mask: "*{1,64}[.*{1,64}][.*{1,64}][.*{1,64}]@*{1,64}[.*{2,64}][.*{2,6}][.*{1,2}]",
            greedy: !1,
            onBeforePaste: function (t) {
                return t = t.toLowerCase(), t.replace("mailto:", "")
            },
            definitions: {"*": {validator: "[0-9A-Za-z!#$%&'*+/=?^_`{|}~-]", cardinality: 1, casing: "lower"}},
            onUnMask: function (t) {
                return t
            }
        },
        mac: {mask: "##:##:##:##:##:##"}
    })
}(jQuery, Inputmask), function (t, e) {
    e.extendAliases({
        numeric: {
            mask: function (t) {
                function e(e) {
                    for (var i = "", n = 0; n < e.length; n++) i += t.definitions[e.charAt(n)] ? "\\" + e.charAt(n) : e.charAt(n);
                    return i
                }

                if (0 !== t.repeat && isNaN(t.integerDigits) && (t.integerDigits = t.repeat), t.repeat = 0, t.groupSeparator === t.radixPoint && ("." === t.radixPoint ? t.groupSeparator = "," : "," === t.radixPoint ? t.groupSeparator = "." : t.groupSeparator = ""), " " === t.groupSeparator && (t.skipOptionalPartCharacter = void 0), t.autoGroup = t.autoGroup && "" !== t.groupSeparator, t.autoGroup && ("string" == typeof t.groupSize && isFinite(t.groupSize) && (t.groupSize = parseInt(t.groupSize)), isFinite(t.integerDigits))) {
                    var i = Math.floor(t.integerDigits / t.groupSize), n = t.integerDigits % t.groupSize;
                    t.integerDigits = parseInt(t.integerDigits) + (0 === n ? i - 1 : i), t.integerDigits < 1 && (t.integerDigits = "*")
                }
                t.placeholder.length > 1 && (t.placeholder = t.placeholder.charAt(0)), t.radixFocus = t.radixFocus && "" !== t.placeholder && !0 === t.integerOptional, t.definitions[";"] = t.definitions["~"], t.definitions[";"].definitionSymbol = "~", !0 === t.numericInput && (t.radixFocus = !1, t.digitsOptional = !1, isNaN(t.digits) && (t.digits = 2), t.decimalProtect = !1);
                var a = e(t.prefix);
                return a += "[+]", a += !0 === t.integerOptional ? "~{1," + t.integerDigits + "}" : "~{" + t.integerDigits + "}", void 0 !== t.digits && (isNaN(t.digits) || parseInt(t.digits) > 0) && (a += t.digitsOptional ? "[" + (t.decimalProtect ? ":" : t.radixPoint) + ";{1," + t.digits + "}]" : (t.decimalProtect ? ":" : t.radixPoint) + ";{" + t.digits + "}"), "" !== t.negationSymbol.back && (a += "[-]"), a += e(t.suffix), t.greedy = !1, a
            },
            placeholder: "",
            greedy: !1,
            digits: "*",
            digitsOptional: !0,
            radixPoint: ".",
            radixFocus: !0,
            groupSize: 3,
            groupSeparator: "",
            autoGroup: !1,
            allowPlus: !0,
            allowMinus: !0,
            negationSymbol: {front: "-", back: ""},
            integerDigits: "+",
            integerOptional: !0,
            prefix: "",
            suffix: "",
            rightAlign: !0,
            decimalProtect: !0,
            min: null,
            max: null,
            step: 1,
            insertMode: !0,
            autoUnmask: !1,
            unmaskAsNumber: !1,
            postFormat: function (i, n, a, s) {
                !0 === s.numericInput && (i = i.reverse(), isFinite(n) && (n = i.join("").length - n - 1));
                var o, r, l = !1;
                i.length >= s.suffix.length && i.join("").indexOf(s.suffix) === i.length - s.suffix.length && (i.length = i.length - s.suffix.length, l = !0), n = n >= i.length ? i.length - 1 : n < s.prefix.length ? s.prefix.length : n;
                var d = !1, c = i[n];
                if ("" === s.groupSeparator || !0 !== s.numericInput && -1 !== t.inArray(s.radixPoint, i) && n > t.inArray(s.radixPoint, i) || new RegExp("[" + e.escapeRegex(s.negationSymbol.front) + "+]").test(c)) {
                    if (l) for (o = 0, r = s.suffix.length; r > o; o++) i.push(s.suffix.charAt(o));
                    return {pos: n}
                }
                var u = i.slice();
                c === s.groupSeparator && (u.splice(n--, 1), c = u[n]), a ? c !== s.radixPoint && (u[n] = "?") : u.splice(n, 0, "?");
                var f = u.join(""), p = f;
                if (f.length > 0 && s.autoGroup || a && -1 !== f.indexOf(s.groupSeparator)) {
                    var h = e.escapeRegex(s.groupSeparator);
                    d = 0 === f.indexOf(s.groupSeparator), f = f.replace(new RegExp(h, "g"), "");
                    var m = f.split(s.radixPoint);
                    if ((f = "" === s.radixPoint ? f : m[0]) !== s.prefix + "?0" && f.length >= s.groupSize + s.prefix.length) for (var v = new RegExp("([-+]?[\\d?]+)([\\d?]{" + s.groupSize + "})"); v.test(f);) f = f.replace(v, "$1" + s.groupSeparator + "$2"), f = f.replace(s.groupSeparator + s.groupSeparator, s.groupSeparator);
                    "" !== s.radixPoint && m.length > 1 && (f += s.radixPoint + m[1])
                }
                for (d = p !== f, i.length = f.length, o = 0, r = f.length; r > o; o++) i[o] = f.charAt(o);
                var g = t.inArray("?", i);
                if (-1 === g && c === s.radixPoint && (g = t.inArray(s.radixPoint, i)), a ? i[g] = c : i.splice(g, 1), !d && l) for (o = 0, r = s.suffix.length; r > o; o++) i.push(s.suffix.charAt(o));
                return g = s.numericInput && isFinite(n) ? i.join("").length - g - 1 : g, s.numericInput && (i = i.reverse(), t.inArray(s.radixPoint, i) < g && i.join("").length - s.suffix.length !== g && (g -= 1)), {
                    pos: g,
                    refreshFromBuffer: d,
                    buffer: i
                }
            },
            onBeforeWrite: function (i, n, a, s) {
                if (i && ("blur" === i.type || "checkval" === i.type)) {
                    var o = n.join(""), r = o.replace(s.prefix, "");
                    if (r = r.replace(s.suffix, ""), r = r.replace(new RegExp(e.escapeRegex(s.groupSeparator), "g"), ""), "," === s.radixPoint && (r = r.replace(e.escapeRegex(s.radixPoint), ".")), isFinite(r) && isFinite(s.min) && parseFloat(r) < parseFloat(s.min)) return t.extend(!0, {
                        refreshFromBuffer: !0,
                        buffer: (s.prefix + s.min).split("")
                    }, s.postFormat((s.prefix + s.min).split(""), 0, !0, s));
                    if (!0 !== s.numericInput) {
                        var l = "" !== s.radixPoint ? n.join("").split(s.radixPoint) : [n.join("")],
                            d = l[0].match(s.regex.integerPart(s)),
                            c = 2 === l.length ? l[1].match(s.regex.integerNPart(s)) : void 0;
                        if (d) {
                            d[0] !== s.negationSymbol.front + "0" && d[0] !== s.negationSymbol.front && "+" !== d[0] || void 0 !== c && !c[0].match(/^0+$/) || n.splice(d.index, 1);
                            var u = t.inArray(s.radixPoint, n);
                            if (-1 !== u) {
                                if (isFinite(s.digits) && !s.digitsOptional) {
                                    for (var f = 1; f <= s.digits; f++) (void 0 === n[u + f] || n[u + f] === s.placeholder.charAt(0)) && (n[u + f] = "0");
                                    return {refreshFromBuffer: o !== n.join(""), buffer: n}
                                }
                                if (u === n.length - s.suffix.length - 1) return n.splice(u, 1), {
                                    refreshFromBuffer: !0,
                                    buffer: n
                                }
                            }
                        }
                    }
                }
                if (s.autoGroup) {
                    var p = s.postFormat(n, s.numericInput ? a : a - 1, !0, s);
                    return p.caret = a <= s.prefix.length ? p.pos : p.pos + 1, p
                }
            },
            regex: {
                integerPart: function (t) {
                    return new RegExp("[" + e.escapeRegex(t.negationSymbol.front) + "+]?\\d+")
                }, integerNPart: function (t) {
                    return new RegExp("[\\d" + e.escapeRegex(t.groupSeparator) + "]+")
                }
            },
            signHandler: function (t, e, i, n, a) {
                if (!n && a.allowMinus && "-" === t || a.allowPlus && "+" === t) {
                    var s = e.buffer.join("").match(a.regex.integerPart(a));
                    if (s && s[0].length > 0) return e.buffer[s.index] === ("-" === t ? "+" : a.negationSymbol.front) ? "-" === t ? "" !== a.negationSymbol.back ? {
                        pos: s.index,
                        c: a.negationSymbol.front,
                        remove: s.index,
                        caret: i,
                        insert: {pos: e.buffer.length - a.suffix.length - 1, c: a.negationSymbol.back}
                    } : {
                        pos: s.index,
                        c: a.negationSymbol.front,
                        remove: s.index,
                        caret: i
                    } : "" !== a.negationSymbol.back ? {
                        pos: s.index,
                        c: "+",
                        remove: [s.index, e.buffer.length - a.suffix.length - 1],
                        caret: i
                    } : {
                        pos: s.index,
                        c: "+",
                        remove: s.index,
                        caret: i
                    } : e.buffer[s.index] === ("-" === t ? a.negationSymbol.front : "+") ? "-" === t && "" !== a.negationSymbol.back ? {
                        remove: [s.index, e.buffer.length - a.suffix.length - 1],
                        caret: i - 1
                    } : {remove: s.index, caret: i - 1} : "-" === t ? "" !== a.negationSymbol.back ? {
                        pos: s.index,
                        c: a.negationSymbol.front,
                        caret: i + 1,
                        insert: {pos: e.buffer.length - a.suffix.length, c: a.negationSymbol.back}
                    } : {pos: s.index, c: a.negationSymbol.front, caret: i + 1} : {pos: s.index, c: t, caret: i + 1}
                }
                return !1
            },
            radixHandler: function (e, i, n, a, s) {
                if (!a && (-1 !== t.inArray(e, [",", "."]) && (e = s.radixPoint), e === s.radixPoint && void 0 !== s.digits && (isNaN(s.digits) || parseInt(s.digits) > 0))) {
                    var o = t.inArray(s.radixPoint, i.buffer), r = i.buffer.join("").match(s.regex.integerPart(s));
                    if (-1 !== o && i.validPositions[o]) return i.validPositions[o - 1] ? {caret: o + 1} : {
                        pos: r.index,
                        c: r[0],
                        caret: o + 1
                    };
                    if (!r || "0" === r[0] && r.index + 1 !== n) return i.buffer[r ? r.index : n] = "0", {
                        pos: (r ? r.index : n) + 1,
                        c: s.radixPoint
                    }
                }
                return !1
            },
            leadingZeroHandler: function (e, i, n, a, s) {
                if (!0 === s.numericInput) {
                    if ("0" === i.buffer[i.buffer.length - s.prefix.length - 1]) return {
                        pos: n,
                        remove: i.buffer.length - s.prefix.length - 1
                    }
                } else {
                    var o = i.buffer.join("").match(s.regex.integerNPart(s)), r = t.inArray(s.radixPoint, i.buffer);
                    if (o && !a && (-1 === r || r >= n)) if (0 === o[0].indexOf("0")) {
                        n < s.prefix.length && (n = o.index);
                        var l = t.inArray(s.radixPoint, i._buffer),
                            d = i._buffer && i.buffer.slice(r).join("") === i._buffer.slice(l).join("") || 0 === parseInt(i.buffer.slice(r + 1).join("")),
                            c = i._buffer && i.buffer.slice(o.index, r).join("") === i._buffer.slice(s.prefix.length, l).join("") || "0" === i.buffer.slice(o.index, r).join("");
                        if (-1 === r || d && c) return i.buffer.splice(o.index, 1), n = n > o.index ? n - 1 : o.index, {
                            pos: n,
                            remove: o.index
                        };
                        if (o.index + 1 === n || "0" === e) return i.buffer.splice(o.index, 1), n = o.index, {
                            pos: n,
                            remove: o.index
                        }
                    } else if ("0" === e && n <= o.index && o[0] !== s.groupSeparator) return !1
                }
                return !0
            },
            postValidation: function (i, n) {
                var a = !0, s = i.join(""), o = s.replace(n.prefix, "");
                return o = o.replace(n.suffix, ""), o = o.replace(new RegExp(e.escapeRegex(n.groupSeparator), "g"), ""), "," === n.radixPoint && (o = o.replace(e.escapeRegex(n.radixPoint), ".")), o = o.replace(new RegExp("^" + e.escapeRegex(n.negationSymbol.front)), "-"), o = o.replace(new RegExp(e.escapeRegex(n.negationSymbol.back) + "$"), ""), o = o === n.negationSymbol.front ? o + "0" : o, isFinite(o) && (null !== n.max && isFinite(n.max) && (a = parseFloat(o) <= parseFloat(n.max)), a && null !== n.min && isFinite(n.min) && (0 >= o || o.toString().length >= n.min.toString().length) && ((a = parseFloat(o) >= parseFloat(n.min)) || (a = t.extend(!0, {
                    refreshFromBuffer: !0,
                    buffer: (n.prefix + n.min).split("")
                }, n.postFormat((n.prefix + n.min).split(""), 0, !0, n)), a.refreshFromBuffer = !0))), a
            },
            definitions: {
                "~": {
                    validator: function (i, n, a, s, o) {
                        var r = o.signHandler(i, n, a, s, o);
                        if (!r && !(r = o.radixHandler(i, n, a, s, o)) && !0 === (r = s ? new RegExp("[0-9" + e.escapeRegex(o.groupSeparator) + "]").test(i) : new RegExp("[0-9]").test(i)) && !0 === (r = o.leadingZeroHandler(i, n, a, s, o))) {
                            var l = t.inArray(o.radixPoint, n.buffer);
                            r = -1 !== l && !1 === o.digitsOptional && !0 !== o.numericInput && a > l && !s ? {
                                pos: a,
                                remove: a
                            } : {pos: a}
                        }
                        return r
                    }, cardinality: 1, prevalidator: null
                }, "+": {
                    validator: function (t, e, i, n, a) {
                        var s = a.signHandler(t, e, i, n, a);
                        return !s && (n && a.allowMinus && t === a.negationSymbol.front || a.allowMinus && "-" === t || a.allowPlus && "+" === t) && (s = "-" !== t || ("" !== a.negationSymbol.back ? {
                            pos: i,
                            c: "-" === t ? a.negationSymbol.front : "+",
                            caret: i + 1,
                            insert: {pos: e.buffer.length, c: a.negationSymbol.back}
                        } : {pos: i, c: "-" === t ? a.negationSymbol.front : "+", caret: i + 1})), s
                    }, cardinality: 1, prevalidator: null, placeholder: ""
                }, "-": {
                    validator: function (t, e, i, n, a) {
                        var s = a.signHandler(t, e, i, n, a);
                        return !s && n && a.allowMinus && t === a.negationSymbol.back && (s = !0), s
                    }, cardinality: 1, prevalidator: null, placeholder: ""
                }, ":": {
                    validator: function (t, i, n, a, s) {
                        var o = s.signHandler(t, i, n, a, s);
                        if (!o) {
                            var r = "[" + e.escapeRegex(s.radixPoint) + ",\\.]";
                            (o = new RegExp(r).test(t)) && i.validPositions[n] && i.validPositions[n].match.placeholder === s.radixPoint && (o = {caret: n + 1})
                        }
                        return o ? {c: s.radixPoint} : o
                    }, cardinality: 1, prevalidator: null, placeholder: function (t) {
                        return t.radixPoint
                    }
                }
            },
            onUnMask: function (t, i, n) {
                var a = t.replace(n.prefix, "");
                return a = a.replace(n.suffix, ""), a = a.replace(new RegExp(e.escapeRegex(n.groupSeparator), "g"), ""), n.unmaskAsNumber ? ("" !== n.radixPoint && -1 !== a.indexOf(n.radixPoint) && (a = a.replace(e.escapeRegex.call(this, n.radixPoint), ".")), Number(a)) : a
            },
            isComplete: function (t, i) {
                var n = t.join(""), a = t.slice();
                if (i.postFormat(a, 0, !0, i), a.join("") !== n) return !1;
                var s = n.replace(i.prefix, "");
                return s = s.replace(i.suffix, ""), s = s.replace(new RegExp(e.escapeRegex(i.groupSeparator), "g"), ""), "," === i.radixPoint && (s = s.replace(e.escapeRegex(i.radixPoint), ".")), isFinite(s)
            },
            onBeforeMask: function (t, i) {
                if ("" !== i.radixPoint && isFinite(t)) t = t.toString().replace(".", i.radixPoint); else {
                    var n = t.match(/,/g), a = t.match(/\./g);
                    a && n ? a.length > n.length ? (t = t.replace(/\./g, ""), t = t.replace(",", i.radixPoint)) : n.length > a.length ? (t = t.replace(/,/g, ""), t = t.replace(".", i.radixPoint)) : t = t.indexOf(".") < t.indexOf(",") ? t.replace(/\./g, "") : t = t.replace(/,/g, "") : t = t.replace(new RegExp(e.escapeRegex(i.groupSeparator), "g"), "")
                }
                if (0 === i.digits && (-1 !== t.indexOf(".") ? t = t.substring(0, t.indexOf(".")) : -1 !== t.indexOf(",") && (t = t.substring(0, t.indexOf(",")))), "" !== i.radixPoint && isFinite(i.digits) && -1 !== t.indexOf(i.radixPoint)) {
                    var s = t.split(i.radixPoint), o = s[1].match(new RegExp("\\d*"))[0];
                    if (parseInt(i.digits) < o.toString().length) {
                        var r = Math.pow(10, parseInt(i.digits));
                        t = t.replace(e.escapeRegex(i.radixPoint), "."), t = Math.round(parseFloat(t) * r) / r, t = t.toString().replace(".", i.radixPoint)
                    }
                }
                return t.toString()
            },
            canClearPosition: function (i, n, a, s, o) {
                var r = i.validPositions[n].input,
                    l = r !== o.radixPoint || null !== i.validPositions[n].match.fn && !1 === o.decimalProtect || isFinite(r) || n === a || r === o.groupSeparator || r === o.negationSymbol.front || r === o.negationSymbol.back;
                if (l && isFinite(r)) {
                    var d, c = t.inArray(o.radixPoint, i.buffer), u = !1;
                    if (void 0 === i.validPositions[c] && (i.validPositions[c] = {input: o.radixPoint}, u = !0), !s && i.buffer) {
                        d = i.buffer.join("").substr(0, n).match(o.regex.integerNPart(o));
                        var f = n + 1;
                        if (null == d || 0 === parseInt(d[0].replace(new RegExp(e.escapeRegex(o.groupSeparator), "g"), ""))) for (; i.validPositions[f] && (i.validPositions[f].input === o.groupSeparator || "0" === i.validPositions[f].input);) delete i.validPositions[f], f++
                    }
                    var p = [];
                    for (var h in i.validPositions) void 0 !== i.validPositions[h].input && p.push(i.validPositions[h].input);
                    if (u && delete i.validPositions[c], c > 0) {
                        var m = p.join("");
                        if (d = m.match(o.regex.integerNPart(o))) if (c >= n) if (0 === d[0].indexOf("0")) l = d.index !== n || "0" === o.placeholder; else {
                            var v = parseInt(d[0].replace(new RegExp(e.escapeRegex(o.groupSeparator), "g"), "")),
                                g = parseInt(m.split(o.radixPoint)[1]);
                            10 > v && i.validPositions[n] && ("0" !== o.placeholder || g > 0) && (i.validPositions[n].input = "0",
                                i.p = o.prefix.length + 1, l = !1)
                        } else 0 === d[0].indexOf("0") && 3 === m.length && (i.validPositions = {}, l = !1)
                    }
                }
                return l
            },
            onKeyDown: function (i, n, a, s) {
                var o = t(this);
                if (i.ctrlKey) switch (i.keyCode) {
                    case e.keyCode.UP:
                        o.val(parseFloat(this.inputmask.unmaskedvalue()) + parseInt(s.step)), o.trigger("setvalue.inputmask");
                        break;
                    case e.keyCode.DOWN:
                        o.val(parseFloat(this.inputmask.unmaskedvalue()) - parseInt(s.step)), o.trigger("setvalue.inputmask")
                }
            }
        },
        currency: {
            prefix: "$ ",
            groupSeparator: ",",
            alias: "numeric",
            placeholder: "0",
            autoGroup: !0,
            digits: 2,
            digitsOptional: !1,
            clearMaskOnLostFocus: !1
        },
        decimal: {alias: "numeric"},
        integer: {alias: "numeric", digits: 0, radixPoint: ""},
        percentage: {
            alias: "numeric",
            digits: 2,
            radixPoint: ".",
            placeholder: "0",
            autoGroup: !1,
            min: 0,
            max: 100,
            suffix: " %",
            allowPlus: !1,
            allowMinus: !1
        }
    })
}(jQuery, Inputmask), function (t, e) {
    e.extendAliases({
        phone: {
            url: "phone-codes/phone-codes.js", countrycode: "", mask: function (e) {
                e.definitions["#"] = e.definitions[9];
                var i = [];
                return t.ajax({
                    url: e.url, async: !1, dataType: "json", success: function (t) {
                        i = t
                    }, error: function (t, i, n) {
                        alert(n + " - " + e.url)
                    }
                }), i = i.sort(function (t, e) {
                    return (t.mask || t) < (e.mask || e) ? -1 : 1
                })
            }, keepStatic: !1, nojumps: !0, nojumpsThreshold: 1, onBeforeMask: function (t, e) {
                var i = t.replace(/^0/g, "");
                return (i.indexOf(e.countrycode) > 1 || -1 === i.indexOf(e.countrycode)) && (i = "+" + e.countrycode + i), i
            }
        }, phonebe: {alias: "phone", url: "phone-codes/phone-be.js", countrycode: "32", nojumpsThreshold: 4}
    })
}(jQuery, Inputmask), function (t, e) {
    e.extendAliases({
        Regex: {
            mask: "r",
            greedy: !1,
            repeat: "*",
            regex: null,
            regexTokens: null,
            tokenizer: /\[\^?]?(?:[^\\\]]+|\\[\S\s]?)*]?|\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9][0-9]*|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|c[A-Za-z]|[\S\s]?)|\((?:\?[:=!]?)?|(?:[?*+]|\{[0-9]+(?:,[0-9]*)?\})\??|[^.?*+^${[()|\\]+|./g,
            quantifierFilter: /[0-9]+[^,]/,
            isComplete: function (t, e) {
                return new RegExp(e.regex).test(t.join(""))
            },
            definitions: {
                r: {
                    validator: function (e, i, n, a, s) {
                        function o(t, e) {
                            this.matches = [], this.isGroup = t || !1, this.isQuantifier = e || !1, this.quantifier = {
                                min: 1,
                                max: 1
                            }, this.repeaterPart = void 0
                        }

                        function r() {
                            var t, e, i = new o, n = [];
                            for (s.regexTokens = []; t = s.tokenizer.exec(s.regex);) switch (e = t[0], e.charAt(0)) {
                                case"(":
                                    n.push(new o(!0));
                                    break;
                                case")":
                                    d = n.pop(), n.length > 0 ? n[n.length - 1].matches.push(d) : i.matches.push(d);
                                    break;
                                case"{":
                                case"+":
                                case"*":
                                    var a = new o(!1, !0);
                                    e = e.replace(/[{}]/g, "");
                                    var r = e.split(","), l = isNaN(r[0]) ? r[0] : parseInt(r[0]),
                                        c = 1 === r.length ? l : isNaN(r[1]) ? r[1] : parseInt(r[1]);
                                    if (a.quantifier = {min: l, max: c}, n.length > 0) {
                                        var u = n[n.length - 1].matches;
                                        t = u.pop(), t.isGroup || (d = new o(!0), d.matches.push(t), t = d), u.push(t), u.push(a)
                                    } else t = i.matches.pop(), t.isGroup || (d = new o(!0), d.matches.push(t), t = d), i.matches.push(t), i.matches.push(a);
                                    break;
                                default:
                                    n.length > 0 ? n[n.length - 1].matches.push(e) : i.matches.push(e)
                            }
                            i.matches.length > 0 && s.regexTokens.push(i)
                        }

                        function l(e, i) {
                            var n = !1;
                            i && (u += "(", p++);
                            for (var a = 0; a < e.matches.length; a++) {
                                var s = e.matches[a];
                                if (!0 === s.isGroup) n = l(s, !0); else if (!0 === s.isQuantifier) {
                                    var o = t.inArray(s, e.matches), r = e.matches[o - 1], d = u;
                                    if (isNaN(s.quantifier.max)) {
                                        for (; s.repeaterPart && s.repeaterPart !== u && s.repeaterPart.length > u.length && !(n = l(r, !0));) ;
                                        n = n || l(r, !0), n && (s.repeaterPart = u), u = d + s.quantifier.max
                                    } else {
                                        for (var c = 0, f = s.quantifier.max - 1; f > c && !(n = l(r, !0)); c++) ;
                                        u = d + "{" + s.quantifier.min + "," + s.quantifier.max + "}"
                                    }
                                } else if (void 0 !== s.matches) for (var m = 0; m < s.length && !(n = l(s[m], i)); m++) ; else {
                                    var v;
                                    if ("[" == s.charAt(0)) {
                                        v = u, v += s;
                                        for (var g = 0; p > g; g++) v += ")";
                                        var y = new RegExp("^(" + v + ")$");
                                        n = y.test(h)
                                    } else for (var b = 0, k = s.length; k > b; b++) if ("\\" !== s.charAt(b)) {
                                        v = u, v += s.substr(0, b + 1), v = v.replace(/\|$/, "");
                                        for (var g = 0; p > g; g++) v += ")";
                                        var y = new RegExp("^(" + v + ")$");
                                        if (n = y.test(h)) break
                                    }
                                    u += s
                                }
                                if (n) break
                            }
                            return i && (u += ")", p--), n
                        }

                        var d, c = i.buffer.slice(), u = "", f = !1, p = 0;
                        null === s.regexTokens && r(), c.splice(n, 0, e);
                        for (var h = c.join(""), m = 0; m < s.regexTokens.length; m++) {
                            var v = s.regexTokens[m];
                            if (f = l(v, v.isGroup)) break
                        }
                        return f
                    }, cardinality: 1
                }
            }
        }
    })
}(jQuery, Inputmask), function () {
    function t() {
        $(".field-editable").find(".editable-enum").editable({
            display: m,
            success: S,
            highlight: !1,
            type: "select2",
            select2: {
                dropdownCssClass: "field-editable field-dropdown",
                dropdownAutoWidth: !0,
                minimumResultsForSearch: Infinity
            }
        })
    }

    function e() {
        $(".field-editable").find(".editable-update-subscription").editable({
            display: m,
            success: S,
            highlight: !1,
            type: "select2",
            validate: function (t) {
                var e = $(this);
                if (!e.data("can-be-updated")) {
                    var i = "open.nt.update-" + e.attr("id");
                    return $(".wrapper").trigger(i, {editable: e, value: t}), "error"
                }
            },
            select2: {
                dropdownCssClass: "field-editable field-dropdown",
                dropdownAutoWidth: !0,
                minimumResultsForSearch: Infinity
            }
        })
    }

    function i() {
        $(".field-editable").find(".editable-label-enum").each(function (t, e) {
            e = $(e), select2Class = "field-editable field-dropdown", select2Class += " " + e.attr("id"), e.editable({
                display: g,
                success: S,
                highlight: !1,
                type: "select2",
                select2: {
                    dropdownCssClass: select2Class,
                    dropdownAutoWidth: !0,
                    minimumResultsForSearch: Infinity,
                    formatResult: function (t) {
                        return v(e, t.id)
                    },
                    formatSelection: function (t) {
                        return v(e, t.id)
                    }
                }
            })
        })
    }

    function n() {
        $(".field-editable").find(".editable-bool").editable({
            display: m,
            success: T,
            highlight: !1,
            type: "select2",
            select2: {
                dropdownCssClass: "field-editable field-dropdown",
                dropdownAutoWidth: !0,
                minimumResultsForSearch: Infinity
            }
        })
    }

    function a(t) {
        (t || $(".field-editable")).find(".editable-text").editable({success: S})
    }

    function s(t) {
        (t || $(".field-editable")).find(".editable-number").editable({
            display: function (t) {
                if (t = parseFloat(t)) {
                    var e = " " + $(this).data("unit");
                    $(this).html(t).append(e)
                } else $(this).empty()
            }, success: S
        }).on("shown", function () {
            var t = $(this).data("editable").input.$input, e = " " + $(this).data("unit");
            t.addClass("masked-input"), t.inputmask({
                alias: "decimal",
                allowPlus: !1,
                allowMinus: !1,
                decimalProtect: !0,
                unmaskAsNumber: !0,
                suffix: e,
                rightAlign: !1,
                autoUnmask: !0
            })
        })
    }

    function o(t) {
        (t || $(".field-editable")).find(".editable-textarea").each(function (t, e) {
            $(e).editable({type: "textarea", success: S, rows: $(e).data("rows") || 2})
        })
    }

    function r() {
        $(".field-editable").find(".editable-choices").each(function (t, e) {
            $(e).editable({display: p, type: "select2"}), l(e)
        })
    }

    function l(t) {
        var e = $(t).data("tags-url");
        e ? $(InternalAPI.resources).each(function (i, n) {
            n.urlNoId.match(e) && n.index().done(function (e) {
                c(t, d(e), "field-editable field-dropdown")
            })
        }) : c(t, [], "field-editable field-dropdown hidden")
    }

    function d(t) {
        var e = [];
        return $(t.data).each(function (t, i) {
            e.push(i.attributes.name)
        }), e
    }

    function c(t, e, i) {
        $(t).editable("option", "select2", {
            dropdownCssClass: i,
            tags: e.sort(),
            tokenSeparators: [",", ";"],
            minimumInputLength: 2,
            formatInputTooShort: function (t, e) {
                var i = e - t.length;
                return I18n.t("frontend.defaults.views.x_editable.tags.search.remaining_chars", {count: i})
            },
            selectOnBlur: !0
        })
    }

    function u() {
        $(".field-editable").find(".editable-combodate").editable({
            type: "combodate",
            success: P,
            combodate: {firstItem: "name", minuteStep: 5, maxYear: (new Date).getFullYear(), smartDays: !0}
        })
    }

    function f() {
        $(".field-editable").find(".editable-date").editable({
            type: "combodate",
            display: h,
            combodate: {minYear: (new Date).getFullYear() - 120, maxYear: (new Date).getFullYear()}
        })
    }

    function p(t) {
        var e = $(this), i = e.closest(".field").siblings(".hidden").clone().removeClass("hidden");
        e.empty(), $.isArray(t) || (t = t.toString().split(",")), t.length || e.append(i.find(".field-choice").clone()), $(t).each(function (t, n) {
            choice = i.find(".field-choice").clone(), choice.find(".field-value").html(n), e.append(choice)
        })
    }

    function h(t) {
        if ($(this).empty(), t) {
            var e, i = moment(), n = i.diff(t, "years"), a = i.diff(t, "months"), s = i.diff(t, "weeks"),
                o = i.diff(t, "days");
            e = n > 0 ? "(" + I18n.t("frontend.defaults.datetime.distance_in_words.x_years", {count: n}) + ")" : a >= 3 ? "(" + I18n.t("frontend.defaults.datetime.distance_in_words.x_months", {count: a}) + ")" : s > 0 ? "(" + I18n.t("frontend.defaults.datetime.distance_in_words.x_weeks", {count: s}) + ")" : "(" + I18n.t("frontend.defaults.datetime.distance_in_words.x_days", {count: o}) + ")", $(this).html(t.format("L") + "&nbsp;"), $(this).append($("<span>", {text: e}))
        }
    }

    function m(t) {
        var e = $(this).data("source"), i = parseInt(t), n = "";
        $.each(e, function (e, a) {
            a.id !== i && a.id !== t || (n = a.text)
        }), $(this).html(n)
    }

    function v(t, e) {
        var i, n = t.data("source-attribute"), a = t.data(n), s = a.find(function (t) {
            return t.id == e
        });
        return s && (i = s.text, s.label_text && (i += '<span class="label pull-right">' + s.label_text + "</span>"), s.starred && (i += '<i class="material-icons md-18 pull-right starred">star_rate</i>')), i
    }

    function g(t) {
        $(this).html(v($(this), t))
    }

    function y(t) {
        var e = t || $(".field-editable").not(".information-not-editable"), i = e.find(".field-action");
        b(i), k(i), w(i);
        var n = e.find(".editable");
        x(n), C(n), I(n)
    }

    function b(t) {
        t.filter(".action-edit").off("click").on("click", function (t) {
            t.stopPropagation(), $(this).siblings(".editable").click()
        })
    }

    function k(t) {
        t.filter(".action-save").off("click").on("click", function (t) {
            t.stopPropagation(), $(this).siblings(".editable-container").find(".editable-buttons").find(".editable-submit").click()
        })
    }

    function w(t) {
        t.filter(".action-cancel").off("click").on("click", function (t) {
            t.stopPropagation(), $(this).siblings(".editable-container").find(".editable-buttons").find(".editable-cancel").click()
        })
    }

    function x(t) {
        t.filter(".editable-enum, .editable-update-subscription, .editable-label-enum, .editable-bool").on("click", function (t) {
            t.preventDefault();
            var e = $(this), i = e.data("editable"), n = i.input.$input;
            if (n) {
                var a = n.select2("data"), s = undefined;
                a && (s = a.id), i.input.$input.select2("open"), i.input.$input.on("select2-close", function () {
                    var t = $(this).val();
                    t && s != t ? e.siblings(".editable-container").find(".editable-buttons").find(".editable-submit").click() : e.editable("toggle")
                })
            }
        })
    }

    function C(t) {
        t.filter(".editable-choices").on("click", function (t) {
            t.preventDefault(), $(this).siblings(".editable-container").find("input").focus()
        })
    }

    function _() {
        $(".editable.editable-enum, .editable.editable-bool, .editable.editable-choices").on("click", function (t) {
            t.preventDefault();
            var e = $(this), i = document.querySelectorAll(".field-editable.field-dropdown"), n = undefined;
            n = $(t.target).hasClass("editable-choices") ? i[0] : i[i.length - 1];
            var a = e.siblings(".editable-container").outerWidth(!0);
            $(n).width(a)
        })
    }

    function D() {
        $(".field-editable.information-not-editable .editable").editable("disable")
    }

    function S(t) {
        return A($(this).closest(".field-editable").siblings(".field-editable").find(".editable").add($(this)), t.data.id), {newValue: t.data.attributes[$(this).data("name")]}
    }

    function T(t) {
        return A($(this).closest(".field-editable").siblings(".field-editable").find(".editable").add($(this)), t.data.id), {newValue: t.data.attributes[$(this).data("name")] ? "1" : "0"}
    }

    function P(t) {
        A($(this).closest(".field-editable").siblings(".field-editable").find(".editable").add($(this)), t.data.id)
    }

    function A(t, e) {
        $.each(t, function (t, i) {
            i = $(i);
            var n = i.data("pk");
            n.id = e, i.editable("option", "pk", JSON.stringify(n))
        })
    }

    function I(t) {
        t.on("hidden", function (t) {
            t.preventDefault(), M($(this).closest(".field:not(.field-editable)"))
        })
    }

    function M(t) {
        t.next(".editable-custom-error").remove()
    }

    function E(t, e, i) {
        var n = i || $(this), a = t.responseJSON, s = undefined,
            o = $("<span>", {"class": "editable-custom-error text-danger"}),
            r = n.closest(".field:not(.field-editable)"), l = n.data("name"),
            d = I18n.t("frontend.defaults.errors.message");
        a && (s = a.data.errors), M(r), s && s[l] && $(s[l]).each(function (t, e) {
            if (e) return d = e, !1
        }), o.html(d).insertAfter(r)
    }

    $(document).ready(function () {
        var l = $(".wrapper");
        a(), s(), r(), o(), n(), t(), i(), e(), u(), f(), y(), _(), D(), l.off("enable.nt.text-editables").on("enable.nt.text-editables", function (t, e) {
            a($(e.fieldEditable))
        }), l.off("enable.nt.text-area-editables").on("enable.nt.text-area-editables", function (t, e) {
            o($(e.fieldEditable)), y($(e.fieldEditable))
        }), l.on("enable.nt.enum-editables", function (e, i) {
            t($(i.fieldEditable)), y($(i.fieldEditable))
        })
    }), $.fn.editable.defaults.mode = "inline", $.fn.editable.defaults.emptytext = "", $.fn.editable.defaults.onblur = "submit", $.fn.editable.defaults.ajaxOptions = {type: "PATCH"}, $.fn.editable.defaults.toggle = "click", $.fn.editable.defaults.error = E
}(), Nutrium.templates = Nutrium.templates || {}, Nutrium.templates.elements = Nutrium.templates.elements || {}, $.extend(Nutrium.templates.elements, function () {
    function t(t) {
        var e = t || {}, i = $("<img/>", {"class": "preview-image image-template", src: e.url || ""});
        return i.on("load", function () {
            var t = this.naturalWidth + "x" + this.naturalHeight;
            $(this).data("dimension", t)
        }), i
    }

    function e(t) {
        var e = t || {};
        return $('                                                                                        <a href="' + (e.url || "#") + '" class="link-to-file file-template" target="_blank">         <i class="material-icons md-14">attach_file</i>                                                 ' + (e.name || "") + "                                                                   </a>                                                                                          ")
    }

    return {image: t, file: e}
}()), Nutrium.functions = Nutrium.functions || {}, $.extend(Nutrium.functions, function () {
    function t(t) {
        var e = t.lineHeight, i = t.minNumberOfRows, n = i, a = t.textarea, s = a[0].scrollHeight;
        if (t.shouldRemovePadding) {
            s -= a.outerHeight() - a.height()
        }
        a.val().length && (n = Math.ceil(s / e)), n = Math.max(n, i), a.attr("rows", n)
    }

    return {textAreaAdjust: t}
}()), Nutrium.functions = Nutrium.functions || {}, $.extend(Nutrium.functions, {
    toggleButtonLoading: function () {
        function t(t) {
            var e = $(t).siblings(".button-loading-template.hidden").clone().removeClass("hidden");
            return e.length ? e : i
        }

        function e(e, i) {
            var n = $(e), a = n.parent().find('button, input[type="submit"]');
            if (i) i = "boolean" == typeof i ? n.data("button-text") : i, n.html(i), a.filter("button").removeAttr("disabled"), a.filter('input[type="submit"]').removeClass("disabled"); else {
                a.filter("button").attr("disabled", "disabled"), a.filter('input[type="submit"]').addClass("disabled"), n.data("button-text", n.html());
                var s = t(n);
                n.is("input") ? n.replaceWith($('<div class="' + n.attr("class") + '"></div>').append(s)) : n.html(s)
            }
        }

        var i = $('<div class="la-ball-fall sweetalert-loading"><div></div><div></div><div></div></div>');
        return e
    }()
}), Nutrium.functions = Nutrium.functions || {}, $.extend(Nutrium.functions, {
    enableUploadedFilePreview: function () {
        function t(t) {
            var n = $(t.input);
            n.on("change", function (a) {
                var s = $(a.currentTarget), o = s[0].files[0], r = new FileReader;
                if (r.onload = function (e) {
                        var a = URL.createObjectURL(o);
                        n.siblings(".image-template, .file-template").remove(), o.type.match("image.*") && !t.imageAsAttachment ? Nutrium.templates.elements.image({url: a}).insertAfter(n) : Nutrium.templates.elements.file({
                            name: o.name,
                            url: a
                        }).insertAfter(n), t.fileReaderLoaded && t.fileReaderLoaded(o), t.imageLoaded && i(e, t.imageLoaded)
                    }, o && (r.readAsDataURL(o), t.errorElement)) {
                    t.errorElement.addClass("hidden");
                    o.size / Math.pow(2, 20) > 5 && e(t.errorElement)
                }
                t.callback(o), r = null
            })
        }

        function e(t) {
            t.text(I18n.t("frontend.defaults.errors.messages.file_size_is_less_than", {count: "5 MB"})), t.removeClass("hidden")
        }

        function i(t, e) {
            var i = new Image;
            i.src = t.target.result, i.onload = function () {
                var t = this.naturalWidth + "x" + this.naturalHeight;
                e({element: $(this), dimension: t})
            }, i = null
        }

        return t
    }()
}), function (t) {
    "function" == typeof define && define.amd ? define(["jquery"], t) : t("object" == typeof exports ? require("jquery") : jQuery)
}(function (t) {
    var e, i = navigator.userAgent, n = /iphone/i.test(i), a = /chrome/i.test(i), s = /android/i.test(i);
    t.mask = {
        definitions: {9: "[0-9]", a: "[A-Za-z]", "*": "[A-Za-z0-9]"},
        autoclear: !0,
        dataName: "rawMaskFn",
        placeholder: "_"
    }, t.fn.extend({
        caret: function (t, e) {
            var i;
            if (0 !== this.length && !this.is(":hidden")) return "number" == typeof t ? (e = "number" == typeof e ? e : t, this.each(function () {
                this.setSelectionRange ? this.setSelectionRange(t, e) : this.createTextRange && (i = this.createTextRange(), i.collapse(!0), i.moveEnd("character", e), i.moveStart("character", t), i.select())
            })) : (this[0].setSelectionRange ? (t = this[0].selectionStart, e = this[0].selectionEnd) : document.selection && document.selection.createRange && (i = document.selection.createRange(), t = 0 - i.duplicate().moveStart("character", -1e5), e = t + i.text.length), {
                begin: t,
                end: e
            })
        }, unmask: function () {
            return this.trigger("unmask")
        }, mask: function (i, o) {
            var r, l, d, c, u, f, p, h;
            if (!i && this.length > 0) {
                r = t(this[0]);
                var m = r.data(t.mask.dataName);
                return m ? m() : void 0
            }
            return o = t.extend({
                autoclear: t.mask.autoclear,
                placeholder: t.mask.placeholder,
                completed: null
            }, o), l = t.mask.definitions, d = [], c = p = i.length, u = null, t.each(i.split(""), function (t, e) {
                "?" == e ? (p--, c = t) : l[e] ? (d.push(new RegExp(l[e])), null === u && (u = d.length - 1), c > t && (f = d.length - 1)) : d.push(null)
            }), this.trigger("unmask").each(function () {
                function r() {
                    if (o.completed) {
                        for (var t = u; f >= t; t++) if (d[t] && T[t] === m(t)) return;
                        o.completed.call(S)
                    }
                }

                function m(t) {
                    return o.placeholder.charAt(t < o.placeholder.length ? t : 0)
                }

                function v(t) {
                    for (; ++t < p && !d[t];) ;
                    return t
                }

                function g(t) {
                    for (; --t >= 0 && !d[t];) ;
                    return t
                }

                function y(t, e) {
                    var i, n;
                    if (!(0 > t)) {
                        for (i = t, n = v(e); p > i; i++) if (d[i]) {
                            if (!(p > n && d[i].test(T[n]))) break;
                            T[i] = T[n], T[n] = m(n), n = v(n)
                        }
                        $(), S.caret(Math.max(u, t))
                    }
                }

                function b(t) {
                    var e, i, n, a;
                    for (e = t, i = m(t); p > e; e++) if (d[e]) {
                        if (n = v(e), a = T[e], T[e] = i, !(p > n && d[n].test(a))) break;
                        i = a
                    }
                }

                function k() {
                    var t = S.val(), e = S.caret();
                    if (h && h.length && h.length > t.length) {
                        for (D(!0); e.begin > 0 && !d[e.begin - 1];) e.begin--;
                        if (0 === e.begin) for (; e.begin < u && !d[e.begin];) e.begin++;
                        S.caret(e.begin, e.begin)
                    } else {
                        for (D(!0); e.begin < p && !d[e.begin];) e.begin++;
                        S.caret(e.begin, e.begin)
                    }
                    r()
                }

                function w() {
                    D(), S.val() != A && S.change()
                }

                function x(t) {
                    if (!S.prop("readonly")) {
                        var e, i, a, s = t.which || t.keyCode;
                        h = S.val(), 8 === s || 46 === s || n && 127 === s ? (e = S.caret(), i = e.begin, a = e.end, a - i == 0 && (i = 46 !== s ? g(i) : a = v(i - 1), a = 46 === s ? v(a) : a), _(i, a), y(i, a - 1), t.preventDefault()) : 13 === s ? w.call(this, t) : 27 === s && (S.val(A), S.caret(0, D()), t.preventDefault())
                    }
                }

                function C(e) {
                    if (!S.prop("readonly")) {
                        var i, n, a, o = e.which || e.keyCode, l = S.caret();
                        if (!(e.ctrlKey || e.altKey || e.metaKey || 32 > o) && o && 13 !== o) {
                            if (l.end - l.begin != 0 && (_(l.begin, l.end), y(l.begin, l.end - 1)), i = v(l.begin - 1), p > i && (n = String.fromCharCode(o), d[i].test(n))) {
                                if (b(i), T[i] = n, $(), a = v(i), s) {
                                    var c = function () {
                                        t.proxy(t.fn.caret, S, a)()
                                    };
                                    setTimeout(c, 0)
                                } else S.caret(a);
                                l.begin <= f && r()
                            }
                            e.preventDefault()
                        }
                    }
                }

                function _(t, e) {
                    var i;
                    for (i = t; e > i && p > i; i++) d[i] && (T[i] = m(i))
                }

                function $() {
                    S.val(T.join(""))
                }

                function D(t) {
                    var e, i, n, a = S.val(), s = -1;
                    for (e = 0, n = 0; p > e; e++) if (d[e]) {
                        for (T[e] = m(e); n++ < a.length;) if (i = a.charAt(n - 1), d[e].test(i)) {
                            T[e] = i, s = e;
                            break
                        }
                        if (n > a.length) {
                            _(e + 1, p);
                            break
                        }
                    } else T[e] === a.charAt(n) && n++, c > e && (s = e);
                    return t ? $() : c > s + 1 ? o.autoclear || T.join("") === P ? (S.val() && S.val(""), _(0, p)) : $() : ($(), S.val(S.val().substring(0, s + 1))), c ? e : u
                }

                var S = t(this), T = t.map(i.split(""), function (t, e) {
                    return "?" != t ? l[t] ? m(e) : t : void 0
                }), P = T.join(""), A = S.val();
                S.data(t.mask.dataName, function () {
                    return t.map(T, function (t, e) {
                        return d[e] && t != m(e) ? t : null
                    }).join("")
                }), S.one("unmask", function () {
                    S.off(".mask").removeData(t.mask.dataName)
                }).on("focus.mask", function () {
                    if (!S.prop("readonly")) {
                        clearTimeout(e);
                        var t;
                        A = S.val(), t = D(), e = setTimeout(function () {
                            S.get(0) === document.activeElement && ($(), t == i.replace("?", "").length ? S.caret(0, t) : S.caret(t))
                        }, 10)
                    }
                }).on("blur.mask", w).on("keydown.mask", x).on("keypress.mask", C).on("input.mask paste.mask", function () {
                    S.prop("readonly") || setTimeout(function () {
                        var t = D(!0);
                        S.caret(t), r()
                    }, 0)
                }), a && s && S.off("input.mask").on("input.mask", k), D()
            })
        }
    })
}), function () {
    function t() {
        $("#contact-info-phone-number").mask("+" + $("#contact-info-country-of-residence").find(":selected").data("dialing-code") + " *?" + Array(32).join("*"), {placeholder: " "})
    }

    function e() {
        $("#contact-info-country-of-residence").on("change", function () {
            $("#contact-info-phone-number").val(""), t()
        })
    }

    !function (i) {
        "use strict";
        delete i.mask.definitions[9], i.mask.definitions.d = "[0-9]";
        var n = function (t) {
            this.init("contactInfo", t, n.defaults)
        };
        i.fn.editableutils.inherit(n, i.fn.editabletypes.abstractinput), i.extend(n.prototype, {
            render: function () {
                this.$input = this.$tpl.find("input")
            }, value2html: function (t) {
                i("#country-of-residence").text(t.country_of_residence.name), i("#address").text(t.address), i("#zip-code").text(t.zip_code), i("#phone-number").text(t.phone_number.international)
            }, html2value: function () {
                return null
            }, value2str: function (t) {
                var e = "";
                return t && (e = t.country_of_residence.id + t.address + t.zip_code + t.phone_number.international), e
            }, str2value: function (t) {
                return t
            }, value2input: function (n) {
                i("#contact-info-country-of-residence").select2({
                    formatNoMatches: function () {
                        return I18n.t("frontend.defaults.errors.no_results")
                    }
                }), n && (i("#contact-info-country-of-residence").select2("val", n.country_of_residence.id), t(), i("#contact-info-address").val(n.address), i("#contact-info-zip-code").val(n.zip_code), i("#contact-info-phone-number").val(n.phone_number.international)), e()
            }, input2value: function () {
                return {
                    country_of_residence: {id: i("#contact-info-country-of-residence").select2("val")},
                    address: i("#contact-info-address").val(),
                    zip_code: i("#contact-info-zip-code").val(),
                    phone_number: {international: i("#contact-info-phone-number").val()}
                }
            }, activate: function () {
                i("#" + i(".editable-edit").data("focus")).focus()
            }, autosubmit: function () {
                this.$input.keydown(function (t) {
                    13 === t.which && i(this).closest("form").submit()
                })
            }
        }), i.fn.editabletypes.contactInfo = n;
        var a = function () {
            var t = i("<div/>").append(i(".editable-multiple-fields").clone(!0, !0));
            return t.find(".editable-remove-on-click").remove(), t.find(".editable-show").removeClass("editable-show"), t.find(".editable-edit").removeClass("editable-edit"), t.find(".editable-visible-on-click").removeClass("hidden"), t.html()
        };
        i(function () {
            n.defaults = i.extend({}, i.fn.editabletypes.abstractinput.defaults, {tpl: a(), inputclass: ""})
        })
    }(window.jQuery)
}(), function () {
    function t() {
        var t = $(".widget-patient-profile"), e = $(".select2-tags"), s = e.data("options"), o = e.data("tags"),
            r = e.data("patient-id");
        e.select2({
            createSearchChoice: function (t, i) {
                if (0 === $(i).filter(function () {
                        return 0 === this.text.toLowerCase().localeCompare(t.toLowerCase())
                    }).length) {
                    var i = e.select2("data"), n = t.trim();
                    for (var a in i) i[a].text.toLowerCase() == t.trim().toLowerCase() && (n = i[a].id);
                    return {id: n, text: t.trim()}
                }
            },
            initSelection: function (t, e) {
                e(o)
            },
            maximumInputLength: 50,
            data: s,
            tags: !0,
            dropdownCssClass: "field-editable field-dropdown no-margin-left",
            dropdownAutoWidth: !1,
            tokenSeparators: [","],
            formatNoMatches: function () {
                return I18n.t("frontend.defaults.errors.no_results")
            }
        }).on("change", function (t) {
            if (t.added) {
                var s;
                s = t.added.id != t.added.text ? {
                    tag_id: t.added.id,
                    name: t.added.text
                } : {name: t.added.text}, a(), InternalAPI.patients.tagged_patients.create(r, s).done(function (n) {
                    var a = e.select2("data");
                    for (var s in a) a[s].text == t.added.text && (a[s].id = parseInt(n.data.id, 10));
                    e.select2("data", a), i()
                }).fail(function () {
                    n(e)
                })
            } else t.removed && (a(), InternalAPI.patients.tagged_patients.destroy(r, t.removed.id).fail(function () {
                n(e)
            }), i())
        }).on("select2-focus", function () {
            var e = t.find(".select2-container");
            e.find(".new-tag-placeholder").remove(), e.find(".select2-search-field").removeClass("hidden")
        }).on("select2-blur", function () {
            t.find(".select2-container").find(".select2-search-field").addClass("hidden"), i()
        }).on("select2-close", function () {
            t.find(".select2-container").find(".select2-input").blur()
        }), e.select2("val", []), t.find(".select2-container").find(".select2-search-field").addClass("hidden"), i()
    }

    function e() {
        var t = $(".widget-patient-profile"), e = $(".select2-tags");
        t.find(".select2-choices").on("click", ".new-tag-placeholder", function () {
            t.find(".select2-container").find(".select2-search-field").removeClass("hidden"), e.select2("focus"), e.select2("open")
        })
    }

    function i() {
        var t = $(".widget-patient-profile"),
            e = $('<li class="select2-search-choice new-tag-placeholder">       <div>' + I18n.t("frontend.patients.tags.new") + '</div>                               <a class="select2-search-choice-close"></a></li>');
        t.find(".select2-choices").find(".new-tag-placeholder").remove(), t.find(".select2-choices").append(e)
    }

    function n(t) {
        var e = $("<div/>", {"class": "patient-tags-error-message text-danger"}),
            i = I18n.t("frontend.defaults.errors.message");
        e.html(i).insertAfter(t)
    }

    function a() {
        $(".widget-patient-profile").find(".patient-tags-error-message").remove()
    }

    function s() {
        $(".widget-profile").find("img, .update-photo").off("click").on("click", function (t) {
            t.preventDefault(), $("#photo-file-input").click()
        }), $("#photo-file-input").change(function () {
            $(this).parent("form").submit()
        })
    }

    function o() {
        $(".widget-profile").find(".profile-informations").find(".editable").editable("option", "clear", !1)
    }

    function r() {
        $(".widget-profile").find(".profile-informations").find(".action-edit").on("click", function (t) {
            t.stopPropagation(), $(this).siblings(".editable").click()
        })
    }

    function l() {
        $("#contact-info").editable({
            toggle: "manual", success: function (t) {
                return {newValue: t.data.attributes.contact_info}
            }, error: function (t) {
                var e = t.responseJSON.data.errors, i = $("<span>", {"class": "editable-custom-error text-danger"}),
                    n = $(this).siblings(".editable-container").find("input");
                $(".editable-edit").removeData("focus");
                for (var a = 0; a < n.length; a++) {
                    var s = n.eq(a), o = s.attr("name"), r = s.closest(".field:not(.field-editable)");
                    r.next(".editable-custom-error").remove(), e[o] && i.clone().text(e[o].join(" ")).insertAfter(r)
                }
            }
        }).on("shown", function () {
            var t = $(this).closest(".editable-multiple-fields");
            t.find(".editable-show").addClass("hidden"), t.find(".editable-edit").removeClass("hidden"), $("#contact-info-country-of-residence").data("select2").dropdown.addClass("field-editable field-dropdown"), d($(this).siblings(".editable-container").find(".editable-multiple-fields"))
        }).on("hidden", function () {
            var t = $(this).closest(".editable-multiple-fields");
            t.find(".editable-show").removeClass("hidden"), t.find(".editable-edit").addClass("hidden")
        })
    }

    function d(t) {
        var e = t.find(".field-action");
        u(e), f(e), p(t), h(t), m(t), v(t)
    }

    function c() {
        $(".editable-multiple-fields").find(".field").filter(".field-select, .field-input, .field-textarea").off("click").on("click", function (t) {
            t.stopPropagation(), $(this).siblings(".field-editable").find(".editable").length && ($(this).closest(".editable-multiple-fields").find(".editable-edit").data("focus", "contact-info-" + $(this).find(".field-content").attr("id")), $("#contact-info").editable("show"))
        })
    }

    function u(t) {
        t.filter(".action-save").off("click").on("click", function (t) {
            t.stopPropagation(), $(this).closest(".editable-input").siblings(".editable-buttons").find(".editable-submit").click()
        })
    }

    function f(t) {
        t.filter(".action-cancel").off("click").on("click", function (t) {
            t.stopPropagation(), $(this).closest(".editable-input").siblings(".editable-buttons").find(".editable-cancel").click()
        })
    }

    function p(t) {
        $("#contact-info-country-of-residence").on("focus", function (e) {
            e.preventDefault(), t.find(".field").filter(".field-select").click()
        })
    }

    function h(t) {
        t.find(".field").filter(".field-select").on("click", function (t) {
            t.preventDefault(), $(this).find(".select2-container").select2("open")
        })
    }

    function m(t) {
        t.find(".field").filter(".field-select").find("select").on("select2-open", function (t) {
            t.preventDefault();
            var e = $(this), i = document.querySelectorAll(".field-editable.field-dropdown"),
                n = e.closest(".field-content").outerWidth(!0);
            $(i[i.length - 1]).width(n)
        })
    }

    function v(t) {
        t.find(".field").filter(".field-select").find("select").on("select2-open select2-close", function () {
            var t = $(this).parent().siblings(".field-action"), e = t.filter(".hidden"), i = t.not(".hidden");
            e.removeClass("hidden"), i.addClass("hidden")
        })
    }

    $(document).ready(function () {
        s(), l(), c(), o(), r(), t(), e()
    })
}(), function () {
    function t() {
        var t = $(".patient-default-conversations-enabled-field"),
            r = $(".patient-default-weight-registration-enabled-field"),
            l = $(".patient-default-mobile-access-enabled-field"), d = $(".conversations-enabled-field"),
            c = $(".weight-registration-enabled-field"), u = $(".mobile-access-enabled-field");
        e(t), i(t), e(d), i(d), n(r), a(r), n(c), a(c), s(l), o(l), s(u), o(u)
    }

    function e(t) {
        t.find(".enable-conversations-for-all-patients").on("click", function () {
            swal({
                title: I18n.t("frontend.professional_settings.follow_up_features.conversations_enabled.enable_conversations_for_all_patients.modal.title"),
                text: I18n.t("frontend.professional_settings.follow_up_features.conversations_enabled.enable_conversations_for_all_patients.modal.description"),
                showCancelButton: !0,
                confirmButtonColor: Nutrium.colors.green,
                confirmButtonText: I18n.t("frontend.defaults.views.words.activate"),
                cancelButtonText: I18n.t("frontend.defaults.views.words.cancel"),
                closeOnConfirm: !1,
                showLoaderOnConfirm: !0
            }, function () {
                InternalAPI.professional_settings.enable_conversations_for_all_patients().done(function () {
                    t.hasClass("conversations-enabled-field") && t.find(".editable").editable("setValue", !0), swal(I18n.t("frontend.professional_settings.follow_up_features.conversations_enabled.enable_conversations_for_all_patients.modal.success"), "", "success")
                })
            })
        })
    }

    function i(t) {
        t.find(".disable-conversations-for-all-patients").on("click", function () {
            swal({
                title: I18n.t("frontend.professional_settings.follow_up_features.conversations_enabled.disable_conversations_for_all_patients.modal.title"),
                text: I18n.t("frontend.professional_settings.follow_up_features.conversations_enabled.disable_conversations_for_all_patients.modal.description"),
                showCancelButton: !0,
                confirmButtonColor: Nutrium.colors.red,
                confirmButtonText: I18n.t("frontend.defaults.views.words.deactivate"),
                cancelButtonText: I18n.t("frontend.defaults.views.words.cancel"),
                closeOnConfirm: !1,
                showLoaderOnConfirm: !0
            }, function () {
                InternalAPI.professional_settings.disable_conversations_for_all_patients().done(function () {
                    t.hasClass("conversations-enabled-field") && t.find(".editable").editable("setValue", !1), swal(I18n.t("frontend.professional_settings.follow_up_features.conversations_enabled.disable_conversations_for_all_patients.modal.success"), "", "success")
                })
            })
        })
    }

    function n(t) {
        t.find(".enable-weight-registration-for-all-patients").on("click", function () {
            swal({
                title: I18n.t("frontend.professional_settings.follow_up_features.weight_registration_enabled.enable_weight_registration_for_all_patients.modal.title"),
                text: I18n.t("frontend.professional_settings.follow_up_features.weight_registration_enabled.enable_weight_registration_for_all_patients.modal.description"),
                showCancelButton: !0,
                confirmButtonColor: Nutrium.colors.green,
                confirmButtonText: I18n.t("frontend.defaults.views.words.activate"),
                cancelButtonText: I18n.t("frontend.defaults.views.words.cancel"),
                closeOnConfirm: !1,
                showLoaderOnConfirm: !0
            }, function () {
                InternalAPI.professional_settings.enable_weight_registration_for_all_patients().done(function () {
                    t.hasClass("weight-registration-enabled-field") && t.find(".editable").editable("setValue", !0), swal(I18n.t("frontend.professional_settings.follow_up_features.weight_registration_enabled.enable_weight_registration_for_all_patients.modal.success"), "", "success")
                })
            })
        })
    }

    function a(t) {
        t.find(".disable-weight-registration-for-all-patients").on("click", function () {
            swal({
                title: I18n.t("frontend.professional_settings.follow_up_features.weight_registration_enabled.disable_weight_registration_for_all_patients.modal.title"),
                text: I18n.t("frontend.professional_settings.follow_up_features.weight_registration_enabled.disable_weight_registration_for_all_patients.modal.description"),
                showCancelButton: !0,
                confirmButtonColor: Nutrium.colors.red,
                confirmButtonText: I18n.t("frontend.defaults.views.words.deactivate"),
                cancelButtonText: I18n.t("frontend.defaults.views.words.cancel"),
                closeOnConfirm: !1,
                showLoaderOnConfirm: !0
            }, function () {
                InternalAPI.professional_settings.disable_weight_registration_for_all_patients().done(function () {
                    t.hasClass("weight-registration-enabled-field") && t.find(".editable").editable("setValue", !1), swal(I18n.t("frontend.professional_settings.follow_up_features.weight_registration_enabled.disable_weight_registration_for_all_patients.modal.success"), "", "success")
                })
            })
        })
    }

    function s(t) {
        t.find(".enable-mobile-access-for-all-patients").on("click", function () {
            swal({
                title: I18n.t("frontend.professionals.patients.preferences.mobile_access.enable_mobile_access_for_all_patients.modal.title"),
                text: I18n.t("frontend.professionals.patients.preferences.mobile_access.enable_mobile_access_for_all_patients.modal.description"),
                showCancelButton: !0,
                confirmButtonColor: Nutrium.colors.green,
                confirmButtonText: I18n.t("frontend.defaults.views.words.activate"),
                cancelButtonText: I18n.t("frontend.defaults.views.words.cancel"),
                closeOnConfirm: !1,
                showLoaderOnConfirm: !0
            }, function () {
                InternalAPI.professional_settings.enable_mobile_access_for_all_patients().done(function () {
                    t.hasClass("mobile-access-enabled-field") && t.find(".editable").editable("setValue", !0), swal(I18n.t("frontend.professionals.patients.preferences.mobile_access.enable_mobile_access_for_all_patients.modal.success"), "", "success")
                })
            })
        })
    }

    function o(t) {
        t.find(".disable-mobile-access-for-all-patients").on("click", function () {
            swal({
                title: I18n.t("frontend.professionals.patients.preferences.mobile_access.disable_mobile_access_for_all_patients.modal.title"),
                text: I18n.t("frontend.professionals.patients.preferences.mobile_access.disable_mobile_access_for_all_patients.modal.description"),
                showCancelButton: !0,
                confirmButtonColor: Nutrium.colors.red,
                confirmButtonText: I18n.t("frontend.defaults.views.words.deactivate"),
                cancelButtonText: I18n.t("frontend.defaults.views.words.cancel"),
                closeOnConfirm: !1,
                showLoaderOnConfirm: !0
            }, function () {
                InternalAPI.professional_settings.disable_mobile_access_for_all_patients().done(function () {
                    t.hasClass("mobile-access-enabled-field") && t.find(".editable").editable("setValue", !1), swal(I18n.t("frontend.professionals.patients.preferences.mobile_access.disable_mobile_access_for_all_patients.modal.success"), "", "success")
                })
            })
        })
    }

    $(document).ready(function () {
        t()
    })
}(), function () {
    function t() {
        $(".widget-patient-profile").on("click", '[data-target="#manage-appointment-modal"]', function () {
            $("#manage-appointment-modal").trigger("nt.appointment.modal.prepare.remote.createWithPatient")
        })
    }

    function e() {
        $(".widget-patient-profile").on("click", '[data-toggle="delete-confirmation"]', function () {
            var t = $(this).find("a");
            swal({
                title: I18n.t("frontend.patients.delete.confirmation.title"),
                text: I18n.t("frontend.patients.delete.confirmation.description"),
                showCancelButton: !0,
                confirmButtonColor: Nutrium.colors.red,
                confirmButtonText: I18n.t("frontend.defaults.options.yes"),
                cancelButtonText: I18n.t("frontend.defaults.options.no"),
                closeOnConfirm: !1,
                showLoaderOnConfirm: !0
            }, function () {
                t.click()
            })
        })
    }

    $(document).ready(function () {
        t(), e(), Nutrium.libs.bs.enableTooltips({container: ".widget-profile-information"})
    })
}(), function (t, e) {
    "function" == typeof define && define.amd ? define(["jquery"], e) : e("object" == typeof exports ? require("jquery") : t.jQuery)
}(this, function (t) {
    "use strict";
    t.fn.typeWatch = function (e) {
        function i(e, i) {
            var n = t(e.el).val();
            (n.length >= s.captureLength && n.toUpperCase() != e.text || i && n.length >= s.captureLength || 0 == n.length && e.text) && (e.text = n.toUpperCase(), e.cb.call(e.el, n))
        }

        function n(e) {
            var n = e.type.toUpperCase();
            if (t.inArray(n, s.inputTypes) >= 0) {
                var a = {timer: null, text: t(e).val().toUpperCase(), cb: s.callback, el: e, wait: s.wait};
                s.highlight && t(e).focus(function () {
                    this.select()
                });
                var o = function (e) {
                    var n = a.wait, o = !1, r = this.type.toUpperCase();
                    "undefined" != typeof e.keyCode && 13 == e.keyCode && "TEXTAREA" != r && t.inArray(r, s.inputTypes) >= 0 && (n = 1, o = !0);
                    var l = function () {
                        i(a, o)
                    };
                    clearTimeout(a.timer), a.timer = setTimeout(l, n)
                };
                t(e).on("keydown paste cut input change", o)
            }
        }

        var a = ["TEXT", "TEXTAREA", "PASSWORD", "TEL", "SEARCH", "URL", "EMAIL", "DATETIME", "DATE", "MONTH", "WEEK", "TIME", "DATETIME-LOCAL", "NUMBER", "RANGE"],
            s = t.extend({
                wait: 750, callback: function () {
                }, highlight: !0, captureLength: 2, inputTypes: a
            }, e);
        return this.each(function () {
            n(this)
        })
    }
});
var _createClass = function () {
    function t(t, e) {
        for (var i = 0; i < e.length; i++) {
            var n = e[i];
            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n)
        }
    }

    return function (e, i, n) {
        return i && t(e.prototype, i), n && t(e, n), e
    }
}(), RemoteSearch = function () {
    function t(e, i, n, a) {
        _classCallCheck(this, t), this.form = e, this.resultsContainer = i, this.partialView = n, this.onSuccessFunction = a || function () {
        }, this.typeWatchOptions = this._loadDefaultTypeWatchOptions()
    }

    return _createClass(t, [{
        key: "watch", value: function () {
            var t = this;
            t._loadFilters(), t._loadSearchResults(), t._watchSearch(), t._watchFilters()
        }
    }, {
        key: "_watchFilters", value: function () {
            var t = this;
            $(t.form).find(".search-filter").on("change", function () {
                t._loadSearchResults(), store.enabled && $(this).is("[data-store-key]") && store.set($(this).data("store-key"), $(this).val())
            })
        }
    }, {
        key: "_loadFilters", value: function () {
            var t = this;
            $(t.form).find(".search-filter").each(function (t, e) {
                store.enabled && $(e).is("[data-store-key]") && $(e).val(store.get($(e).data("store-key")))
            })
        }
    }, {
        key: "_watchSearch", value: function () {
            var t = this;
            $(t.form).find("[name='search[query]']").typeWatch(t.typeWatchOptions), $(t.form).submit(function (t) {
                t.preventDefault()
            })
        }
    }, {
        key: "_loadDefaultTypeWatchOptions", value: function () {
            var t = this;
            return {
                callback: function () {
                    t._loadSearchResults()
                }, captureLength: 0, wait: 500
            }
        }
    }, {
        key: "_updatePagination", value: function () {
            var t = this, e = this;
            $(e.resultsContainer).find(".pagination").find("a").off("click").on("click", function (i) {
                i.preventDefault(), RemotePartials.get($(i.target).closest("a").attr("href"), e._updatePagination.bind(t)).done(e.onSuccessFunction)
            })
        }
    }, {
        key: "_loadSearchResults", value: function () {
            var t = this, e = $(t.form);
            RemotePartials.get({
                url: e.attr("action"),
                container: t.resultsContainer,
                partial: t.partialView,
                params: e.serializeArray(),
                success: t._updatePagination.bind(this)
            }).done(t.onSuccessFunction)
        }
    }]), t
}();
!function () {
    function t(t) {
        return t && t.resultsContainer ? t.resultsContainer : ".patients-index-results"
    }

    function e(t) {
        return t && t.form ? t.form : ".patient-index-form"
    }

    function i(t) {
        return t && t.partialView ? t.partialView : "patients/index/search/results"
    }

    function n(e) {
        var i = $(".search-results").filter(t(e));
        $("#manage-appointment-modal").is(":visible") ? $("#manage-appointment-modal").trigger("nt.appointment.modal.enableCreatePatient") : $(t(e)).find("a.new-patient").off("click").on("click", function (t) {
            t.preventDefault(), $("#new-patient-modal").modal("show")
        }), i.trigger("nt.patients.search.index.loaded"), i.find(".patient-card").find(".status").tooltip()
    }

    $(document).ready(function () {
        $(".wrapper-content").on("nt.patients.search.enable", function (a, s) {
            var o = e(s), r = t(s), l = i(s), d = function () {
                n(s)
            };
            $(r).find(".search-result").length || new RemoteSearch(o, r, l, d).watch()
        })
    })
}(), Nutrium.templates = Nutrium.templates || {}, Nutrium.templates.loading = Nutrium.templates.loading || {}, $.extend(Nutrium.templates.loading, function () {
    function t() {
        return $('<div class="sk-wave">              <div class="sk-rect sk-rect1"></div>       <div class="sk-rect sk-rect2"></div>       <div class="sk-rect sk-rect3"></div>       <div class="sk-rect sk-rect4"></div>       <div class="sk-rect sk-rect5"></div>     </div>')
    }

    function e() {
        return $("<i/>", {"class": "fa fa-spinner fa-pulse"})
    }

    function i() {
        return $('                          <div class="loading-dots">          <div class="dot"></div>           <div class="dot"></div>           <div class="dot"></div>         </div>                          ')
    }

    function n() {
        return $('                                         <div class="modal-loading-wave display-flex">                       <button class="close" data-dismiss="modal" type="button">           <span aria-hidden="true" style="color: black;">\xd7</span>           <span class="sr-only">Fechar</span>                             </button>                                                       </div>                                                          ').append(t())
    }

    return {wave: t, faSpinner: e, dots: i, modalLoadingWave: n}
}()), function () {
    function t() {
        var t = $("#manage-appointment-modal");
        t.find(".wizard").find(".step").off("click").on("click", function (e) {
            e.preventDefault();
            var i = $(this).data("target-step");
            $(this).parents(".steps").find(".current").toggleClass("current disabled"), $(this).toggleClass("current disabled"), t.find(".step-content, .step-actions").addClass("hidden").filter(".step" + i + "-content, .step" + i + "-actions").removeClass("hidden")
        })
    }

    function e() {
        $("#manage-appointment-modal").find(".wizard").find(".step").off("click")
    }

    function i() {
        var t = $('[name="appointment[begin_date]"]'), e = $('[name="appointment[end_date]"]');
        $([t, e]).each(function (t, e) {
            e.val(moment(e.val(), moment.ISO_8601).format("L LT")), e.datetimepicker({
                sideBySide: !0,
                locale: moment.locale(),
                format: "L LT"
            })
        });
        var i = t.data("DateTimePicker"), n = e.data("DateTimePicker");
        t.on("dp.change", function (t) {
            n.minDate(t.date), n.date(t.date.add("30", "minutes")), $(t.target).change().focusout()
        }), n.minDate(i.date()), e.on("dp.change", function (t) {
            $(t.target).change().focusout()
        })
    }

    function n() {
        $("#manage-appointment-modal").find(".wizard").addClass("hidden")
    }

    function a() {
        $("#manage-appointment-modal").find(".wizard").removeClass("hidden")
    }

    function s() {
        $("#manage-appointment-modal").find(".wizard").find(".target-patient-select-step").click()
    }

    function o() {
        var t = $("#manage-appointment-modal");
        t.find(".step2-actions").find(".action-create").removeClass("disabled"), t.find(".wizard").find(".target-confirm-step").click()
    }

    function r() {
        var t = $("#manage-appointment-modal");
        t.find(".action-update, .action-delete, .title-edit, .description-edit").addClass("hidden"), t.find(".action-create, .title-new, .description-new").removeClass("hidden")
    }

    function l() {
        var t = $("#manage-appointment-modal");
        t.find(".action-create, .action-delete, .title-new, .description-new").addClass("hidden"), t.find(".action-update, .title-edit, .description-edit").removeClass("hidden")
    }

    function d() {
        $("#manage-appointment-modal").find(".action-delete").removeClass("hidden")
    }

    function c(t, e) {
        var n = $("#manage-appointment-form-container");
        n.html(Nutrium.templates.loading.wave()), RemotePartials.get({
            url: t,
            container: "#manage-appointment-form-container",
            partial: "appointments/manage/form",
            params: e
        }).done(function () {
            i(), n.find(".patient-card").find(".status").tooltip()
        })
    }

    function u() {
        var e = $("#manage-appointment-modal");
        e.find(".patients-index-results").find(".patient-card").off("click").on("click", function (i) {
            i.preventDefault();
            var n = [{name: "patient_id", value: $(this).data("patient-id")}, {
                name: "begin_date",
                value: e.data("begin-date")
            }, {name: "end_date", value: e.data("end-date")}];
            c(e.data("new-appointment-url"), n), t(), o()
        })
    }

    function f() {
        var t = $("#manage-appointment-modal"), e = [];
        t.data("begin-date") && t.data("end-date") && (e = [{
            name: "begin_date",
            value: t.data("begin-date")
        }, {name: "end_date", value: t.data("end-date")}]), c(t.data("new-patient-appointment-url"), e)
    }

    function p() {
        var t = $("#manage-appointment-modal");
        t.find(".step-actions").find(".action-create").off("click").on("click", function () {
            var e = t.data("create-appointment-url"), i = new CloneForm($("form#manage-appointment-form"));
            t.modal("hide"), RemotePartials.post({url: e, params: i.toIso8601().serializeArray()}).done(function () {
                y(), $("#wrapper").trigger("created.nt.appointment")
            }).fail(function () {
                b(function () {
                    t.modal("show")
                })
            })
        })
    }

    function h() {
        var t = $("#manage-appointment-modal");
        t.find(".step-actions").find(".action-update").off("click").on("click", function () {
            var e = t.data("update-appointment-url"), i = new CloneForm($("form#manage-appointment-form"));
            t.modal("hide"), RemotePartials.patch({url: e, params: i.toIso8601().serializeArray()}).done(function () {
                y(), $("#wrapper").trigger("updated.nt.appointment")
            }).fail(function () {
                b(function () {
                    t.modal("show")
                })
            })
        })
    }

    function m() {
        var t = $("#manage-appointment-modal");
        t.find(".step-actions").find(".action-delete").off("click").on("click", function () {
            var e = t.data("update-appointment-url") + "/cancel", i = t.data("calendar-event-id");
            $("#appointments-calendar").fullCalendar("removeEvents", i), t.modal("hide"), RemotePartials.patch({url: e}).done(function () {
                g(), $("#wrapper").trigger("canceled.nt.appointment")
            }).fail(function () {
                $("#appointments-calendar").fullCalendar("refetchEvents"), b(function () {
                    t.modal("show")
                })
            })
        })
    }

    function v() {
        $("#manage-appointment-modal").find(".step-actions").find(".action-update").off("click").on("click", function () {
            new CloneForm($("form#manage-appointment-form")).toIso8601().addClass("hidden").appendTo("body").submit()
        })
    }

    function g() {
        $("#appointments-by-week-chart, #general-widget-stats-container").trigger("reload.nt.appointments.stats")
    }

    function y() {
        g();
        var t = $("#appointments-calendar");
        t.length && (InternalAPI.cache.clear(), t.fullCalendar("refetchEvents"))
    }

    function b(t) {
        swal({title: I18n.t("frontend.defaults.errors.message"), type: "error"}, t)
    }

    $(document).ready(function () {
        var g = $("#manage-appointment-modal");
        g.on("nt.appointment.modal.prepare.submit.update", function () {
            n(), t(), o(), l(), v()
        }), g.on("nt.appointment.modal.enable.datetimepicker", function () {
            i()
        }), g.on("nt.appointment.modal.prepare.remote.create", function () {
            $(".wrapper").trigger("nt.patients.search.enable"), a(), t(), s(), e(), r(), p()
        }), g.on("nt.appointment.modal.prepare.remote.createWithPatient", function () {
            n(), t(), o(), e(), r(), f(), p()
        }), g.on("prepare.nt.appointment.modal.remote.update", function () {
            n(), t(), o(), l(), h()
        }), g.on("prepare.nt.appointment.modal.remote.update-and-cancel", function () {
            n(), t(), o(), l(), d(), h(), m()
        }), g.find(".patients-index-results").off("nt.patients.search.index.loaded").on("nt.patients.search.index.loaded", function () {
            u()
        }), g.on("nt.appointment.modal.goToConfirmationStep", function (e, i) {
            c(i.newAppointmentUrl, i.params), t(), o()
        })
    })
}(), function (t) {
    "use strict";

    function e(t) {
        var e = {path: !0, query: !0, hash: !0};
        return t ? (/^[a-z]+:/.test(t) && (e.protocol = !0, e.host = !0, /[-a-z0-9]+(\.[-a-z0-9])*:\d+/i.test(t) && (e.port = !0), /\/\/(.*?)(?::(.*?))?@/.test(t) && (e.user = !0, e.pass = !0)), e) : e
    }

    function i(t, i, n) {
        var u, f, p,
            h = r ? "file://" + (process.platform.match(/^win/i) ? "/" : "") + l("fs").realpathSync(".") : document.location.href;
        i || (i = h), r ? u = l("url").parse(i) : (u = document.createElement("a"), u.href = i);
        var m = e(i);
        p = i.match(/\/\/(.*?)(?::(.*?))?@/) || [];
        for (f in d) t[f] = m[f] ? u[d[f]] || "" : "";
        if (t.protocol = t.protocol.replace(/:$/, ""), t.query = t.query.replace(/^\?/, ""), t.hash = a(t.hash.replace(/^#/, "")), t.user = a(p[1] || ""), t.pass = a(p[2] || ""), t.port = c[t.protocol] == t.port || 0 == t.port ? "" : t.port, !m.protocol && /[^\/#?]/.test(i.charAt(0)) && (t.path = i.split("?")[0].split("#")[0]), !m.protocol && n) {
            var v = new o(h.match(/(.*\/)/)[0]), g = v.path.split("/"), y = t.path.split("/"),
                b = ["protocol", "user", "pass", "host", "port"], k = b.length;
            for (g.pop(), f = 0; k > f; f++) t[b[f]] = v[b[f]];
            for (; ".." === y[0];) g.pop(), y.shift();
            t.path = ("/" !== i.charAt(0) ? g.join("/") : "") + "/" + y.join("/")
        }
        t.path = t.path.replace(/^\/{2,}/, "/"), t.paths(("/" === t.path.charAt(0) ? t.path.slice(1) : t.path).split("/")), t.query = new s(t.query)
    }

    function n(t) {
        return encodeURIComponent(t).replace(/'/g, "%27")
    }

    function a(t) {
        return t = t.replace(/\+/g, " "), t = t.replace(/%([ef][0-9a-f])%([89ab][0-9a-f])%([89ab][0-9a-f])/gi, function (t, e, i, n) {
            var a = parseInt(e, 16) - 224, s = parseInt(i, 16) - 128;
            if (0 === a && 32 > s) return t;
            var o = parseInt(n, 16) - 128, r = (a << 12) + (s << 6) + o;
            return r > 65535 ? t : String.fromCharCode(r)
        }), t = t.replace(/%([cd][0-9a-f])%([89ab][0-9a-f])/gi, function (t, e, i) {
            var n = parseInt(e, 16) - 192;
            if (2 > n) return t;
            var a = parseInt(i, 16) - 128;
            return String.fromCharCode((n << 6) + a)
        }), t.replace(/%([0-7][0-9a-f])/gi, function (t, e) {
            return String.fromCharCode(parseInt(e, 16))
        })
    }

    function s(t) {
        for (var e, i = /([^=&]+)(=([^&]*))?/g; e = i.exec(t);) {
            var n = decodeURIComponent(e[1].replace(/\+/g, " ")), s = e[3] ? a(e[3]) : "";
            void 0 !== this[n] && null !== this[n] ? (this[n] instanceof Array || (this[n] = [this[n]]), this[n].push(s)) : this[n] = s
        }
    }

    function o(t, e) {
        i(this, t, !e)
    }

    var r = "undefined" == typeof window && "undefined" != typeof global && "function" == typeof require,
        l = r ? t.require : null,
        d = {protocol: "protocol", host: "hostname", port: "port", path: "pathname", query: "search", hash: "hash"},
        c = {ftp: 21, gopher: 70, http: 80, https: 443, ws: 80, wss: 443};
    s.prototype.toString = function () {
        var t, e, i = "", a = n;
        for (t in this) if (!(this[t] instanceof Function || null === this[t])) if (this[t] instanceof Array) {
            var s = this[t].length;
            if (s) for (e = 0; s > e; e++) i += i ? "&" : "", i += a(t) + "=" + a(this[t][e]); else i += (i ? "&" : "") + a(t) + "="
        } else i += i ? "&" : "", i += a(t) + "=" + a(this[t]);
        return i
    }, o.prototype.clearQuery = function () {
        for (var t in this.query) this.query[t] instanceof Function || delete this.query[t];
        return this
    }, o.prototype.queryLength = function () {
        var t, e = 0;
        for (t in this) this[t] instanceof Function || e++;
        return e
    }, o.prototype.isEmptyQuery = function () {
        return 0 === this.queryLength()
    }, o.prototype.paths = function (t) {
        var e, i = "", s = 0;
        if (t && t.length && t + "" !== t) {
            for (this.isAbsolute() && (i = "/"), e = t.length; e > s; s++) t[s] = !s && t[s].match(/^\w:$/) ? t[s] : n(t[s]);
            this.path = i + t.join("/")
        }
        for (t = ("/" === this.path.charAt(0) ? this.path.slice(1) : this.path).split("/"), s = 0, e = t.length; e > s; s++) t[s] = a(t[s]);
        return t
    }, o.prototype.encode = n, o.prototype.decode = a, o.prototype.isAbsolute = function () {
        return this.protocol || "/" === this.path.charAt(0)
    }, o.prototype.toString = function () {
        return (this.protocol && this.protocol + "://") + (this.user && n(this.user) + (this.pass && ":" + n(this.pass)) + "@") + (this.host && this.host) + (this.port && ":" + this.port) + (this.path && this.path) + (this.query.toString() && "?" + this.query) + (this.hash && "#" + n(this.hash))
    }, t[t.exports ? "exports" : "Url"] = o
}("undefined" != typeof module && module.exports ? module : window), function () {
    function t() {
        b.find("#conversation_conversation_category_id").on("change", function () {
            var t = $(this).find(":selected"), e = t.data("icon");
            b.find(".conversation-category-icon").text(e)
        })
    }

    function e() {
        var t = $(".widget-patient-preferences"), e = b.find("#conversation_recipient_id");
        e.select2({
            dropdownCssClass: "field-editable field-dropdown", formatSelection: i, formatNoMatches: function () {
                return I18n.t("frontend.defaults.errors.no_results")
            }, formatResult: o
        }).change(function () {
            l()
        }), l(), e.find("option").length > 1 ? (e.select2("val", null), b.find(".patient-avatar").addClass("hidden"), b.find(".tag-icon").addClass("hidden"), b.find(".placeholder-icon").removeClass("hidden")) : b.find(".placeholder-icon").addClass("hidden"), t.find(".conversations-enabled-editable").on("save", function (t, i) {
            var n = i.response.data.attributes.conversations_enabled, a = e.find(":selected");
            n ? a.data("disabled-messages", !1) : a.data("disabled-messages", !0), e.select2("val", e.val())
        })
    }

    function i(t) {
        var e, i = $(t.element).data("is-tag"), o = b.find(".conversation_is_tag").find("input"),
            r = b.find(".patient-input-group-addon").data("unlimited-patients"), l = $(t.element).data("can-send");
        if (i) {
            o.val(!0), a(), b.find("#conversation_send_by_email_now").prop({disabled: !1, checked: !1});
            var d = $(t.element).data("conversations-not-enabled"), c = $(t.element).data("patients-to-activate"),
                u = $(t.element).data("mobile-access-not-enabled"), f = "";
            if (c > 0 && !r) {
                var p = I18n.t("frontend.professionals.conversations.create.warn_nr_patients_to_activate", {count: c});
                f = "<i class='mdi mdi-alert-outline                     md-18 activate-patients' data-toggle='tooltip'                               data-placement='bottom' data-container='#" + b.attr("id") + "'           title='" + p + "'></i>"
            }
            if (l) if (d > 0 || u > 0) {
                var p = I18n.t("frontend.professionals.conversations.create.warn_disabled_messages_some_patients"),
                    h = "mdi-information-outline", m = "disabled-messages";
                u > 0 && (p = I18n.t("frontend.professionals.conversations.create.warn_disabled_mobile_access_some_patients")), e = n(h, t.text, b, p, m, f), setTimeout(function () {
                    b.find(".disabled-messages, .activate-patients").tooltip()
                }, 500)
            } else c > 0 && !r ? (e = "                                                         <span class='display-flex'>                                      <span class='flex-grow'>" + t.text + "</span>               " + f + "</span>", setTimeout(function () {
                b.find(".activate-patients").tooltip()
            }, 500)) : e = t.text; else {
                var p = I18n.t("frontend.professionals.conversations.create.cant_send_to_group"),
                    h = "mdi-alert-outline", m = "disabled-send-message";
                e = n(h, t.text, b, p, m, ""), setTimeout(function () {
                    b.find(".disabled-send-message").tooltip()
                }, 500), s()
            }
        } else {
            o.val(!1), a();
            var v = $(t.element).data("disabled-messages"), g = $(t.element).data("disabled-mobile-access");
            if (v || g) {
                var p = I18n.t("frontend.professionals.patients.conversations.disabled"), h = "mdi-information-outline",
                    m = "disabled-messages";
                g && (p = I18n.t("frontend.professionals.patients.mobile_access.disabled")), e = n(h, t.text, b, p, m, ""), setTimeout(function () {
                    b.find(".disabled-messages").tooltip()
                }, 500)
            } else e = t.text
        }
        return e
    }

    function n(t, e, i, n, a, s) {
        var e = "                                                     <span class='display-flex'>                                      <span class='flex-grow'>" + e + "</span>                    <i class='mdi " + t + " md-18 " + a + "'           data-toggle='tooltip'                                          data-placement='bottom'                                        data-container='#" + i.attr("id") + "'                     title='" + n + "'></i>                                 " + s + "</span>";
        return e
    }

    function a() {
        b.find("#conversation_conversation_category_id").removeAttr("disabled"), b.find("#conversation_subject").removeAttr("disabled"), b.find("#conversation_body").removeAttr("disabled"), b.find("#conversation_attachment").removeAttr("disabled"), b.find("#conversation_archived").removeAttr("disabled"), b.find("#conversation_send_by_email_now").removeAttr("disabled"), b.find(".submit").removeClass("hidden"), b.find(".submit-with-tooltip").addClass("hidden")
    }

    function s() {
        b.find("#conversation_conversation_category_id").attr("disabled", "disabled"), b.find("#conversation_subject").attr("disabled", "disabled"), b.find("#conversation_body").attr("disabled", "disabled"), b.find("#conversation_attachment").attr("disabled", "disabled"), b.find("#conversation_archived").attr("disabled", "disabled"), b.find("#conversation_send_by_email_now").attr("disabled", "disabled"), b.find(".submit").addClass("hidden"), b.find(".submit-with-tooltip").removeClass("hidden")
    }

    function o(t) {
        var e = $(t.element).data("is-tag"), i = "", n = t.text;
        return e ? i = "<i class='mdi mdi-tag md-12'></i>" : null != e && (i = "<i class='mdi mdi-account md-12'></i>"), (e || null != e) && (n = "                                                     <span class='display-flex'>                                  <span class='flex-grow'>" + t.text + "</span>           " + i + "</span>"), n
    }

    function r() {
        b.on("click", ".submit-with-tooltip", function (t) {
            t.preventDefault()
        })
    }

    function l() {
        var t = b.find("#conversation_recipient_id").find(":selected"), e = b.find("#conversation_send_by_email_now"),
            i = t.data("avatar-url"), n = t.data("generated-email");
        t.data("is-tag") ? (b.find(".placeholder-icon").addClass("hidden"), b.find(".patient-avatar").addClass("hidden"), b.find(".tag-icon").removeClass("hidden")) : (b.find(".placeholder-icon").addClass("hidden"), b.find(".tag-icon").addClass("hidden"), b.find(".patient-avatar").removeClass("hidden"), b.find(".patient-avatar").attr("src", i), n ? e.prop({
            disabled: !0,
            checked: !1
        }) : e.prop({disabled: !1}))
    }

    function d() {
        b.on("click", ".submit", function (t) {
            t.preventDefault();
            var e = b.find("form"), i = $(this), n = b.find("#conversation_recipient_id").find(":selected"),
                a = n.data("is-tag"), s = n.data("can-send"), o = n.data("patients-to-activate");
            e.valid() && (a ? s && (o > 0 ? c(e, i, o) : "all" == n[0].value ? u(e, i) : (Nutrium.functions.toggleButtonLoading(i), e.submit())) : (Nutrium.functions.toggleButtonLoading(i), e.submit()))
        })
    }

    function c(t, e, i) {
        swal({
            title: I18n.t("frontend.professionals.conversations.create.confirmation.title"),
            text: I18n.t("frontend.professionals.conversations.create.warn_nr_patients_to_activate", {count: i}),
            showCancelButton: !0,
            confirmButtonColor: Nutrium.colors.orange,
            confirmButtonText: I18n.t("frontend.defaults.views.words.send"),
            cancelButtonText: I18n.t("frontend.defaults.views.words.cancel"),
            closeOnConfirm: !0
        }, function () {
            Nutrium.functions.toggleButtonLoading(e), t.submit()
        })
    }

    function u(t, e) {
        swal({
            title: I18n.t("frontend.professionals.conversations.create.confirmation.title"),
            text: I18n.t("frontend.professionals.conversations.create.warn_send_to_all_patients"),
            showCancelButton: !0,
            confirmButtonColor: Nutrium.colors.orange,
            confirmButtonText: I18n.t("frontend.defaults.views.words.send"),
            cancelButtonText: I18n.t("frontend.defaults.views.words.cancel"),
            closeOnConfirm: !0
        }, function () {
            Nutrium.functions.toggleButtonLoading(e), t.submit()
        })
    }

    function f() {
        var t = b.find("form"), e = t.find("#conversation_subject").data("maxlength"),
            i = t.find("#conversation_body").data("maxlength");
        p(), t.validate({
            ignore: "",
            rules: {
                "conversation[subject]": {required: !0, maxlength: e},
                "conversation[conversation_category_id]": !0,
                "conversation[recipient_id]": {required: !0, editable_patient: !0},
                "conversation[body]": {conversation_body: !0, maxlength: i},
                "conversation[attachment]": {max_filesize_in_mb: 5}
            },
            errorPlacement: function (t, e) {
                e.closest(".message-body").length ? t.insertAfter(".message-body") : t.insertAfter(e.parent().parent())
            }
        })
    }

    function p() {
        $.validator.addMethod("conversation_body", function () {
            var t = b.find("#conversation_body").val().trim(), e = b.find("#conversation_attachment").val();
            return t.length > 0 || e.length > 0
        }, $.validator.messages.required), $.validator.addMethod("editable_patient", function (t, e) {
            return !!b.find("#conversation_recipient_id").find(":selected").data("is-tag") || $(e).find(":selected").data("can-be-edited")
        }, I18n.t("frontend.professionals.conversations.create.patient_not_editable_error")), $.validator.addMethod("max_filesize_in_mb", function (t, e, i) {
            if (e.files[0]) return e.files[0].size / Math.pow(2, 20) <= i;
            return this.optional(e)
        }, I18n.t("frontend.defaults.errors.messages.file_size_must_be_less_than"))
    }

    function h() {
        var t = b.find(".message-type"), e = b.find(".message-attachment");
        t.on("click", function () {
            $(this).hasClass("message-type-image") ? e.find("input").click() : $(this).hasClass("remove-attachment") && (e.addClass("hidden"), e.find("input").val(null), b.find("#conversation_attachment-error").remove(), $(this).addClass("hidden"))
        })
    }

    function m() {
        var t = b.find(".message-attachment");
        b.find(".remove-attachment").removeClass("hidden"), t.removeClass("hidden"), t.find("input").click()
    }

    function v() {
        var t = b.find(".message-attachment");
        Nutrium.functions.enableUploadedFilePreview({
            input: t.find("input"), callback: function (t) {
                t && (b.find("#conversation_body-error").remove(), m())
            }
        })
    }

    function g() {
        var t, e, i, n, a;
        $(".send-message-to-patient").on("click", function () {
            "send-message-to-patient" != t && (e = $(this).data("url"), i = $(this).data("conversation-category-id"), n = null, a = null, b.find("form").attr("action", e), b.find("#conversation_recipient_id").select2("readonly", !0), b.find("#conversation_conversation_category_id").prop("disabled", !1).removeClass("disabled").val(i), b.find("#conversation_conversation_category_id").val(i), b.find("#conversation_subject").val(n), b.find("#conversation_body").val(a), b.find(".message-attachment").addClass("hidden").find("img, a").remove(), b.find(".message-attachment input").val(null), b.find(".remove-attachment").addClass("hidden"), b.find(".message-types").removeClass("hidden"), b.find("#conversation_archived").prop("checked", !1), b.find("#conversation_send_by_email_now").prop("checked", !1), t = "send-message-to-patient"), b.modal()
        }), $(".send-meal-plan-to-patient").on("click", function () {
            var s = $("#widget-deliverables").find("select").val();
            if (b.find("#conversation_clinic_id").val(s), "send-meal-plan-to-patient" != t) {
                e = $(this).data("url"), i = $(this).data("conversation-category-id"), n = $(this).data("subject"), a = $(this).data("body");
                var o = b.find("#conversation_recipient_id").find(":selected"), r = $(this).data("filename"),
                    l = $("#print-meal-plan").attr("href"), d = Nutrium.templates.elements.file({name: r, url: l});
                b.find("form").attr("action", e), b.find("#conversation_recipient_id").select2("readonly", !0), b.find("#conversation_conversation_category_id").prop("disabled", !0).addClass("disabled").val(i), b.find("#conversation_subject").val(n), b.find("#conversation_body").val(a), b.find(".message-attachment").find("img, a").remove(), b.find(".message-attachment").removeClass("hidden").append(d), b.find(".message-types").addClass("hidden"), b.find("#conversation_archived").prop("checked", !0), o.data("generated-email") || b.find("#conversation_send_by_email_now").prop("checked", !0), t = "send-meal-plan-to-patient"
            }
            b.modal()
        })
    }

    function y() {
        b.on("shown.bs.modal", function () {
            var t = {lineHeight: 21, minNumberOfRows: 5, textarea: b.find("#conversation_body")};
            Nutrium.functions.textAreaAdjust(t)
        })
    }

    var b = "#new-conversation-modal";
    $(document).ready(function () {
        b = $(b), f(), t(), e(), h(), v(), g(), y(), d(), r()
    })
}();